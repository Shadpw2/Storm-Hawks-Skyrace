void fn005B60D0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn005B6640
//      fn005B6780
// MayUse:  ecx:[0..31]
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: edi esi esp
fn005B60D0_entry:
l005B60D0:
	word32 ecx_9 = Mem6[ecx + 4<32>:word32]
	word32 eax_10 = Mem6[ecx_9:word32]
	Mem11[ecx_9:word32] = ecx_9
	word32 ecx_12 = Mem11[ecx + 4<32>:word32]
	Mem13[ecx_12 + 4<32>:word32] = ecx_12
	Mem15[ecx + 8<32>:word32] = 0<32>
	branch eax_10 == Mem13[ecx + 4<32>:word32] l005B6103
l005B60EC:
l005B60F0:
	word32 edi_23 = Mem22[eax_10:word32]
	operator delete(eax_10)
	eax_10 = edi_23
	branch edi_23 != Mem26[ecx + 4<32>:word32] l005B60F0
l005B6102:
l005B6103:
	return
fn005B60D0_exit:


void fn005B6110(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn005B61E0
//      fn005B62A0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn005B6110_entry:
l005B6110:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem21[fs:0<32>:word32] = fp - 0xC<32>
	word32 eax_23 = Mem21[ecx + 8<32>:word32]
	word32 edx_24 = dwArg04
	branch 0x3FFFFFFF<32> - eax_23 >=u dwArg04 l005B6182
l005B6146:
	basic_string(fp - 0x50<32>, 0x8A80B0<32>)
	fn004019E0(fp - 0x34<32>, fp - 0x50<32>)
	call CxxThrowException (retsize: 4;)
		uses: ecx:fp - 0x34<32>,Stack +0004:fp - 0x34<32>,Stack +0008:0x999C68<32>,Stack +0030:0x990030<32>,Stack +0068:dwArg04
		defs: eax:eax_53,ecx:ecx_54,edx:edx_55
l005B6182:
	Mem62[ecx + 8<32>:word32] = eax_23 + edx_24
	Mem66[fs:0x00000000<p32>:word32] = eax_9
	return
fn005B6110_exit:


void fn005B61E0(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn005B65B0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp ebx edi edx esi esp
fn005B61E0_entry:
l005B61E0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem33[fs:0<32>:word32] = fp - 0x10<32>
	word32 edi_41 = dwArg08
l005B6220:
	branch edi_41 == dwArg0C l005B6281
l005B6281:
	Mem49[fs:0x00000000<p32>:word32] = eax_13
	return
fn005B61E0_exit:
l005B6225:
	word32 eax_71 = fn008119C0(dwArg04, Mem64[dwArg04 + 4<32>:word32], edi_41 + 8<32>)
	fn005B6110(ecx, 1<32>)
	Mem91[dwArg04 + 4<32>:word32] = eax_71
	Mem93[Mem91[eax_71 + 4<32>:word32]:word32] = eax_71
	edi_41 = Mem93[edi_41:word32]


void fn005B62A0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0045E0B0
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn005B62A0_entry:
l005B62A0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	Mem35[ecx:word32] = 0x8C38DC<32>
	branch Mem35[0x00A62CC8<p32>:word32] != 0<32> l005B63A3
l005B62E1:
	word32 eax_40 = operator new(0xC<32>)
	word32 esi_41 = eax_40
	branch eax_40 == 0<32> l005B6308
l005B6308:
	esi_41 = 0<32>
l005B62F9:
	Mem57[eax_40 + 4<32>:word32] = fn004C8820()
	Mem58[eax_40 + 8<32>:word32] = 0<32>
l005B630A:
	Mem64[0x00A62CC8<p32>:word32] = esi_41
	word32 eax_65 = operator new(8<32>)
	word32 esi_67 = eax_65
	branch eax_65 == 0<32> l005B633B
l005B633B:
	esi_67 = 0<32>
l005B632E:
	Mem83[eax_65:word32] = CreateMutexA(0<32>, 0<32>, 0<32>)
	Mem84[eax_65 + 4<32>:byte] = 0<8>
l005B633D:
	Mem89[0x00A62CD4<p32>:word32] = esi_67
	word32 eax_90 = operator new(0xC<32>)
	word32 esi_114 = eax_90
	branch eax_90 == 0<32> l005B636E
l005B636E:
	esi_114 = 0<32>
l005B635F:
	Mem108[eax_90 + 4<32>:word32] = fn004C8820()
	Mem109[eax_90 + 8<32>:word32] = 0<32>
l005B6370:
	Mem115[0x00A62CCC<p32>:word32] = esi_114
	word32 eax_116 = operator new(8<32>)
	word32 esi_117 = eax_116
	branch eax_116 == 0<32> l005B639B
l005B639B:
	esi_117 = 0<32>
l005B638E:
	Mem134[eax_116:word32] = CreateMutexA(0<32>, 0<32>, 0<32>)
	Mem135[eax_116 + 4<32>:byte] = 0<8>
l005B639D:
	Mem137[0x00A62CD0<p32>:word32] = esi_117
l005B63A3:
	word32 eax_139 = Mem138[0x00A62CD4<p32>:word32]
	WaitForSingleObject(Mem138[eax_139:word32], 0xFFFFFFFF<32>)
	Mem152[eax_139 + 4<32>:byte] = 1<8>
	word32 ecx_153 = Mem152[0x00A62CC8<p32>:word32]
	word32 esi_154 = Mem152[ecx_153 + 4<32>:word32]
	word32 eax_171 = fn008119C0(esi_154, Mem152[esi_154 + 4<32>:word32], fp - 0x18<32>)
	fn005B6110(ecx_153, 1<32>)
	Mem196[esi_154 + 4<32>:word32] = eax_171
	Mem198[Mem196[eax_171 + 4<32>:word32]:word32] = eax_171
	word32 edx_199 = Mem198[eax_139:word32]
	Mem202[eax_139 + 4<32>:byte] = 0<8>
	ReleaseMutex(edx_199)
	Mem207[fs:0x00000000<p32>:word32] = eax_9
	return
fn005B62A0_exit:


void fn005B65B0(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn005B6640
//      fn005B6780
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn005B65B0_entry:
l005B65B0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem33[fs:0<32>:word32] = fp - 0x10<32>
	word32 eax_38 = fn004C8820()
	Mem46[ecx + 4<32>:word32] = eax_38
	Mem47[ecx + 8<32>:word32] = 0<32>
	word32 ecx_48 = Mem47[dwArg04 + 4<32>:word32]
	fn005B61E0(ecx, Mem47[eax_38:word32], Mem47[ecx_48:word32], ecx_48)
	Mem70[fs:0x00000000<p32>:word32] = eax_13
	return
fn005B65B0_exit:


void fn005B6640()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn005A7560
// MayUse:  fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn005B6640_entry:
l005B6640:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	branch Mem30[0x00A62CC8<p32>:word32] == 0<32> l005B6768
l005B6674:
	word32 eax_33 = Mem30[0x00A62CD4<p32>:word32]
	WaitForSingleObject(Mem30[eax_33:word32], 0xFFFFFFFF<32>)
	Mem43[eax_33 + 4<32>:byte] = 1<8>
	fn005B65B0(fp - 0x18<32>, Mem43[0x00A62CC8<p32>:word32])
	fn005B60D0(Mem46[0x00A62CCC<p32>:word32])
	word32 eax_63 = Mem57[0x00A62CD4<p32>:word32]
	word32 edx_64 = Mem57[eax_63:word32]
	Mem68[eax_63 + 4<32>:byte] = 0<8>
	ReleaseMutex(edx_64)
	word32 esp_148 = fp - 0x2C<32>
	word32 esi_154 = Mem68[dwLoc14:word32]
	branch esi_154 == dwLoc14 l005B6734
l005B66CD:
l005B66D0:
	word32 eax_77 = Mem76[0x00A62CD0<p32>:word32]
	word32 eax_79 = Mem76[eax_77:word32]
	word32 esp_81 = esp_148 - 4<i32>
	Mem82[esp_81:word32] = 0xFFFFFFFF<32>
	Mem84[esp_81 - 4<i32>:word32] = eax_79
	WaitForSingleObject(Mem84[esp_81 - 4<i32>:HANDLE], Mem84[esp_81:DWORD])
	Mem87[eax_77 + 4<32>:byte] = 1<8>
	word32 eax_89 = Mem87[Mem87[0x00A62CCC<p32>:word32] + 4<32>:word32]
	word32 ecx_100 = Mem87[eax_89:word32]
	branch ecx_100 == eax_89 l005B6715
l005B66F1:
	word32 edi_94 = Mem87[esi_154 + 8<32>:word32]
l005B66F4:
	branch Mem87[ecx_100 + 8<32>:word32] == edi_94 l005B66FF
l005B66F9:
	ecx_100 = Mem87[ecx_100:word32]
	branch ecx_100 != eax_89 l005B66F4
l005B66FF:
	branch ecx_100 == eax_89 l005B6715
l005B6715:
	word32 eax_110 = Mem87[0x00A62CD0<p32>:word32]
	Mem116[esp_81:word32] = Mem87[eax_110:word32]
	Mem117[eax_110 + 4<32>:byte] = 0<8>
	ReleaseMutex(Mem117[esp_81:HANDLE])
	word32 ecx_145 = Mem117[esi_154 + 8<32>:word32]
	word32 eax_146 = Mem117[ecx_145:word32]
	word32 edx_151
	call Mem117[eax_146:word32] (retsize: 4;)
		uses: eax:eax_146,ecx:ecx_145,edx:edx_151,Stack +FFFFFFF0:dwLoc14
		defs: edx:edx_151,esp:esp_148
	esi_154 = Mem117[esi_154:word32]
l005B6703:
	word32 eax_155 = Mem87[0x00A62CD0<p32>:word32]
	esi_154 = Mem87[esi_154:word32]
	Mem159[esp_81:word32] = Mem87[eax_155:word32]
	Mem160[eax_155 + 4<32>:byte] = 0<8>
	ReleaseMutex(Mem160[esp_81:HANDLE])
	esp_148 = esp_81 + 4<i32>
l005B672E:
	branch esi_154 != Mem169[esp_148 + 0x18<32>:word32] l005B66D0
l005B6734:
	word32 eax_173 = Mem172[0x00A62CD0<p32>:word32]
	word32 eax_175 = Mem172[eax_173:word32]
	word32 esp_177 = esp_148 - 4<i32>
	Mem178[esp_177:word32] = 0xFFFFFFFF<32>
	Mem180[esp_177 - 4<i32>:word32] = eax_175
	WaitForSingleObject(Mem180[esp_177 - 4<i32>:HANDLE], Mem180[esp_177:DWORD])
	Mem197[eax_173 + 4<32>:byte] = 1<8>
	fn005B60D0(Mem197[0x00A62CCC<p32>:word32])
	word32 eax_204 = Mem197[0x00A62CD0<p32>:word32]
	Mem207[esp_177:word32] = Mem197[eax_204:word32]
	Mem208[eax_204 + 4<32>:byte] = 0<8>
	ReleaseMutex(Mem208[esp_177:HANDLE])
	fn005CAB80(esp_177 + 0x18<32>)
l005B6768:
	Mem225[fs:0x00000000<p32>:word32] = eax_9
	return
fn005B6640_exit:


void fn005B6780()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn005A7560
// MayUse:  fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn005B6780_entry:
l005B6780:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	branch Mem30[0x00A62CC8<p32>:word32] == 0<32> l005B68A9
l005B67B4:
	word32 eax_33 = Mem30[0x00A62CD4<p32>:word32]
	WaitForSingleObject(Mem30[eax_33:word32], 0xFFFFFFFF<32>)
	Mem43[eax_33 + 4<32>:byte] = 1<8>
	fn005B65B0(fp - 0x18<32>, Mem43[0x00A62CC8<p32>:word32])
	fn005B60D0(Mem46[0x00A62CCC<p32>:word32])
	word32 eax_63 = Mem57[0x00A62CD4<p32>:word32]
	word32 edx_64 = Mem57[eax_63:word32]
	Mem68[eax_63 + 4<32>:byte] = 0<8>
	ReleaseMutex(edx_64)
	word32 esp_148 = fp - 0x2C<32>
	word32 esi_154 = Mem68[dwLoc14:word32]
	branch esi_154 == dwLoc14 l005B6875
l005B680D:
l005B6810:
	word32 eax_77 = Mem76[0x00A62CD0<p32>:word32]
	word32 eax_79 = Mem76[eax_77:word32]
	word32 esp_81 = esp_148 - 4<i32>
	Mem82[esp_81:word32] = 0xFFFFFFFF<32>
	Mem84[esp_81 - 4<i32>:word32] = eax_79
	WaitForSingleObject(Mem84[esp_81 - 4<i32>:HANDLE], Mem84[esp_81:DWORD])
	Mem87[eax_77 + 4<32>:byte] = 1<8>
	word32 eax_89 = Mem87[Mem87[0x00A62CCC<p32>:word32] + 4<32>:word32]
	word32 ecx_100 = Mem87[eax_89:word32]
	branch ecx_100 == eax_89 l005B6855
l005B6831:
	word32 edi_94 = Mem87[esi_154 + 8<32>:word32]
l005B6834:
	branch Mem87[ecx_100 + 8<32>:word32] == edi_94 l005B683F
l005B6839:
	ecx_100 = Mem87[ecx_100:word32]
	branch ecx_100 != eax_89 l005B6834
l005B683F:
	branch ecx_100 == eax_89 l005B6855
l005B6855:
	word32 eax_110 = Mem87[0x00A62CD0<p32>:word32]
	Mem116[esp_81:word32] = Mem87[eax_110:word32]
	Mem117[eax_110 + 4<32>:byte] = 0<8>
	ReleaseMutex(Mem117[esp_81:HANDLE])
	word32 ecx_145 = Mem117[esi_154 + 8<32>:word32]
	word32 eax_146 = Mem117[ecx_145:word32]
	word32 edx_151
	call Mem117[eax_146 + 4<32>:word32] (retsize: 4;)
		uses: eax:eax_146,ecx:ecx_145,edx:edx_151,Stack +FFFFFFF0:dwLoc14
		defs: edx:edx_151,esp:esp_148
	esi_154 = Mem117[esi_154:word32]
l005B6843:
	word32 eax_155 = Mem87[0x00A62CD0<p32>:word32]
	esi_154 = Mem87[esi_154:word32]
	Mem159[esp_81:word32] = Mem87[eax_155:word32]
	Mem160[eax_155 + 4<32>:byte] = 0<8>
	ReleaseMutex(Mem160[esp_81:HANDLE])
	esp_148 = esp_81 + 4<i32>
l005B686F:
	branch esi_154 != Mem169[esp_148 + 0x18<32>:word32] l005B6810
l005B6875:
	word32 eax_173 = Mem172[0x00A62CD0<p32>:word32]
	word32 eax_175 = Mem172[eax_173:word32]
	word32 esp_177 = esp_148 - 4<i32>
	Mem178[esp_177:word32] = 0xFFFFFFFF<32>
	Mem180[esp_177 - 4<i32>:word32] = eax_175
	WaitForSingleObject(Mem180[esp_177 - 4<i32>:HANDLE], Mem180[esp_177:DWORD])
	Mem197[eax_173 + 4<32>:byte] = 1<8>
	fn005B60D0(Mem197[0x00A62CCC<p32>:word32])
	word32 eax_204 = Mem197[0x00A62CD0<p32>:word32]
	Mem207[esp_177:word32] = Mem197[eax_204:word32]
	Mem208[eax_204 + 4<32>:byte] = 0<8>
	ReleaseMutex(Mem208[esp_177:HANDLE])
	fn005CAB80(esp_177 + 0x18<32>)
l005B68A9:
	Mem225[fs:0x00000000<p32>:word32] = eax_9
	return
fn005B6780_exit:


void fn005B87B0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428850
//      fn004292A0
//      fn005AEBE0
// MayUse:  ecx:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn005B87B0_entry:
l005B87B0:
	word32 esi_15 = Mem12[ecx + 0x34<32>:word32]
	branch esi_15 == 0<32> l005B87D8
l005B87BE:
	branch fn00401AE0(esi_15) != 1<32> l005B87D8
l005B87CA:
	branch esi_15 == 0<32> l005B87D8
l005B87CE:
	word32 eax_29 = Mem12[esi_15:word32]
	word32 edx_37
	call Mem12[eax_29:word32] (retsize: 4;)
		uses: eax:eax_29,ecx:esi_15,edx:edx_37,Stack +0004:1<32>
		defs: edx:edx_37
l005B87D8:
	Mem42[ecx + 0x34<32>:word32] = 0<32>
	return
fn005B87B0_exit:


word32 fn005BB700(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00622B40
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn005BB700_entry:
l005BB700:
	fn007C2D70(dwArg04, dwArg08, dwArg0C)
	return dwArg04 + dwArg08 * 8<32>
fn005BB700_exit:


