word32 fn008119C0(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn005B61E0
//      fn005B62A0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn008119C0_entry:
l008119C0:
	word32 eax_6 = operator new(0xC<32>)
	branch eax_6 == 0<32> l008119D4
l008119CE:
	Mem12[eax_6:word32] = dwArg04
l008119D4:
	branch eax_6 == 4<32> l008119E1
l008119DB:
	Mem21[eax_6 + 4<32>:word32] = dwArg08
l008119E1:
	branch eax_6 == 8<32> l008119F0
l008119E8:
	Mem31[eax_6 + 8<32>:word32] = Mem28[dwArg0C:word32]
l008119F0:
	return eax_6
fn008119C0_exit:


word32 fn00811B80()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00406B00
//      fn00407CD0
//      fn0040D620
//      fn0042B310
// MayUse: 
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn00811B80_entry:
l00811B80:
	word32 eax_6 = operator new(0x30<32>)
	branch eax_6 == 0<32> l00811B94
l00811B8E:
	Mem11[eax_6:word32] = 0<32>
l00811B94:
	branch eax_6 == 4<32> l00811BA1
l00811B9B:
	Mem17[eax_6 + 4<32>:word32] = 0<32>
l00811BA1:
	branch eax_6 == 8<32> l00811BAE
l00811BA8:
	Mem23[eax_6 + 8<32>:word32] = 0<32>
l00811BAE:
	Mem25[eax_6 + 0x2C<32>:byte] = 1<8>
	Mem26[eax_6 + 0x2D<32>:byte] = 0<8>
	return eax_6
fn00811B80_exit:


word32 fn0081DDF0(word32 ebx, word32 esi, word32 edi, word128 xmm0, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut, ptr32 & xmm0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00420510
//      fn0042ACF0
//      fn0042DF20
// MayUse:  ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15] xmm0:[0..127]
// LiveOut: eax ebp ebx edi esi xmm0
// Trashed: SCZO eax ebp ebx ecx edi esi Top xmm0
// Preserved: esp
fn0081DDF0_entry:
l0081DDF0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem17[fs:0<32>:word32] = fp - 0xC<32>
	branch (Mem17[0x00A7487C<p32>:byte] & 1<8>) != 0<8> l0081DE70
l0081DE1D:
	Mem24[0x00A7487C<p32>:word32] = Mem17[0x00A7487C<p32>:word32] | 1<32>
	Mem29[0x00A74860<p32>:word32] = 0<32>
	Mem30[0x00A74864<p32>:word32] = 0<32>
	Mem31[0x00A74868<p32>:word32] = 0<32>
	xmm0 = __xorps(xmm0, xmm0)
	Mem38[0x00A74870<p32>:word32] = 0<32>
	Mem39[0x00A74874<p32>:word32] = 0<32>
	Mem40[0x00A74878<p32>:word32] = 0<32>
	Mem41[0x00A74850<p32>:real32] = SLICE(xmm0, real32, 0)
	Mem42[0x00A7484C<p32>:real32] = SLICE(xmm0, real32, 0)
	Mem43[0x00A74858<p32>:real32] = SLICE(xmm0, real32, 0)
	Mem44[0x00A74854<p32>:word32] = 0<32>
	ebx = fn00694C8C(ebx, esi, edi, out ebp, out esi, out edi)
l0081DE70:
	Mem65[fs:0x00000000<p32>:word32] = eax_9
	ebxOut = ebx
	ebpOut = ebp
	esiOut = esi
	ediOut = edi
	xmm0Out = xmm0
	return 0xA74848<32>
fn0081DDF0_exit:


byte fn0081DE90(word32 ecx, word32 ebp, word32 edi, real32 rArg04, ptr32 & xmm0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00420510
// MayUse:  ebp:[0..31] ecx:[0..31] edi:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax xmm0
// Trashed: SCZOP eax ecx edx Top xmm0 xmm1 xmm2
// Preserved: esi esp
fn0081DE90_entry:
l0081DE90:
	word32 eax_9 = Mem6[ecx:word32]
	branch eax_9 != 1<32> l0081DEE5
l0081DEE5:
	branch eax_9 != 2<32> l0081DF8E
l0081DEEE:
	word128 xmm0_14 = CONVERT(Mem6[ecx + 4<32>:real32], real32, uint128)
	word128 xmm1_15 = CONVERT(rArg04, real32, uint128)
	real32 v17_18 = SLICE(xmm0_14, real32, 0) + SLICE(xmm1_15, real32, 0)
	word32 edx_16 = Mem6[ecx + 0x18<32>:word32]
	word32 ecx_17 = Mem6[ecx + 0xC<32>:word32]
	Mem21[ecx + 4<32>:real32] = v17_18
	Mem22[ecx + 8<32>:real32] = SLICE(xmm1_15, real32, 0)
	xmm0 = SEQ(SLICE(xmm0_14, word96, 32), v17_18)
	branch v17_18 <u Mem22[edx_16 + ecx_17 * 4<32>:real32] l0081DF41
l0081DF13:
	word32 eax_36
	branch edx_16 != 0<32> l0081DF1D
l0081DF1D:
	eax_36 = Mem33[ecx + 0x1C<32>:word32] - edx_16 >> 2<32>
l0081DF19:
	eax_36 = 0<32>
l0081DF25:
	word32 ecx_43 = Mem33[ecx + 0xC<32>:word32]
	branch ecx_43 >= eax_36 l0081DF41
l0081DF2C:
	Mem48[ecx + 0xC<32>:word32] = ecx_43 + 1<32>
	branch SLICE(CONVERT(Mem48[ecx + 4<32>:real32], real32, uint128), real32, 0) >=u Mem48[edx_16 + (ecx_43 + 1<32>) * 4<32>:real32] l0081DF13
l0081DF41:
	word32 ecx_66
	branch edx_16 != 0<32> l0081DF4B
l0081DF4B:
	ecx_66 = Mem63[ecx + 0x1C<32>:word32] - edx_16 >> 2<32>
l0081DF47:
	ecx_66 = 0<32>
l0081DF53:
	word32 eax_73 = Mem63[ecx + 0xC<32>:word32]
	branch eax_73 >= ecx_66 l0081DF8E
l0081DF8E:
	xmm0Out = xmm0
	return 0<8>
l0081DF5A:
	word128 xmm1_89 = CONVERT(Mem63[edx_16 - 4<32> + eax_73 * 4<32>:real32], real32, uint128)
	Mem104[ecx + 0x10<32>:real32] = (v17_18 - SLICE(xmm1_89, real32, 0)) / (SLICE(CONVERT(Mem63[edx_16 + eax_73 * 4<32>:real32], real32, uint128), real32, 0) - SLICE(xmm1_89, real32, 0))
	Mem105[0x00A74840<p32>:word32] = eax_73
	word128 xmm0_106 = CONVERT(Mem105[ecx + 0x10<32>:real32], real32, uint128)
	Mem107[0x00A74844<p32>:real32] = SLICE(xmm0_106, real32, 0)
	xmm0Out = xmm0_106
	return 1<8>
l0081DE9A:
	word128 xmm1_112 = CONVERT(Mem6[ecx + 4<32>:real32], real32, uint128)
	Mem114[ecx + 0xC<32>:word32] = Mem6[ecx + 0xC<32>:word32] + 1<32>
	word128 xmm0_111 = CONVERT(rArg04, real32, uint128)
	Mem120[ecx + 8<32>:real32] = SLICE(xmm0_111, real32, 0)
	word128 xmm0_123 = __xorps(xmm0_111, xmm0_111)
	Mem127[ecx + 4<32>:real32] = SLICE(xmm1_112, real32, 0) + SLICE(xmm0_111, real32, 0)
	Mem128[ecx + 0x10<32>:real32] = SLICE(xmm0_123, real32, 0)
	fn00412EA0(ecx + 0x14<32>, ebp, edi, ecx + 4<32>)
	word32 eax_141 = Mem128[ecx + 0xC<32>:word32]
	Mem142[0x00A74840<p32>:word32] = eax_141
	word128 xmm0_143 = CONVERT(Mem142[ecx + 0x10<32>:real32], real32, uint128)
	Mem144[0x00A74844<p32>:real32] = SLICE(xmm0_143, real32, 0)
	xmm0Out = xmm0_143
	return 1<8>
fn0081DE90_exit:


