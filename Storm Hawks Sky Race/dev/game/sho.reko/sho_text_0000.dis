word32 fn00401080(word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004014B0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp edi esi esp
fn00401080_entry:
l00401080:
	word32 edi_194
	word32 esi_193
	word32 eax_7 = Mem0[0x00A14188<p32>:word32] ^ fp - 0x160<32>
	word32 ebp_118 = 0<32>
	esi_193 = esi
	edi_194 = edi
	branch strtok(dwArg04, fp - 0x160<32>) == 0<32> l0040125C
l004010D8:
l004010E0:
	word32 eax_39 = Mem38[fp - 0x158<32> + ebp_118 * 4<32>:word32]
	word32 edi_40 = eax_39
	esi_193 = 0x8A6970<32>
	word32 ecx_42 = 6<32>
	bool v32_589 = true
l004010F2:
	branch ecx_42 == 0<32> l004010F4
l004010F2_1:
	v32_589 = Mem38[esi_193:byte] == Mem38[edi_761:byte]
	esi_193 = esi_193 + 1<i32>
	edi_40 = edi_761 + 1<i32>
	ecx_42 = ecx_42 - 1<32>
	edi_761 = edi_40
	branch Mem38[esi_193:byte] != Mem38[edi_761:byte] l004010F2
l004010F4:
	word32 edx_294
	branch v32_589 l0040111E
l004010F6:
	word32 edi_60 = eax_39
	esi_193 = 0x8A696C<32>
	word32 ecx_62 = 3<32>
	edx_294 = 0<32>
	bool v36_593 = true
l00401104:
	branch ecx_62 == 0<32> l00401106
l00401104_2:
	v36_593 = Mem38[esi_193:byte] == Mem38[edi_763:byte]
	esi_193 = esi_193 + 1<i32>
	edi_60 = edi_763 + 1<i32>
	ecx_62 = ecx_62 - 1<32>
	edi_763 = edi_60
	branch Mem38[esi_193:byte] != Mem38[edi_763:byte] l00401104
l00401106:
	branch v36_593 l0040111E
l00401108:
	edi_194 = eax_39
	esi_193 = 0x8A6960<32>
	word32 ecx_82 = 0xA<32>
	bool v40_597 = false
l00401116:
	branch ecx_82 == 0<32> l00401118
l00401116_3:
	v40_597 = Mem38[esi_193:byte] != Mem38[edi_194:byte]
	esi_193 = esi_193 + 1<i32>
	edi_194 = edi_194 + 1<i32>
	ecx_82 = ecx_82 - 1<32>
	branch Mem38[esi_193:byte] != Mem38[edi_194:byte] l00401116
l00401118:
	branch v40_597 l00401238
l0040111E:
	edx_294 = 0<32>
	edi_194 = strtok
	ebp_118 = ebp_118 + 1<32>
	word32 eax_119 = strtok(0<32>, fp - 0x160<32>)
	branch eax_119 == 0<32> l00401288
l0040113B:
	branch Mem110[eax_119:byte] != 0x22<8> l00401234
l00401234:
	Mem126[fp - 0x158<32> + ebp_118 * 4<32>:word32] = eax_119
l00401144:
	word32 ecx_127 = eax_119
l00401150:
	ecx_127 = ecx_766 + 1<32>
	ecx_766 = ecx_127
	branch Mem110[ecx_766:byte] != 0<8> l00401150
l00401159:
	branch Mem110[ecx_127 - (eax_119 + 1<32>) - 1<32> + eax_119:byte] != 0x22<8> l0040118E
l0040118E:
	word32 eax_142 = eax_119 + 1<32>
	word32 edx_145 = fp - 0x108<32> - (eax_119 + 1<32>)
l00401197:
	byte cl_149 = Mem148[eax_142:byte]
	Mem151[edx_145 + eax_142:byte] = cl_149
	eax_142 = eax_142 + 1<32>
	branch cl_149 != 0<8> l00401197
l004011A3:
	word32 eax_164 = strtok(0<32>, fp - 0x15C<32>)
	word32 edi_167 = fp - 0x109<32> + 1<32>
l004011B6:
	edi_167 = edi_767 + 1<32>
	edi_767 = edi_167
	branch Mem161[edi_767 + 0<32>:byte] != 0<8> l004011B6
l004011C0:
	Mem177[edi_167:word16] = Mem161[0x008A695C<p32>:word16]
	eax_182 = eax_164
l004011D0:
	word32 eax_182
	eax_182 = eax_768 + 1<32>
	eax_768 = eax_182
	branch Mem177[eax_768:byte] != 0<8> l004011D0
l004011D9:
	word32 eax_192 = eax_182 - eax_164
	esi_193 = eax_164
	edi_194 = fp - 0x109<32> + 1<32>
l004011E4:
	edi_194 = edi_769 + 1<32>
	edi_769 = edi_194
	branch Mem177[edi_769 + 0<32>:byte] != 0<8> l004011E4
l004011EE:
	word32 ecx_205 = eax_192 >>u 2<32>
l004011F3:
	branch ecx_205 == 0<32> l004011F5
l004011F5:
	word32 ecx_210 = eax_192 & 3<32>
l004011FA:
	branch ecx_210 == 0<32> l004011FC
l004011FA_1:
	Mem218[edi_194:byte] = Mem215[esi_193:byte]
	esi_193 = esi_193 + 1<i32>
	edi_194 = edi_194 + 1<i32>
	ecx_210 = ecx_210 - 1<32>
l004011F3_1:
	Mem226[edi_194:word32] = Mem223[esi_193:word32]
	esi_193 = esi_193 + 4<i32>
	edi_194 = edi_194 + 4<i32>
	ecx_205 = ecx_205 - 1<32>
l00401162:
	word32 ecx_230 = eax_119
	esi_193 = eax_119 + 1<32>
l00401167:
	byte dl_234 = Mem110[ecx_230:byte]
	ecx_230 = ecx_230 + 1<32>
	branch dl_234 != 0<8> l00401167
l00401170:
	Mem242[ecx_230 - (eax_119 + 1<32>) - 1<32> + eax_119:byte] = dl_234
	word32 eax_243 = eax_119 + 1<32>
	word32 edx_246 = fp - 0x108<32> - (eax_119 + 1<32>)
l00401180:
	byte cl_250 = Mem249[eax_243:byte]
	Mem252[edx_246 + eax_243:byte] = cl_250
	eax_243 = eax_243 + 1<32>
	branch cl_250 != 0<8> l00401180
l0040118C:
l004011FC:
	word32 eax_262 = fp - 0x108<32>
l00401203:
	eax_262 = eax_770 + 1<32>
	eax_770 = eax_262
	branch Mem588[eax_770:byte] != 0<8> l00401203
l0040120C:
	word32 eax_278 = fn00694B89(eax_262 - (fp - 0x107<32>) + 1<32>)
	Mem292[fp - 0x158<32> + ebp_118 * 4<32>:word32] = eax_278
	word32 ecx_293 = fp - 0x108<32>
	edx_294 = eax_278
l00401224:
	byte al_297 = Mem296[ecx_293:byte]
	Mem299[edx_294:byte] = al_297
	ecx_293 = ecx_293 + 1<32>
	edx_294 = edx_294 + 1<32>
	branch al_297 != 0<8> l00401224
l00401232:
l00401238:
	ebp_118 = ebp_118 + 1<32>
	branch ebp_118 >= 0x14<32> l00401288
l00401288:
	word32 ecx_759
	return fn00694B8E(0<32>, eax_7 ^ fp - 0x160<32>, edx_294, ebx, ebp, esi, edi, es, ds, ebp, out ecx_759)
l00401240:
	word32 eax_505 = strtok(0<32>, fp - 0x160<32>)
	Mem509[fp - 0x158<32> + ebp_118 * 4<32>:word32] = eax_505
	branch eax_505 != 0<32> l004010E0
l0040125C:
	word32 ecx_758
	word32 edx_552
	return fn00694B8E(SLICE(CONVERT(fn004046D0(ebx, ebp_118, esi_193, edi_194, es, ds, ebp_118, fp - 0x158<32>, out edx_552), byte, uint32), byte, 0) == 0<8>, eax_7 ^ fp - 0x160<32>, edx_552, ebx, ebp, esi, edi, es, ds, ebp, out ecx_758)
fn00401080_exit:


word32 fn004014B0(word32 ebx, word32 esi, word32 edi, selector es, selector ds, word128 xmm0, word32 dwArg04, word32 dwArg0C, word32 dwArg10, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Win32CrtStartup
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] xmm0:[0..127]
// LiveOut: eax ebp esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp FPUF Top xmm0 xmm1 xmm2
// Preserved:
fn004014B0_entry:
l004014B0:
	Mem33[fs:0<32>:word32] = fp - 0x10<32>
	word32 ebp_372 = fp - 4<i32>
	branch fn00401080(ebx, fp - 4<i32>, esi, edi, es, ds, dwArg0C) == 0<32> l00401630
l004014F2:
	LoadCursorA(dwArg04, 0x3EA<32>)
	branch RegisterClassA(fp - 0x3C<32>) == 0<16> l00401630
l00401540:
	word32 eax_85 = GetSystemMetrics(0x20<32>)
	GetSystemMetrics(0x21<32>)
	word32 eax_123 = CreateWindowExA(0<32>, 0x8A694C<32>, Mem106[0x00A0D00C<p32>:word32], 0xCF0000<32>, 0x80000000<32>, 0x80000000<32>, eax_85 + 0x280<32> + eax_85, GetSystemMetrics(4<32>) + 0x1E0<32>, 0<32>, 0<32>, dwArg04, 0<32>)
	ShowWindow(eax_123, dwArg10)
	UpdateWindow(eax_123)
	branch PeekMessageA(fp - 0x74<32>, 0<32>, 0<32>, 0<32>, 1<32>) == 0<32> l004015E6
l004015BA:
l004015C0:
	TranslateMessage(fp - 0x74<32>)
	DispatchMessageA(fp - 0x74<32>)
	branch PeekMessageA(fp - 0x74<32>, 0<32>, 0<32>, 0<32>, 1<32>) != 0<32> l004015C0
l004015E6:
	timeBeginPeriod(1<32>)
	word32 ebp_210
	word32 edi_213
	word32 esi_215
	word128 xmm0_218
	word32 ebx_211 = fn0042B310(fp - 0x5AC<32>, fp - 4<i32>, es, ds, xmm0, out ebp_210, out esi_215, out edi_213, out xmm0_218)
	word32 esp_216 = <invalid>
	Mem229[esp_216:word32] = esi_215
	Mem231[esp_216 - 4<i32>:word32] = ebx_211
	Mem233[ebp_210 - 4<32>:byte] = 1<8>
	word32 esp_247 = esp_216 + 4<32>
	word32 ebp_235
	word32 edi_237
	word128 xmm0_240
	branch SLICE(CONVERT(fn0042F170(ebp_210 - 0x5A8<32>, ebx_211, ebp_210, edi_213, es, ds, xmm0_218, Mem233[esp_216 - 4<i32>:word32], Mem233[esp_216:word32], out ebp_235, out edi_237, out xmm0_240), uint8, uint32), byte, 0) != 0<8> l00401646
l00401646:
	Mem253[0x00A53ED1<p32>:byte] = 1<8>
l00401660:
	branch Mem255[0x00A53ED2<p32>:byte] != 0<8> l004016B3
l00401669:
	word32 esp_259 = esp_247 - 4<i32>
	Mem260[esp_259:word32] = 1<32>
	Mem262[esp_259 - 4<i32>:word32] = 0<32>
	Mem264[esp_259 - 8<i32>:word32] = 0<32>
	Mem266[esp_259 - 12<i32>:word32] = 0<32>
	Mem270[esp_259 - 16<i32>:word32] = ebp_235 - 0x54<32>
	word32 eax_283
	call edi_237 (retsize: 4;)
		uses: eax:ebp_235 - 0x54<32>
		defs: eax:eax_283,esp:esp_282
	branch eax_283 == 0<32> l00401696
l00401696:
	Mem293[esp_247 - 4<i32>:word32] = CONVERT(Mem270[0x00A53ED0<p32>:byte], byte, word32)
	xmm0_511 = xmm0_240
	branch SLICE(CONVERT(fn0042ACF0(ebp_235 - 0x5A8<32>, 0x12<32>, edi_237, es, ds, xmm0_511, Mem293[esp_247 - 4<i32>:byte], out xmm0_240), uint8, uint32), byte, 0) != 0<8> l00401660
l004016AD:
	Mem314[esp_247 - 4<i32>:word32] = 0<32>
	PostQuitMessage(Mem314[esp_247 - 4<i32>:int32])
l0040167B:
	branch Mem270[ebp_235 - 0x50<32>:word32] == 0x12<32> l004016B3
l004016B3:
	Mem325[ebp_235 - 4<32>:byte] = 0<8>
	word32 ebp_329 = fn0042A250(ebp_235 - 0x5A8<32>, ebp_235, edi_237)
	word32 esp_338 = esp_247 - 4<i32>
	Mem339[esp_338:word32] = 1<32>
	timeEndPeriod(Mem339[esp_338:UINT])
	Mem344[fs:0x00000000<p32>:word32] = Mem339[ebp_329 - 0xC<32>:word32]
	ebpOut = Mem344[ebp_329:word32]
	return 1<32>
l00401680:
	Mem357[esp_247 - 4<i32>:word32] = ebp_235 - 0x54<32>
	TranslateMessage(Mem357[esp_247 - 4<i32>:(ptr32 MSG)])
	Mem362[esp_247 - 4<i32>:word32] = ebp_235 - 0x54<32>
	DispatchMessageA(Mem362[esp_247 - 4<i32>:(ptr32 MSG)])
l0040161A:
	Mem366[esp_216:word32] = esi_215
	DestroyWindow(Mem366[esp_216:HWND])
	Mem370[ebp_235 - 4<32>:byte] = 0<8>
	ebp_372 = fn0042A250(ebp_235 - 0x5A8<32>, ebp_235, edi_237)
l00401630:
	Mem387[fs:0x00000000<p32>:word32] = Mem384[ebp_372 - 0xC<32>:word32]
	ebpOut = Mem387[ebp_372:word32]
	return 0<32>
fn004014B0_exit:


word32 fn00401700(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00657290
//      fn007B2D10
// MayUse:  ecx:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn00401700_entry:
l00401700:
	return Mem0[Mem0[ecx:word32] + 8<32>:word32]
fn00401700_exit:


void fn00401730(byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A250
// MayUse:  fs:[0..15] Stack +0004:[0..7]
// LiveOut:
// Trashed: eax ecx edx Top
// Preserved: esp
fn00401730_entry:
l00401730:
	Mem10[Mem0[Mem0[fs:0x0000002C<p32>:word32] + Mem0[0x00A6B0F4<p32>:word32] * 4<32>:word32] + 4<32>:byte] = bArg04
	return
fn00401730_exit:


word32 fn004017C0(word32 dwArg04, word32 dwArg08, ptr32 & ecxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004023A0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax ecx edi esi esp
// Trashed: SCZO eax ecx edi edx esi esp Top
// Preserved:
fn004017C0_entry:
l004017C0:
	word32 eax_23 = find_last_of(dwArg08, 0x8A6990<32>, Mem6[&npos:word32])
	word32 ecx_27 = Mem22[&npos:word32]
	branch eax_23 == ecx_27 l00401808
l00401808:
	basic_string(dwArg04, 0x8A698F<32>)
	ecxOut = 0<32>
	esiOut = esi
	ediOut = edi
	return <invalid>
l004017F4:
	al_52 = CONVERT(substr(dwArg08, dwArg04, eax_23 + 1<32>), basic_string, uint8)
	ecxOut = esi
	esiOut = edi
	ediOut = ecx_27
	return <invalid>
fn004017C0_exit:


byte fn00401880(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404FF0
// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: esi esp
fn00401880_entry:
l00401880:
	branch strchr(c_str(dwArg04), 0x3A<32>) != 0<32> l004018D8
l0040189D:
	branch Mem13[c_str(dwArg04):byte] == 0x5C<8> l004018D8
l004018AA:
	branch Mem13[c_str(dwArg04):byte] == 0x2F<8> l004018D8
l004018B7:
	branch Mem13[c_str(dwArg04):byte] == 0x2F<8> l004018D8
l004018C4:
	branch Mem13[c_str(dwArg04):byte] == 0x5C<8> l004018D8
l004018D8:
	return 0<8>
l004018D1:
	return 1<8>
fn00401880_exit:


word32 fn004018E0(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403570
// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn004018E0_entry:
l004018E0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem27[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(dwArg04, dwArg08)
	word32 eax_46 = find_first_of(dwArg04, 0x8A6994<32>, 0<32>)
	branch eax_46 < 0<32> l00401989
l00401945:
	branch eax_46 >= size(dwArg04) l00401989
l00401951:
	operator =(dwArg04, SEQ(SLICE(&npos, word24, 8), CONVERT(substr(dwArg04, fp - 0x28<32>, eax_46 + 1<32>), basic_string, uint8)))
	~basic_string(fp - 0x2C<32>)
l00401989:
	Mem87[fs:0x00000000<p32>:word32] = eax_9
	return dwArg04
fn004018E0_exit:


void fn004019E0(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401A70
//      fn004070F0
//      fn004090B0
//      fn0040AB90
//      fn0040C130
//      fn0040D9C0
//      fn0040DA20
//      fn0040DAE0
//      fn0040DCC0
//      fn00415CC0
//      fn00415D80
//      fn0041BB30
//      fn00420860
//      fn00420AA0
//      fn00424A20
//      fn00426100
//      fn0044C620
//      fn004DB650
//      fn004DB6B0
//      fn005A3780
//      fn005B6110
//      fn00621430
//      fn00621490
//      fn006214F0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: esi esp
fn004019E0_entry:
l004019E0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem23[fs:0<32>:word32] = fp - 0xC<32>
	exception(ecx)
	Mem32[ecx:word32] = 0x990024<32>
	basic_string(ecx + 0xC<32>, dwArg04)
	Mem37[fs:0x00000000<p32>:word32] = eax_9
	return
fn004019E0_exit:


void fn00401A70()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401EC0
//      fn00403950
// MayUse:  fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn00401A70_entry:
l00401A70:
	Mem20[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(fp - 0x50<32>, 0x8A6998<32>)
	fn004019E0(fp - 0x34<32>, fp - 0x50<32>)
	word32 ecx_46
	call CxxThrowException (retsize: 4;)
		uses: ecx:fp - 0x34<32>,Stack +0004:fp - 0x34<32>,Stack +0008:0x999C68<32>,Stack +002C:0x990030<32>
		defs: ecx:ecx_46
	int3()
	__lock()
	Mem50[ecx_46 + 4<32>:word32] = Mem43[ecx_46 + 4<32>:word32] + 1<32>
	return
fn00401A70_exit:


void fn00401AD0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004023A0
//      fn004028E0
//      fn00402A20
//      fn00404190
//      fn00405CE0
//      fn00406B00
//      fn0040E370
//      fn0040E500
//      fn0040E780
//      fn0040ED30
//      fn0040EDE0
//      fn0040FF40
//      fn004100F0
//      fn00412E10
//      fn00413A20
//      fn00414B80
//      fn004173D0
//      fn00417430
//      fn00417AF0
//      fn00417C60
//      fn00418D40
//      fn00419800
//      fn0041C4C0
//      fn0041E670
//      fn0041EA60
//      fn00424E30
//      fn00424EC0
//      fn00424FD0
//      fn0042B310
//      fn0042DC50
//      fn0046E280
//      fn005C9B40
//      fn005C9BA0
//      fn005CF0C0
//      fn007B1F60
//      fn007B20A0
//      fn007B2480
// MayUse:  ecx:[0..31]
// LiveOut:
// Trashed: SCZO Top
// Preserved: esp
fn00401AD0_entry:
l00401AD0:
	__lock()
	Mem7[ecx + 4<32>:word32] = Mem0[ecx + 4<32>:word32] + 1<32>
	return
fn00401AD0_exit:


word32 fn00401AE0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402310
//      fn004023A0
//      fn00402A20
//      fn00402B60
//      fn00404190
//      fn00405CE0
//      fn00407070
//      fn0040E370
//      fn0040E500
//      fn0040E780
//      fn0040ED30
//      fn0040EDE0
//      fn0040EEA0
//      fn0040EF50
//      fn0040FF40
//      fn004100F0
//      fn00413A20
//      fn00414B80
//      fn004173D0
//      fn00417430
//      fn00417AF0
//      fn00418D40
//      fn00419800
//      fn0041C0B0
//      fn0041C4C0
//      fn0041EA60
//      fn00424E30
//      fn0042B310
//      fn0042DC50
//      fn0044F600
//      fn0046E280
//      fn005AEED0
//      fn005B87B0
//      fn005C9B40
//      fn005C9BA0
//      fn005CF0C0
//      fn007B1F60
//      fn007B20A0
//      fn007B2D10
// MayUse:  ecx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: esp
fn00401AE0_entry:
l00401AE0:
	__lock()
	Mem7[ecx + 4<32>:word32] = __xadd(Mem0[ecx + 4<32>:word32], 0xFFFFFFFF<32>)
	return 0xFFFFFFFF<32>
fn00401AE0_exit:


word32 fn00401C70(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004023A0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn00401C70_entry:
l00401C70:
	word32 edx_168
	word32 ebx_169
	word32 ebp_170
	word32 edi_171
	word32 eax_17 = Mem10[fn004048C0(ebx, ebp, esi, edi, es, ds, out edx_168, out ebx_169, out ebp_170, out edi_171):word32]
	word32 edx_18 = Mem10[eax_17 + 0x18<32>:word32]
	branch edx_18 == 0<32> l00401D09
l00401C8B:
	word32 ecx_24 = Mem10[eax_17 + 0x1C<32>:word32] - edx_18
	word32 edx_28 = SLICE(ecx_24 *s64 0x92492493<32>, word32, 32) + ecx_24
	branch (edx_28 >> 4<32> >>u 0x1F<32>) + (edx_28 >> 4<32>) == 0<32> l00401D09
l00401CA5:
	branch dwArg08 < 0<32> l00401D09
l00401CAD:
	word32 eax_60
	word32 edx_172
	word32 ebx_173
	word32 ebp_174
	word32 edi_175
	word32 eax_45 = Mem10[fn004048C0(ebx, ebp, dwArg08, edi, es, ds, out edx_172, out ebx_173, out ebp_174, out edi_175):word32]
	word32 edx_46 = Mem10[eax_45 + 0x18<32>:word32]
	branch edx_46 != 0<32> l00401CC2
l00401CC2:
	word32 ecx_52 = Mem10[eax_45 + 0x1C<32>:word32] - edx_46
	word32 edx_56 = SLICE(ecx_52 *s64 0x92492493<32>, word32, 32) + ecx_52
	eax_60 = (edx_56 >> 4<32> >>u 0x1F<32>) + (edx_56 >> 4<32>)
l00401CBE:
	eax_60 = 0<32>
l00401CDA:
	branch dwArg08 >= eax_60 l00401D09
l00401D09:
	basic_string(dwArg04, 0x8A698F<32>)
	return
l00401CDE:
	word32 edx_176
	word32 ebx_177
	word32 ebp_178
	word32 edi_179
	basic_string(dwArg04, Mem10[Mem10[fn004048C0(ebx, ebp, dwArg08, edi, es, ds, out edx_176, out ebx_177, out ebp_178, out edi_179):word32] + 0x18<32>:word32] + (dwArg08 * 8<32> - dwArg08) * 4<32>)
	return
fn00401C70_exit:


word32 fn00401D40(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403950
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: ebx edi esi esp
fn00401D40_entry:
l00401D40:
	word32 esi_22 = dwArg04
	branch dwArg04 == dwArg08 l00401D64
l00401D4E:
l00401D53:
	eax = operator =(esi_22, dwArg0C)
	esi_22 = esi_22 + 0x1C<32>
	branch esi_22 != dwArg08 l00401D53
l00401D63:
l00401D64:
	return eax
fn00401D40_exit:


byte fn00401EC0(word32 ecx, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004085A0
//      fn00409CE0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn00401EC0_entry:
l00401EC0:
	Mem15[ecx + 4<32>:word32] = 0<32>
	Mem16[ecx + 8<32>:word32] = 0<32>
	Mem17[ecx + 0xC<32>:word32] = 0<32>
	branch dwArg04 != 0<32> l00401EDE
l00401EDE:
	branch dwArg04 <=u 0x9249249<32> l00401EEB
l00401EE6:
	fn00401A70()
l00401EEB:
	word32 ecx_95
	word32 edx_96
	word32 eax_35 = fn0040DDE0(dwArg04, out ecx_95, out edx_96)
	Mem48[ecx + 4<32>:word32] = eax_35
	Mem49[ecx + 8<32>:word32] = eax_35
	word32 edx_46 = eax_35 + (dwArg04 * 8<32> - dwArg04) * 4<32>
	Mem52[ecx + 0xC<32>:word32] = edx_46
	edxOut = edx_46
	return 1<8>
l00401ED7:
	edxOut = edx
	return 0<8>
fn00401EC0_exit:


void fn00402120(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403950
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebx edi esi esp
fn00402120_entry:
l00402120:
	word32 esi_11 = dwArg08
	word32 edi_16 = dwArg0C
	branch dwArg04 == dwArg08 l00402146
l00402133:
	esi_11 = esi_11 - 0x1C<32>
	edi_16 = edi_16 - 0x1C<32>
	swap(edi_16, esi_11)
	branch esi_11 != dwArg04 l00402133
l00402146:
	return
fn00402120_exit:


word32 fn00402150(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402E80
//      fn00403950
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZDOP eax ecx Top
// Preserved: ebp ebx edi esi esp
fn00402150_entry:
l00402150:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	word32 eax_18 = Mem15[0x00A14188<p32>:word32] ^ fp - 4<i32>
	Mem34[fs:0<32>:word32] = fp - 0x10<32>
	basic_string(fp - 0x34<32>)
	word32 esi_108 = dwArg0C
	word32 edi_110 = dwArg04
l004021A0:
	branch edi_110 == dwArg08 l004021F8
l004021F8:
	~basic_string(fp - 0x34<32>)
	Mem56[fs:0x00000000<p32>:word32] = eax_13
	word32 ecx_166
	return fn00694B8E(esi_108, eax_18 ^ fp - 4<i32>, edx, ebx, fp - 4<i32>, esi, edi, es, ds, ebx, out ecx_166)
fn00402150_exit:
l004021A4:
	branch esi_108 == 0<32> l004021BE
l004021B2:
	basic_string(esi_108, fp - 0x34<32>)
l004021BE:
	swap(esi_108, edi_110)
	esi_108 = esi_108 + 0x1C<32>
	edi_110 = edi_110 + 0x1C<32>


void fn00402230(word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402D20
//      fn00403420
//      fn00403570
//      fn00405370
//      fn0040CBA0
// MayUse:  Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: dl edi esi esp
fn00402230_entry:
l00402230:
	word32 eax_18 = dwArg08
l00402250:
	branch eax_18 == dwArg10 l00402263
l00402263:
	return
fn00402230_exit:
l00402254:
	branch Mem25[eax_18:byte] != Mem25[dwArg14:byte] l0040225E
l0040225A:
	Mem38[eax_18:byte] = Mem25[dwArg18:byte]
l0040225E:
	eax_18 = eax_18 + 1<32>


void fn00402270(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004033B0
//      fn00403ED0
// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp ebx edi esi esp
fn00402270_entry:
l00402270:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem31[fs:0<32>:word32] = fp - 0x10<32>
	word32 esi_33 = dwArg04
	word32 edi_34 = dwArg08
l004022B0:
	branch edi_34 <=u 0<32> l004022FE
l004022FE:
	Mem49[fs:0x00000000<p32>:word32] = eax_13
	return
fn00402270_exit:
l004022B4:
	branch esi_33 == 0<32> l004022CE
l004022C2:
	basic_string(esi_33, dwArg0C)
l004022CE:
	edi_34 = edi_34 - 1<32>
	esi_33 = esi_33 + 0x1C<32>


void fn00402310(word32 ecx, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004023A0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn00402310_entry:
l00402310:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem26[fs:0<32>:word32] = fp - 0xC<32>
	word32 esp_23 = fp - 28<i32>
	word32 esi_29 = Mem28[ecx + 4<32>:word32]
	branch esi_29 == 0<32> l00402369
l0040234C:
	Mem35[ecx + 4<32>:word32] = 0<32>
	branch fn00401AE0(esi_29) != 1<32> l00402369
l0040235F:
	word32 eax_43 = Mem35[esi_29:word32]
	word32 edx_51
	call Mem35[eax_43:word32] (retsize: 4;)
		uses: eax:eax_43,ecx:esi_29,edx:edx_51,Stack +0004:1<32>
		defs: edx:edx_51,esp:esp_48
l00402369:
	word32 ecx_56 = Mem55[ecx + 8<32>:word32]
	Mem60[esp_23 + 0x18<32>:word32] = 0xFFFFFFFF<32>
	branch ecx_56 == 0<32> l00402380
l00402378:
	word32 eax_62 = Mem60[ecx_56:word32]
	word32 edx_63 = Mem60[eax_62:word32]
	Mem65[esp_23 - 4<i32>:word32] = 1<32>
	word32 edx_72
	call edx_63 (retsize: 4;)
		uses: eax:eax_62,ecx:ecx_56,edx:edx_72
		defs: edx:edx_72
l00402380:
	branch bArg04 == 0<8> l0040238C
l00402387:
	fn00407EC0()
l0040238C:
	Mem91[fs:0x00000000<p32>:word32] = eax_9
	return
fn00402310_exit:


word32 fn004023A0(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403F70
//      fn004046D0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax edx
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004023A0_entry:
l004023A0:
	word32 edx_584
	word32 eax_591
	word32 eax_9 = Mem7[fs:0<32>:word32]
	word32 eax_14 = Mem11[0x00A14188<p32>:word32] ^ fp - 0xC0<32>
	Mem33[fs:0<32>:word32] = fp - 0xC<32>
	word32 ebx_215 = 0<32>
	branch Mem35[0x00A53EF0<p32>:byte] != 0<8> l0040240E
l0040240E:
	branch Mem35[ecx + 8<32>:word32] == 0<32> l00402419
l00402413:
	fn00402310(ecx, 0<8>)
l00402419:
	word32 eax_63
	word32 eax_56 = operator new(0x14<32>)
	branch eax_56 == 0<32> l0040243B
l0040243B:
	eax_63 = 0<32>
l00402432:
	eax_63 = fn00409610(eax_56)
l0040243D:
	Mem80[ecx + 8<32>:word32] = eax_63
	basic_string(fp - 0x64<32>)
	word32 eax_83 = Mem80[ecx:word32]
	branch eax_83 != 0<32> l004024A3
l004024A3:
	operator =(fp - 0x64<32>, eax_83)
l00402469:
	operator =(fp - 0x64<32>, fn00401C70(fp - 0xB4<32>, 0<32>))
	~basic_string(fp - 0xB4<32>)
l004024AE:
	basic_string(fp - 0xB4<32>, 0x8A698F<32>)
	word32 esi_139 = fn00408FB0(fp - 0xB4<32>)
	~basic_string(fp - 0xB4<32>)
	word32 esp_137 = fp - 0xD4<32>
	branch dwLoc50 == 0<32> l00402783
l004024F3:
	word32 esp_146 = esp_137 - 4<i32>
	Mem147[esp_146:word32] = esp_137 + 0x70<32>
	basic_string(esp_146 + 0xAC<32>, Mem147[esp_146:(ptr32 basic_string)])
	Mem153[esp_146:word32] = esp_146 + 0x74<32>
	Mem155[esp_146 + 0xD4<32>:byte] = 4<8>
	word24 eax_24_8_164 = SLICE(basic_string(esp_146 + 0x90<32>, Mem155[esp_146:(ptr32 basic_string)]), word24, 8)
	Mem160[esp_146:word32] = esp_146 + 0x5C<32>
	Mem162[esp_146 + 0xD4<32>:byte] = 5<8>
	word32 eax_165 = SEQ(eax_24_8_164, CONVERT(rbegin(esp_146 + 0x90<32>), reverse_iterator, uint8))
	word32 eax_167 = Mem162[eax_165 + 8<32>:word32]
	Mem169[esp_146 + 0x18<32>:word32] = Mem162[eax_165 + 4<32>:word32]
	word24 ebx_24_8_287 = SLICE(ebx_215, word24, 8)
	branch Mem162[eax_167 - 1<32>:byte] == 0x2F<8> l0040255B
l00402549:
	Mem172[esp_146 - 4<i32>:word32] = 0x8A6A50<32>
	append(esp_146 + 0x8C<32>, Mem172[esp_146 - 4<i32>:(ptr32 charconst )])
l0040255B:
	byte bl_247
	Mem178[esp_146 - 4<i32>:word32] = 0x8A6A48<32>
	operator +=(esp_146 + 0x8C<32>, Mem178[esp_146 - 4<i32>:(ptr32 charconst )])
	Mem183[esp_146 - 4<i32>:word32] = 0x8A6A44<32>
	operator +=(esp_146 + 0x8C<32>, Mem183[esp_146 - 4<i32>:(ptr32 charconst )])
	Mem189[esp_146 - 4<i32>:word32] = esp_146 + 0xA8<32>
	Mem192[esp_146 - 8<i32>:word32] = esp_146 + 0x3C<32>
	word32 ecx_194
	word32 edi_196
	word32 eax_193 = fn004017C0(Mem192[esp_146 - 8<i32>:word32], Mem192[esp_146 - 4<i32>:word32], out ecx_194, out esi_139, out edi_196)
	word32 esp_198 = <invalid>
	Mem204[esp_198 + 0x1C<32>:word32] = Mem192[esp_198 + 0x1C<32>:word32] | 1<32>
	Mem208[esp_198 - 4<i32>:word32] = 0x8A6A44<32>
	Mem210[esp_198 - 8<i32>:word32] = eax_193
	Mem211[esp_198 + 0xD8<32>:byte] = 6<8>
	word32 esp_220
	word32 eax_221
	call MSVCP80.dll!??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z (retsize: 4;)
		uses: ecx:ecx_194,Stack +FFFFFFB4:dwLoc50
		defs: eax:eax_221,esp:esp_220
	word32 esp_226 = esp_220 + 0x10<32>
	branch SLICE(eax_221, byte, 0) == 0<8> l004025CD
l004025B1:
	word32 edx_232 = Mem211[Mem211[esi_139:word32] + 4<32>:word32]
	Mem234[esp_220 + 0xC<32>:word32] = 0<32>
	Mem237[esp_220 + 8<32>:word32] = esp_220 + 0xB8<32>
	word32 eax_240
	call edx_232 (retsize: 4;)
		uses: eax:esp_220 + 0xB8<32>,ecx:esi_197,edx:edx_232,Stack +FFFFFFB4:dwLoc50
		defs: eax:eax_240,esp:esp_239
	branch eax_240 != 2<32> l004025CD
l004025CD:
	bl_247 = 0<8>
l004025C9:
	bl_247 = 1<8>
l004025CF:
	Mem257[esp_226 + 0xD0<32>:word32] = 5<32>
	branch (Mem253[esp_226 + 0x14<32>:byte] & 1<8>) == 0<8> l004025F0
l004025E1:
	Mem260[esp_226 + 0x14<32>:word32] = Mem257[esp_226 + 0x14<32>:word32] & 0xFFFFFFFE<32>
	~basic_string(esp_226 + 0x3C<32>)
l004025F0:
	word32 esp_315
	word32 eax_347
	word32 esp_353
	word32 esp_364
	ebx_215 = SEQ(ebx_24_8_287, bl_247) (alias)
	branch bl_247 == 0<8> l00402655
l00402655:
	word32 edx_274 = Mem272[Mem272[esi_139:word32] + 4<32>:word32]
	word32 esp_276 = esp_226 - 4<i32>
	Mem277[esp_276:word32] = 0<32>
	Mem280[esp_276 - 4<i32>:word32] = esp_276 + 0x90<32>
	word32 esp_299
	word32 eax_300
	call edx_274 (retsize: 4;)
		uses: eax:esp_276 + 0x90<32>,ecx:esi_197,edx:edx_274,Stack +FFFFFFB4:dwLoc50
		defs: eax:eax_300,esp:esp_299
	branch eax_300 != 2<32> l004026BA
l004026BA:
	word32 edx_308 = Mem280[Mem280[esi_139:word32] + 4<32>:word32]
	Mem310[esp_299 - 4<i32>:word32] = 0<32>
	Mem313[esp_299 - 8<i32>:word32] = esp_299 + 0x70<32>
	word32 eax_316
	call edx_308 (retsize: 4;)
		uses: eax:esp_299 + 0x70<32>,ecx:esi_197,edx:edx_308,Stack +FFFFFFB4:dwLoc50
		defs: eax:eax_316,esp:esp_315
	branch eax_316 != 1<32> l00402715
l004026CF:
	Mem325[esp_315 - 4<i32>:word32] = esp_315 + 0x64<32>
	word32 eax_329 = SEQ(SLICE(esp_315 + 0x64<32>, word24, 8), CONVERT(rbegin(esp_315 + 0x70<32>), reverse_iterator, uint8))
	word32 eax_331 = Mem325[eax_329 + 8<32>:word32]
	Mem333[esp_315 + 0x14<32>:word32] = Mem325[eax_329 + 4<32>:word32]
	branch Mem325[eax_331 - 1<32>:byte] == 0x2F<8> l004026FD
l004026EE:
	Mem336[esp_315 - 8<i32>:word32] = 0x8A6A50<32>
	append(esp_315 + 0x6C<32>, Mem336[esp_315 - 8<i32>:(ptr32 charconst )])
l004026FD:
	Mem343[esp_315 - 8<i32>:word32] = 0xFFFFFFFF<32>
	Mem345[esp_315 - 12<i32>:word32] = esp_315 + 0x6C<32>
	eax_347 = fn00408FB0(Mem345[esp_315 - 12<i32>:word32])
	esp_353 = esp_315 - 8<32>
l0040266D:
	Mem358[esp_299 - 4<i32>:word32] = c_str(esp_299 + 0x8C<32>)
	Mem360[esp_299 - 8<i32>:word32] = 0x8A69EC<32>
	fn00520C80()
	Mem362[esp_299 - 12<i32>:word32] = 0x44<32>
	word32 eax_363 = operator new(Mem362[esp_299 - 12<i32>:uint32])
	Mem365[esp_299 + 0x18<32>:word32] = eax_363
	Mem368[esp_299 + 0xD0<32>:byte] = 8<8>
	esp_364 = esp_299
	branch eax_363 == 0<32> l00402644
l0040269F:
	Mem372[esp_299 - 4<i32>:word32] = esp_299 + 0x8C<32>
	eax_347 = fn0040D620(eax_363, es, ds, Mem372[esp_299 - 4<i32>:word32])
	Mem409[esp_299 + 0xD0<32>:byte] = 5<8>
	Mem411[esp_299 - 4<i32>:word32] = 0xFFFFFFFF<32>
	esp_353 = esp_299 - 4<i32>
l004025F4:
	word32 esp_414 = esp_226 - 4<i32>
	Mem415[esp_414:word32] = c_str(esp_226 + 0xA8<32>)
	Mem417[esp_414 - 4<i32>:word32] = 0x8A6A18<32>
	fn00520C80()
	Mem419[esp_414 - 8<i32>:word32] = 0x44<32>
	word32 eax_420 = operator new(Mem419[esp_414 - 8<i32>:uint32])
	Mem422[esp_414 + 0x1C<32>:word32] = eax_420
	Mem425[esp_414 + 0xD4<32>:byte] = 7<8>
	esp_364 = esp_414 + 4<32>
	branch eax_420 == 0<32> l00402644
l00402644:
	Mem431[esp_364 + 0xD0<32>:byte] = 5<8>
	esp_353 = esp_364 - 4<i32>
	Mem433[esp_353:word32] = 0xFFFFFFFF<32>
	eax_347 = 0<32>
l00402626:
	Mem436[esp_414:word32] = esp_414 + 0xAC<32>
	eax_347 = fn0040D620(eax_420, es, ds, Mem436[esp_414:word32])
	Mem448[esp_414 + 0xD4<32>:byte] = 5<8>
	Mem450[esp_414:word32] = 0xFFFFFFFF<32>
	esp_353 = esp_414
l0040270C:
	word32 ecx_455 = Mem454[ecx + 8<32>:word32]
	word32 esp_457 = esp_353 - 4<i32>
	Mem459[esp_457:word32] = eax_347
	fn00409F70(ecx_455, ebx_215, ecx, edi_196, Mem459[esp_457 + 4<i32>:word32])
	esp_315 = esp_457 + 8<32>
l00402715:
	word32 esp_478 = esp_315 - 4<i32>
	Mem480[esp_478:word32] = edi_196
	Mem482[esp_478 - 4<i32>:word32] = esp_315 + 0x3C<32>
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	Mem503[esp_478:word32] = fn00401C70(stackArg4, stackArg8)
	Mem505[esp_478 + 0xD4<32>:byte] = 9<8>
	operator =(esp_478 + 0x74<32>, Mem505[esp_478:(ptr32 basic_string)])
	Mem510[esp_478 + 0xD4<32>:byte] = 5<8>
	~basic_string(esp_478 + 0x40<32>)
	Mem512[esp_478 + 0xD4<32>:byte] = 4<8>
	~basic_string(esp_478 + 0x90<32>)
	Mem514[esp_478 + 0xD4<32>:byte] = 1<8>
	~basic_string(esp_478 + 0xAC<32>)
	esp_137 = esp_478 + 4<32>
	branch Mem514[esp_478 + 0x88<32>:word32] != 0<32> l004024F3
l00402783:
	branch esi_139 == 0<32> l00402791
l00402787:
	word32 edx_522 = Mem521[esi_139:word32]
	word32 eax_523 = Mem521[edx_522:word32]
	Mem526[esp_137 - 4<i32>:word32] = 1<32>
	call eax_523 (retsize: 4;)
		uses: ecx:esi_517,edx:edx_522,Stack +FFFFFFB4:dwLoc50
		defs: esp:esp_536
l00402791:
	word32 eax_550
	word32 esp_543 = esp_137 - 4<i32>
	Mem544[esp_543:word32] = 0x8A69DC<32>
	word32 eax_545 = getenv(Mem544[esp_543:(ptr32 charconst )])
	branch eax_545 == 0<32> l004027AF
l004027AF:
	eax_550 = 0x19000<32>
l004027A3:
	Mem552[esp_543:word32] = eax_545
	eax_550 = atoi(Mem552[esp_543:(ptr32 charconst )])
l004027B4:
	word32 esi_599
	word32 esp_557 = esp_137 - 4<i32>
	Mem559[esp_557:word32] = eax_550
	fn00406E20(fn00407E40(), Mem559[esp_557:word32])
	edx_584 = fn00407A90(fn00407E40())
	Mem590[esp_557:word32] = 0x54<32>
	eax_591 = operator new(Mem590[esp_557:uint32])
	Mem594[esp_557 + 0x1C<32>:word32] = eax_591
	Mem597[esp_557 + 0xD4<32>:byte] = 0xA<8>
	branch eax_591 == 0<32> l00402819
l00402819:
	esi_599 = 0<32>
l004027E9:
	Mem603[esp_557:word32] = 0x8A698F<32>
	basic_string(esp_557 + 0x24<32>, Mem603[esp_557:(ptr32 charconst )])
	word32 ecx_609 = Mem603[ecx + 8<32>:word32]
	Mem611[esp_557 + 0x18<32>:word32] = Mem603[esp_557 + 0x18<32>:word32] | 2<32>
	Mem615[esp_557:word32] = ecx_609
	Mem618[esp_557 - 4<i32>:word32] = esp_557 + 0x24<32>
	Mem620[esp_557 + 0xD4<32>:byte] = 0xB<8>
	eax_591 = fn00408720(eax_591, Mem620[esp_557 - 4<i32>:word32], Mem620[esp_557:word32], out edx_584)
	esi_599 = eax_591
l0040281B:
	Mem634[esp_137 + 0x18<32>:word32] = esi_599
	word32 esp_633 = esp_137
	branch esi_599 == 0<32> l0040282A
l00402823:
	fn00401AD0(esi_599)
l0040282A:
	word32 edi_644 = Mem634[ecx + 4<32>:word32]
	Mem648[esp_137 + 0xD0<32>:word32] = 0xD<32>
	branch edi_644 == esi_599 l00402864
l0040283C:
	Mem652[ecx + 4<32>:word32] = esi_599
	branch esi_599 == 0<32> l0040284A
l00402843:
	fn00401AD0(esi_599)
l0040284A:
	branch edi_644 == 0<32> l00402864
l0040284E:
	eax_591 = fn00401AE0(edi_644)
	branch eax_591 != 1<32> l00402864
l0040285A:
	word32 eax_672 = Mem652[edi_644:word32]
	word32 edx_673 = Mem652[eax_672:word32]
	Mem676[esp_137 - 4<i32>:word32] = 1<32>
	call edx_673 (retsize: 4;)
		uses: eax:eax_672,ecx:edi_644,Stack +FFFFFFB4:dwLoc50
		defs: eax:eax_694,edx:edx_696,esp:esp_693
l00402864:
	Mem703[esp_633 + 0xD0<32>:byte] = 0xC<8>
	branch esi_599 == 0<32> l00402886
l00402870:
	eax_591 = fn00401AE0(esi_599)
	branch eax_591 != 1<32> l00402886
l0040287C:
	word32 eax_713 = Mem703[esi_599:word32]
	word32 edx_714 = Mem703[eax_713:word32]
	Mem716[esp_633 - 4<i32>:word32] = 1<32>
	call edx_714 (retsize: 4;)
		uses: eax:eax_713,ecx:esi_630,Stack +FFFFFFB4:dwLoc50
		defs: eax:eax_724,edx:edx_726,esp:esp_723
l00402886:
	Mem733[esp_633 + 0xD0<32>:word32] = 1<32>
	branch (Mem730[esp_633 + 0x14<32>:byte] & 2<8>) == 0<8> l004028A2
l00402898:
	~basic_string(esp_633 + 0x20<32>)
l004028A2:
	Mem738[esp_633 + 0xD0<32>:word32] = 0xFFFFFFFF<32>
	~basic_string(esp_633 + 0x70<32>)
l004023EB:
	word32 edi_1122
	eax_591 = fn0061FC50(0<32>, ecx, esi, edi, es, ds, fp - 0xBC<32>, 0x8A6A58<32>, out edx_584, out edi_1122)
l004028B7:
	Mem769[fs:0x00000000<p32>:word32] = eax_9
	word32 ecx_1123
	word32 eax_883 = fn00694B8E(eax_591, eax_14 ^ fp - 192<i32>, edx_584, ebx, ebp, esi, edi, es, ds, ebx, out ecx_1123)
	edxOut = edx_584
	return eax_883
fn004023A0_exit:


word32 fn004028E0(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402A20
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: esi esp
fn004028E0_entry:
l004028E0:
	word32 ecx_8 = Mem6[Mem6[ecx:word32] + 4<32>:word32]
	Mem16[dwArg04:word32] = ecx_8
	branch ecx_8 == 0<32> l004028FE
l004028F9:
	fn00401AD0(ecx_8)
l004028FE:
	return dwArg04
fn004028E0_exit:


word32 fn00402A20(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402B60
//      fn0042B310
//      fn007B2D10
// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn00402A20_entry:
l00402A20:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem29[fs:0<32>:word32] = fp - 0xC<32>
	word32 edx_113 = fn00406D20(fp - 0x18<32>, dwArg08)
	branch dwLoc18 == 0<32> l00402AC6
l00402AC6:
	word32 ebp_291
	word32 edi_292
	word32 edx_289
	word32 ebx_290
	fn0040E780(Mem53[fn004028E0(fn004048C0(1<32>, ebp, dwArg08, edi, es, ds, out edx_289, out ebx_290, out ebp_291, out edi_292), fp - 0x10<32>):word32], dwArg04, dwArg08, out edx_113)
	word32 esp_110 = fp - 0x28<32>
	branch dwLoc10 == 0<32> l00402B18
l00402B00:
	branch fn00401AE0(dwLoc10) != 1<32> l00402B18
l00402B0B:
	branch dwLoc10 == 0<32> l00402B18
l00402B0F:
	word32 eax_105 = Mem92[dwLoc10:word32]
	call Mem92[eax_105:word32] (retsize: 4;)
		uses: eax:eax_105,ecx:dwLoc10,Stack +0004:1<32>,Stack +000C:dwArg08,Stack +0018:dwLoc18,Stack +0020:dwLoc10,Stack +0034:dwArg04,Stack +0038:dwArg08,Stack +003C:dwArg0C,Stack +FFFFFFEC:dwLoc18
		defs: edx:edx_113,esp:esp_110
l00402B18:
	word32 ecx_118 = Mem117[esp_110 + 0x10<32>:word32]
	Mem121[esp_110 + 0x18<32>:word32] = 0<32>
	Mem122[esp_110 + 0x24<32>:byte] = 0<8>
	branch ecx_118 == 0<32> l00402B45
l00402B2D:
	branch fn00401AE0(ecx_118) != 1<32> l00402B45
l00402B38:
	branch ecx_118 == 0<32> l00402B45
l00402B3C:
	word32 eax_136 = Mem122[ecx_118:word32]
	word32 edx_137 = Mem122[eax_136:word32]
	Mem139[esp_110 - 4<i32>:word32] = 1<32>
	call fnFFFFFFFF (retsize: 4;)
		uses: eax:eax_136,ecx:ecx_118,edx:edx_137,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0010:dwArg0C,Stack +FFFFFFEC:dwLoc18,Stack +FFFFFFF4:dwLoc10
		defs: edx:edx_147
l00402A71:
	Mem151[dwArg04:word32] = dwLoc18
	fn00401AD0(dwLoc18)
	branch dwLoc18 == 0<32> l00402B45
l00402A91:
	branch fn00401AE0(dwLoc18) != 1<32> l00402B45
l00402AA0:
	branch dwLoc18 == 0<32> l00402B45
l00402B45:
	Mem179[fs:0x00000000<p32>:word32] = eax_9
	edxOut = edx_113
	return <invalid>
l00402AA8:
	word32 edx_190 = Mem160[dwLoc18:word32]
	word32 edx_198
	call fnFFFFFFFF (retsize: 4;)
		uses: eax:Mem160[edx_190:word32],ecx:dwLoc18,edx:edx_190,Stack +0004:1<32>,Stack +0018:dwLoc18,Stack +0020:dwLoc10,Stack +0034:dwArg04,Stack +0038:dwArg08,Stack +003C:dwArg0C
		defs: edx:edx_198
	Mem203[fs:0x00000000<p32>:word32] = eax_9
	edxOut = edx_198
	return <invalid>
fn00402A20_exit:


word32 fn00402B60(word32 ebx, word32 ebp, word32 edi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004046D0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[8..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax edx
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebx esi esp
fn00402B60_entry:
	word24 ebx_24_8_81 = SLICE(ebx, word24, 8)
l00402B60:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem26[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(fp - 0x44<32>, 0x8A6AFC<32>)
	word32 edx_206
	word32 eax_204 = fn00402A20(fp - 0x48<32>, fp - 0x44<32>, 0<32>, out edx_206)
	~basic_string(fp - 0x44<32>)
	word32 ebx_82 = SEQ(ebx_24_8_81, 2<8>)
	branch dwLoc48 == 0<32> l00402CE0
l00402BCC:
	basic_string(fp - 0x28<32>, 0x8A6AF4<32>)
	fn0061FD40(ebx_82, ebp, dwLoc48, edi, es, ds, SLICE(fn0040EF50(dwLoc48, fp - 0x28<32>, CONVERT(fn0061FC90(), word16, word32)), word16, 0))
	~basic_string(fp - 0x28<32>)
	basic_string(fp - 0x28<32>, 0x8A6AEC<32>)
	word32 ebx_127 = SEQ(ebx_24_8_81, 2<8>)
	fn0061FD60(ebx_127, ebp, dwLoc48, edi, es, ds, SLICE(fn0040EF50(dwLoc48, fp - 0x28<32>, CONVERT(fn0061FCA0(), word16, word32)), word16, 0))
	~basic_string(fp - 0x28<32>)
	basic_string(fp - 0x28<32>, 0x8A6AE4<32>)
	fn0061FD80(ebx_127, ebp, dwLoc48, edi, es, ds, SLICE(fn0040EF50(dwLoc48, fp - 0x28<32>, CONVERT(fn0061FCB0(), word16, word32)), word16, 0))
	~basic_string(fp - 0x28<32>)
	basic_string(fp - 0x28<32>, 0x8A6AD8<32>)
	eax_204 = fn0061FD90(ebx_127, ebp, dwLoc48, edi, es, ds, SLICE(fn0040EF50(dwLoc48, fp - 0x28<32>, CONVERT(fn0061FCC0(), word16, word32)), word16, 0), out edx_206)
	~basic_string(fp - 0x28<32>)
l00402CE0:
	branch dwLoc48 == 0<32> l00402D05
l00402CEC:
	eax_204 = fn00401AE0(dwLoc48)
	branch eax_204 != 1<32> l00402D05
l00402CF8:
	branch dwLoc48 == 0<32> l00402D05
l00402CFC:
	word32 edx_235 = Mem222[dwLoc48:word32]
	call Mem237[edx_235:word32] (retsize: 4;)
		uses: ecx:dwLoc48,edx:edx_235,Stack +0004:eax_225,Stack +0014:dwLoc48
		defs: eax:eax_251,edx:edx_253
l00402D05:
	Mem260[fs:0x00000000<p32>:word32] = eax_9
	edxOut = edx_206
	return eax_204
fn00402B60_exit:


word32 fn00402D20(word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & edxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403200
//      fn00404FF0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax edx esi
// Trashed: SCZDOP eax ecx edx esi Top
// Preserved: ebx edi esp
fn00402D20_entry:
l00402D20:
	word32 eax_14 = Mem11[0x00A14188<p32>:word32] ^ fp - 0x64<32>
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	word32 dwLoc10_187 = eax_14
	word24 nLoc0F_239 = SLICE(eax_14, word24, 8)
	word32 dwLoc6C_189 = esi
	word24 eax_24_8_57 = SLICE(basic_string(fp - 0x48<32>, c_str(dwArg08)), word24, 8)
	branch Mem38[dwArg08 + 0x14<32>:word32] != 0<32> l00402D9D
l00402D9D:
	word32 eax_58 = SEQ(eax_24_8_57, CONVERT(end(fp - 0x48<32>), _String_iterator, uint8))
	word32 eax_71 = SEQ(eax_24_8_57, CONVERT(begin(fp - 0x4C<32>), _String_iterator, uint8))
	edx = Mem74[eax_71:word32]
	fn00402230(Mem70[eax_71 + 4<32>:word32], Mem63[eax_58 + 4<32>:word32], fp - 0x6A<32>, fp - 0x69<32>)
	size(fp - 0x50<32>)
	branch Mem95[operator [](fp - 0x50<32>, tLoc80):byte] == 0x2F<8> l00402E17
l00402E0B:
	operator +=(fp - 0x54<32>, '/')
l00402E17:
	basic_string(fp - 0x38<32>, c_str(fp - 0x54<32>))
	basic_string(dwArg04, fp - 0x38<32>)
	~basic_string(fp - 0x38<32>)
	dwLoc6C_189 = 1<32>
	dwLoc10_187 = SEQ(nLoc0F_239, 1<8>) (alias)
l00402D87:
	basic_string(dwArg04, fp - 0x48<32>)
l00402E50:
	~basic_string(fp - 0x48<32>)
	Mem140[fs:0x00000000<p32>:word32] = eax_9
	word32 ecx_243
	word32 eax_174 = fn00694B8E(dwArg04, dwLoc10_187 ^ fp - 100<i32>, edx, ebx, ebp, dwLoc6C_189, edi, es, ds, ebx, out ecx_243)
	edxOut = edx
	esiOut = dwLoc6C_189
	return eax_174
fn00402D20_exit:


word32 fn00402E80(word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403950
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZDOP eax ecx edx Top
// Preserved: esp
fn00402E80_entry:
l00402E80:
	return fn00402150(dwArg04, ebx, esi, edi, es, ds, dwArg04, dwArg08, dwArg0C)
fn00402E80_exit:


word32 fn00403200(word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403420
//      fn00404FF0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp edi esi esp
fn00403200_entry:
l00403200:
	word32 edi_154
	word32 eax_9 = Mem7[fs:0<32>:word32]
	word32 eax_14 = Mem11[0x00A14188<p32>:word32] ^ fp - 0x70<32>
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(fp - 0x2C<32>)
	basic_string(fp - 0x48<32>, dwArg08)
	word32 dwLoc0C_216 = eax_9
	word24 nLoc0B_254 = SLICE(eax_9, word24, 8)
	word32 esp_103 = fp - 0x80<32>
	edi_154 = edi
	branch length(dwArg08) <u 1<32> l004032F7
l0040327D:
	length(dwArg08)
	esp_103 = fp - 0x84<32>
	edi_154 = edi
	branch Mem56[operator [](dwArg08, tLoc84):byte] == 0x2F<8> l004032F7
l0040329E:
	word32 eax_68 = find_last_not_of(dwArg08, 0x8A695C<32>, Mem56[&npos:word32])
	esp_103 = fp - 0x84<32>
	edi_154 = eax_68
	branch eax_68 < 0<32> l004032F7
l004032B9:
	word32 eax_75 = length(dwArg08)
	word24 eax_24_8_89 = SLICE(eax_75, word24, 8)
	branch eax_68 >= eax_75 l004032F7
l004032C5:
	operator =(fp - 0x50<32>, SEQ(eax_24_8_89, CONVERT(substr(dwArg08, fp - 0x68<32>, 0<32>), basic_string, uint8)))
	~basic_string(fp - 0x6C<32>)
	edx = fp - 0x68<32>
	esp_103 = fp - 0x88<32>
	dwLoc0C_216 = SEQ(nLoc0B_254, 2<8>) (alias)
l004032F7:
	word32 esp_104 = esp_103 - 4<i32>
	Mem105[esp_104:word32] = Mem101[&npos:word32]
	Mem107[esp_104 - 4<i32>:word32] = 0x8A698C<32>
	word32 eax_109 = find_last_of(esp_104 + 0x3C<32>, Mem107[esp_104 - 4<i32>:(ptr32 charconst )], Mem107[esp_104:uint32])
	branch eax_109 < 0<32> l00403356
l00403314:
	word32 eax_116 = length(esp_104 + 0x3C<32>)
	word24 eax_24_8_130 = SLICE(eax_116, word24, 8)
	branch eax_109 >= eax_116 l00403356
l00403322:
	Mem120[esp_104:word32] = eax_109
	Mem122[esp_104 - 4<i32>:word32] = 0<32>
	Mem125[esp_104 - 8<i32>:word32] = esp_104 + 0x20<32>
	Mem132[esp_104 - 4<i32>:word32] = SEQ(eax_24_8_130, CONVERT(substr(esp_104 + 0x3C<32>, Mem125[esp_104 - 8<i32>:uint32], Mem125[esp_104 - 4<i32>:uint32]), basic_string, uint8))
	Mem134[esp_104 + 0x7C<32>:byte] = 4<8>
	operator =(esp_104 + 0x54<32>, Mem134[esp_104 - 4<i32>:(ptr32 basic_string)])
	Mem138[esp_104 + 0x7C<32>:byte] = 2<8>
	~basic_string(esp_104 + 0x1C<32>)
	edx = esp_104 + 0x20<32>
l00403356:
	word32 edx_175
	word32 esi_266
	fn00402D20(edx, ebx, dwArg04, eax_109, edi_154, es, ds, dwArg04, fp - 0x2C<32>, out edx_175, out esi_266)
	~basic_string(fp - 0x48<32>)
	~basic_string(fp - 0x2C<32>)
	Mem191[fs:0x00000000<p32>:word32] = dwLoc0C_216
	word32 ecx_267
	return fn00694B8E(dwArg04, eax_14 ^ fp - 0x70<32>, edx_175, ebx, ebp, esi, edi, es, ds, ebp, out ecx_267)
fn00403200_exit:


word32 fn004033B0(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403950
// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn004033B0_entry:
l004033B0:
	fn00402270(dwArg04, dwArg08, dwArg0C)
	edxOut = dwArg0C
	return dwArg04 + (dwArg08 * 8<32> - dwArg08) * 4<32>
fn004033B0_exit:


void fn004033F0(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403950
//      fn004085A0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO ecx Top
// Preserved: edi esi esp
fn004033F0_entry:
l004033F0:
	word32 esi_15 = dwArg04
	branch dwArg04 == dwArg08 l0040340F
l004033FE:
l00403400:
	~basic_string(esi_15)
	esi_15 = esi_15 + 0x1C<32>
	branch esi_15 != dwArg08 l00403400
l0040340F:
	return
fn004033F0_exit:


word32 fn00403420(word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403570
//      fn00404190
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax ebx edi esi esp
// Trashed: SCZDOP eax ebx ecx edi edx esi esp Top
// Preserved:
fn00403420_entry:
l00403420:
	word32 eax_26 = Mem24[0x00A14188<p32>:word32] ^ fp - 0x174<32>
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(dwArg04, 0x8A6990<32>)
	GetModuleFileNameA(0<32>, fp - 0x114<32>, 0x104<32>)
	basic_string(fp - 0x130<32>, fp - 0x114<32>)
	word24 eax_24_8_104 = SLICE(operator =(dwArg04, fn00403200(fp - 0x130<32>, 0<32>, ebp, dwArg04, 1<32>, es, ds, fp - 0x14C<32>, fp - 0x130<32>)), word24, 8)
	~basic_string(fp - 0x14C<32>)
	word32 eax_105 = SEQ(eax_24_8_104, CONVERT(end(dwArg04), _String_iterator, uint8))
	word32 eax_118 = SEQ(eax_24_8_104, CONVERT(begin(dwArg04), _String_iterator, uint8))
	word32 edx_122 = Mem121[eax_118:word32]
	fn00402230(Mem117[eax_118 + 4<32>:word32], Mem110[eax_105 + 4<32>:word32], fp - 0x16E<32>, fp - 0x16D<32>)
	~basic_string(fp - 0x138<32>)
	Mem139[fs:0x00000000<p32>:word32] = dwLoc14
	word32 ecx_207
	word32 eax_152 = fn00694B8E(dwArg04, dwLoc18 ^ fp - 0x170<32>, edx_122, edi, ebp, eax_26, fp - 0x15C<32>, es, ds, edi, out ecx_207)
	ebxOut = edi
	esiOut = eax_26
	ediOut = fp - 0x15C<32>
	return eax_152
fn00403420_exit:


void fn00403570(word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403F70
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebx edi esi esp
fn00403570_entry:
l00403570:
	word32 esp_103
	word32 eax_9 = Mem7[fs:0<32>:word32]
	word32 eax_14 = Mem11[0x00A14188<p32>:word32] ^ fp - 0x170<32>
	word32 eax_26 = Mem24[0x00A14188<p32>:word32] ^ fp - 0x17C<32>
	Mem32[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(dwArg04, c_str(dwArg08))
	word32 esp_55
	word32 eax_56
	call MSVCP80.dll!??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z (retsize: 4;)
		uses: eax:basic_string(fp - 0x130<32>),ecx:fp - 0x130<32>,Stack +0004:dwArg0C,Stack +0008:0x8A698F<32>,Stack +000C:eax_26,Stack +0028:1<32>,Stack +0058:dwArg04,Stack +017C:eax_14,Stack +0180:eax_9,Stack +0184:0x82B48F<32>,Stack +0188:1<32>,Stack +0190:dwArg04,Stack +0194:dwArg08,Stack +0198:dwArg0C
		defs: eax:eax_56,esp:esp_55
	word32 esi_104 = dwArg04
	word32 ebx_107 = 1<32>
	branch SLICE(eax_56, byte, 0) == 0<8> l0040362A
l0040362A:
	Mem68[esp_55 + 4<32>:word32] = esp_55 + 0x30<32>
	word32 esp_81 = <invalid>
	word32 edi_562
	Mem91[esp_81:word32] = fn00403420(ebp, dwArg0C, es, ds, Mem68[esp_55 + 4<32>:word32], out ebx_107, out esi_104, out edi_562)
	Mem93[esp_81 + 0x180<32>:byte] = 2<8>
	operator =(esp_81 + 0x54<32>, Mem93[esp_81:(ptr32 basic_string)])
	Mem98[esp_81 + 0x180<32>:byte] = SLICE(ebx_107, byte, 0)
	~basic_string(esp_81 + 0x2C<32>)
	esp_103 = esp_81 + 4<32>
l0040361D:
	Mem100[esp_55 + 4<32>:word32] = dwArg0C
	operator =(esp_55 + 0x58<32>, Mem100[esp_55 + 4<32>:(ptr32 basic_string)])
	esp_103 = esp_55 + 8<32>
l0040365B:
	word24 eax_24_8_351
	byte bl_233 = SLICE(ebx_107, byte, 0)
	branch size(esi_104) <=u ebx_107 l00403681
l00403667:
	esp_103 = esp_103 - 4<i32>
	Mem112[esp_103:word32] = esi_104
	Mem115[esp_103 + 0x18<32>:word32] = esp_103
	Mem116[esp_103:word32] = ebx_107
	word32 eax_117 = operator [](esi_104, Mem116[esp_103:_Size_type_nosscl])
	eax_24_8_351 = SLICE(eax_117, word24, 8) (alias)
	branch Mem116[eax_117:byte] == 0x3A<8> l004037FE
l00403681:
	branch size(esi_104) <=u 0<32> l00403759
l00403691:
	esp_103 = esp_103 - 4<i32>
	Mem129[esp_103:word32] = esi_104
	Mem132[esp_103 + 0x18<32>:word32] = esp_103
	Mem133[esp_103:word32] = 0<32>
	branch Mem133[operator [](esi_104, Mem133[esp_103:_Size_type_nosscl]):byte] == 0x2F<8> l00403759
l00403759:
	word32 eax_138 = esp_103 + 0x20<32>
	word32 esp_139 = esp_103 - 4<i32>
	Mem140[esp_139:word32] = eax_138
	Mem143[esp_139 + 0x17<32>:byte] = 0x5C<8>
	Mem144[esp_139 + 0x16<32>:byte] = 0x2F<8>
	byte al_145 = CONVERT(end(esi_104), _String_iterator, uint8)
	Mem148[esp_139 - 4<i32>:word32] = esp_139 + 0x44<32>
	byte al_153 = CONVERT(begin(esi_104), _String_iterator, uint8)
	Mem156[esp_139 - 8<i32>:word32] = esp_139 + 0xF<32>
	word24 eax_24_8_150 = SLICE(eax_138, word24, 8)
	word32 eax_151 = SEQ(eax_24_8_150, al_145)
	word32 edx_157 = Mem156[eax_151 + 4<32>:word32]
	Mem160[esp_139 - 12<i32>:word32] = esp_139 + 0xE<32>
	word32 ecx_161 = Mem160[eax_151:word32]
	Mem163[esp_139 - 16<i32>:word32] = edx_157
	word32 eax_164 = SEQ(eax_24_8_150, al_153)
	word32 edx_165 = Mem163[eax_164 + 4<32>:word32]
	word32 eax_166 = Mem163[eax_164:word32]
	Mem168[esp_139 - 20<i32>:word32] = ecx_161
	Mem170[esp_139 - 24<i32>:word32] = edx_165
	Mem172[esp_139 - 28<i32>:word32] = eax_166
	fn00402230(Mem172[esp_139 - 24<i32>:word32], Mem172[esp_139 - 16<i32>:word32], Mem172[esp_139 - 12<i32>:word32], Mem172[esp_139 - 8<i32>:word32])
	Mem182[esp_139 - 8<32>:word32] = esp_139 + 0x10<32>
	Mem185[esp_139 - 0xC<32>:word32] = esp_139 + 0x68<32>
	Mem187[esp_139 - 0x10<32>:word32] = 0x104<32>
	Mem191[esp_139 - 0x14<32>:word32] = c_str(esi_104)
	branch GetFullPathNameA(Mem191[esp_139 - 0x14<32>:LPCSTR], Mem191[esp_139 - 0x10<32>:DWORD], Mem191[esp_139 - 0xC<32>:LPSTR], Mem191[esp_139 - 8<32>:(ptr32 LPSTR)]) == 0<32> l004037CE
l004037C1:
	Mem199[esp_139 - 8<32>:word32] = esp_139 + 0x68<32>
	operator =(esi_104, Mem199[esp_139 - 8<32>:(ptr32 charconst )])
l004037CE:
	word32 esp_203 = esp_103 - 8<32>
	Mem207[esp_203 - 4<i32>:word32] = esi_104
	Mem209[esp_203 - 8<i32>:word32] = esp_203 + 0x28<32>
	Mem224[esp_203 - 4<i32>:word32] = fn004018E0(Mem209[esp_203 - 8<i32>:word32], Mem209[esp_203 - 4<i32>:word32])
	Mem226[esp_203 + 0x17C<32>:byte] = 4<8>
	eax_24_8_351 = SLICE(operator =(esi_104, Mem226[esp_203 - 4<i32>:(ptr32 basic_string)]), word24, 8) (alias)
	Mem234[esp_203 + 0x17C<32>:byte] = bl_233
	~basic_string(esp_203 + 0x28<32>)
	esp_103 = esp_203
l004036AF:
	Mem236[esp_103 - 4<i32>:word32] = esi_104
	Mem239[esp_103 - 8<i32>:word32] = esp_103 + 0x50<32>
	Mem242[esp_103 - 12<i32>:word32] = esp_103 + 0x28<32>
	word32 esp_262
	word32 eax_263
	call MSVCP80.dll!??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z (retsize: 4;)
		uses: ecx:esp_128 + 0x50<32>,edx:esp_128 + 0x28<32>,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0010:dwArg0C
		defs: eax:eax_263,esp:esp_262
	Mem271[esp_262 + 8<32>:word32] = eax_263
	Mem273[esp_262 + 0x188<32>:byte] = 3<8>
	operator =(esi_104, Mem273[esp_262 + 8<32>:(ptr32 basic_string)])
	Mem277[esp_262 + 0x188<32>:byte] = bl_233
	~basic_string(esp_262 + 0x34<32>)
	Mem280[esp_262 + 8<32>:word32] = esp_262 + 0x20<32>
	Mem282[esp_262 + 0x1E<32>:byte] = 0x5C<8>
	Mem283[esp_262 + 0x1F<32>:byte] = 0x2F<8>
	byte al_284 = CONVERT(end(esi_104), _String_iterator, uint8)
	Mem287[esp_262 + 4<32>:word32] = esp_262 + 0x28<32>
	word24 eax_24_8_289 = SLICE(esp_262 + 0x20<32>, word24, 8)
	byte al_292 = CONVERT(begin(esi_104), _String_iterator, uint8)
	Mem295[esp_262:word32] = esp_262 + 0x16<32>
	word32 eax_290 = SEQ(eax_24_8_289, al_284)
	word32 edx_296 = Mem295[eax_290 + 4<32>:word32]
	Mem299[esp_262 - 4<i32>:word32] = esp_262 + 0x17<32>
	word32 ecx_300 = Mem299[eax_290:word32]
	Mem302[esp_262 - 8<i32>:word32] = edx_296
	word32 eax_303 = SEQ(eax_24_8_289, al_292)
	word32 edx_304 = Mem302[eax_303 + 4<32>:word32]
	word32 eax_305 = Mem302[eax_303:word32]
	Mem307[esp_262 - 12<i32>:word32] = ecx_300
	Mem309[esp_262 - 16<i32>:word32] = edx_304
	Mem311[esp_262 - 20<i32>:word32] = eax_305
	fn00402230(Mem311[esp_262 - 16<i32>:word32], Mem311[esp_262 - 8<i32>:word32], Mem311[esp_262 - 4<i32>:word32], Mem311[esp_262:word32])
	word32 eax_321 = c_str(esi_104)
	Mem323[esp_262:word32] = eax_321
	Mem326[esp_262 - 4<i32>:word32] = esp_262 + 0x70<32>
	word32 eax_328
	call SHLWAPI.dll!PathCanonicalizeA (retsize: 4;)
		uses: eax:eax_321,ecx:esp_262 + 0x70<32>,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0010:dwArg0C
		defs: eax:eax_328,esp:esp_327
	eax_24_8_351 = SLICE(eax_328, word24, 8) (alias)
	branch eax_328 == 0<32> l004037FE
l00403747:
	Mem338[esp_103 - 4<i32>:word32] = esp_103 + 0x6C<32>
	eax_24_8_351 = SLICE(operator =(esi_104, Mem338[esp_103 - 4<i32>:(ptr32 charconst )]), word24, 8) (alias)
l004037FE:
	word32 esp_344 = esp_103 - 4<i32>
	Mem345[esp_344:word32] = esp_103 + 0x44<32>
	Mem348[esp_344 + 0x17<32>:byte] = 0x2F<8>
	Mem349[esp_344 + 0x16<32>:byte] = 0x5C<8>
	word32 eax_356 = SEQ(eax_24_8_351, CONVERT(end(esi_104), _String_iterator, uint8))
	Mem360[esp_344 - 4<i32>:word32] = esp_344 + 0x20<32>
	byte al_362 = CONVERT(begin(esi_104), _String_iterator, uint8)
	Mem365[esp_344 - 8<i32>:word32] = esp_344 + 0xF<32>
	word32 ecx_366 = Mem365[eax_356 + 4<32>:word32]
	Mem369[esp_344 - 12<i32>:word32] = esp_344 + 0xE<32>
	word32 edx_370 = Mem369[eax_356:word32]
	Mem372[esp_344 - 16<i32>:word32] = ecx_366
	word32 eax_374 = SEQ(SLICE(esp_344 + 0x20<32>, word24, 8), al_362)
	word32 ecx_375 = Mem372[eax_374 + 4<32>:word32]
	Mem377[esp_344 - 20<i32>:word32] = edx_370
	word32 edx_378 = Mem377[eax_374:word32]
	Mem380[esp_344 - 24<i32>:word32] = ecx_375
	Mem382[esp_344 - 28<i32>:word32] = edx_378
	fn00402230(Mem382[esp_344 - 24<i32>:word32], Mem382[esp_344 - 16<i32>:word32], Mem382[esp_344 - 12<i32>:word32], Mem382[esp_344 - 8<i32>:word32])
	word32 eax_391 = size(esi_104)
	Mem393[esp_344 - 8<32>:word32] = esi_104
	Mem400[esp_344 - 8<32>:word32] = eax_391 - ebx_107
	Mem402[esp_344 + 0x10<32>:word32] = esp_344 - 8<32>
	byte bl_429 = SLICE(ebx_107, byte, 0)
	branch Mem402[operator [](esi_104, Mem402[esp_344 - 8<32>:_Size_type_nosscl]):byte] != 0x2F<8> l004038A0
l00403864:
	Mem411[esp_344 - 0xC<32>:word32] = size(esi_104) - ebx_107
	Mem413[esp_344 - 0x10<32>:word32] = 0<32>
	Mem416[esp_344 - 0x14<32>:word32] = esp_344 + 0x20<32>
	Mem423[esp_344 - 0x10<32>:word32] = SEQ(SLICE(esp_344 + 0x20<32>, word24, 8), CONVERT(substr(esi_104, Mem416[esp_344 - 0x14<32>:uint32], Mem416[esp_344 - 0x10<32>:uint32]), basic_string, uint8))
	Mem425[esp_344 + 0x170<32>:byte] = 5<8>
	operator =(esi_104, Mem425[esp_344 - 0x10<32>:(ptr32 basic_string)])
	Mem430[esp_344 + 0x170<32>:byte] = bl_429
	~basic_string(esp_344 + 0x1C<32>)
l004038A0:
	~basic_string(fp - 0x130<32>)
	Mem439[fs:0x00000000<p32>:word32] = eax_9
	word32 ecx_563
	fn00694B8E(esi_104, eax_14 ^ fp - 368<i32>, edx_378, ebx, ebp, esi, edi, es, ds, ebx, out ecx_563)
	return
fn00403570_exit:


word32 fn00403900(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00408720
//      fn0040BD40
//      fn0040CAE0
//      fn0040CBA0
//      fn00659040
// MayUse:  ecx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: ebx edi esi esp
fn00403900_entry:
l00403900:
	word32 esi_12 = Mem11[ecx + 4<32>:word32]
	branch esi_12 == 0<32> l0040392F
l0040390B:
	word32 edi_19 = Mem18[ecx + 8<32>:word32]
	branch esi_12 == edi_19 l00403922
l00403913:
	~basic_string(esi_12)
	esi_12 = esi_12 + 0x1C<32>
	branch esi_12 != edi_19 l00403913
l00403922:
	eax = Mem18[ecx + 4<32>:word32]
	operator delete(eax)
l0040392F:
	Mem46[ecx + 4<32>:word32] = 0<32>
	Mem47[ecx + 8<32>:word32] = 0<32>
	Mem48[ecx + 0xC<32>:word32] = 0<32>
	return eax
fn00403900_exit:


void fn00403950(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403CA0
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] ecx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00403950_entry:
l00403950:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	word32 eax_18 = Mem15[0x00A14188<p32>:word32] ^ fp - 4<i32>
	Mem32[fs:0<32>:word32] = fp - 0x10<32>
	basic_string(fp - 0x34<32>, dwArg0C)
	word32 ebx_43 = Mem40[ecx + 4<32>:word32]
	word32 eax_231 = 0<32>
	branch ebx_43 == 0<32> l004039B4
l0040399C:
	word32 ecx_49 = Mem46[ecx + 0xC<32>:word32] - ebx_43
	word32 edx_53 = SLICE(ecx_49 *s64 0x92492493<32>, word32, 32) + ecx_49
	edx = edx_53 >> 4<32>
	eax_231 = (edx_53 >> 4<32> >>u 0x1F<32>) + (edx_53 >> 4<32>)
l004039B4:
	branch dwArg08 == 0<32> l00403C5D
l004039C2:
	word32 eax_81
	branch ebx_43 != 0<32> l004039CA
l004039CA:
	word32 ecx_73 = Mem65[ecx + 8<32>:word32] - ebx_43
	word32 edx_77 = SLICE(ecx_73 *s64 0x92492493<32>, word32, 32) + ecx_73
	eax_81 = (edx_77 >> 4<32> >>u 0x1F<32>) + (edx_77 >> 4<32>)
l004039C6:
	eax_81 = 0<32>
l004039E2:
	branch 0x9249249<32> - eax_81 >=u dwArg08 l004039F2
l004039ED:
	fn00401A70()
l004039F2:
	word32 eax_118
	branch ebx_43 != 0<32> l004039FA
l004039FA:
	word32 ecx_110 = Mem65[ecx + 8<32>:word32] - ebx_43
	word32 edx_114 = SLICE(ecx_110 *s64 0x92492493<32>, word32, 32) + ecx_110
	eax_118 = (edx_114 >> 4<32> >>u 0x1F<32>) + (edx_114 >> 4<32>)
l004039F6:
	eax_118 = 0<32>
l00403A12:
	branch eax_231 >=u eax_118 + dwArg08 l00403B60
l00403B60:
	word32 ecx_135 = Mem65[ecx + 8<32>:word32]
	word32 edx_138 = ecx_135 - dwArg04
	word32 edx_143 = SLICE(edx_138 *s64 0x92492493<32>, word32, 32) + edx_138
	branch (edx_143 >> 4<32> >>u 0x1F<32>) + (edx_143 >> 4<32>) >=u dwArg08 l00403C25
l00403C25:
	word32 eax_152 = dwArg08 * 8<32> - dwArg08
	word32 edi_164 = ecx_135 - eax_152 * 4<32>
	Mem207[ecx + 8<32>:word32] = fn00402E80(dwArg04, ecx, edi_164, es, ds, edi_164, ecx_135, ecx_135)
	fn00402120(dwArg04, edi_164, ecx_135)
	edx = eax_152 * 4<32> + dwArg04
	eax_231 = fn00401D40(dwArg04, edx, fp - 0x34<32>)
l00403B93:
	word32 eax_239 = dwArg08 * 8<32> - dwArg08
	fn00402E80(dwArg04, ecx, dwArg08, es, ds, dwArg04, ecx_135, eax_239 * 4<32> + dwArg04)
	word32 ecx_263 = Mem250[ecx + 8<32>:word32] - dwArg04
	word32 edx_270 = SLICE(ecx_263 *s64 0x92492493<32>, word32, 32) + ecx_263
	fn004033B0(Mem266[ecx + 8<32>:word32], dwArg08 - (((edx_270 >> 4<32>) >>u 0x1F<32>) + (edx_270 >> 4<32>)), fp - 0x34<32>, out edx)
	Mem294[ecx + 8<32>:word32] = Mem283[ecx + 8<32>:word32] + eax_239 * 4<32>
	eax_231 = fn00401D40(dwArg04, Mem294[ecx + 8<32>:word32] - eax_239 * 4<32>, fp - 0x34<32>)
l00403A1F:
	word32 dwLoc38_637
	branch 0x9249249<32> - (eax_231 >>u 1<32>) >=u eax_231 l00403A37
l00403A37:
	dwLoc38_637 = eax_231 + (eax_231 >>u 1<32>)
l00403A2E:
	dwLoc38_637 = 0<32>
l00403A3C:
	word32 eax_340
	branch ebx_43 != 0<32> l00403A44
l00403A44:
	word32 ecx_332 = Mem330[ecx + 8<32>:word32] - ebx_43
	word32 edx_336 = SLICE(ecx_332 *s64 0x92492493<32>, word32, 32) + ecx_332
	eax_340 = (edx_336 >> 4<32> >>u 0x1F<32>) + (edx_336 >> 4<32>)
l00403A40:
	eax_340 = 0<32>
l00403A5C:
	branch dwLoc38_637 >=u eax_340 + dwArg08 l00403A6F
l00403A63:
	dwLoc38_637 = fn0040D930(ecx) + dwArg08
l00403A6F:
	word32 edx_770
	word32 ecx_769
	word32 eax_376 = fn0040DDE0(dwLoc38_637, out ecx_769, out edx_770)
	word32 dwLoc40_657 = SEQ(nLoc3F, 0<8>)
	word32 edx_771
	fn00402150(dwLoc40_657, dwArg04, ecx, dwArg08, es, ds, dwArg04, Mem441[ecx + 8<32>:word32], fn004033B0(fn00402150(dwLoc40_657, dwArg04, ecx, dwArg08, es, ds, Mem375[ecx + 4<32>:word32], dwArg04, eax_376), dwArg08, fp - 0x34<32>, out edx_771))
	word32 ebx_475 = Mem466[ecx + 4<32>:word32]
	word32 eax_476 = 0<32>
	branch ebx_475 == 0<32> l00403AF4
l00403ADC:
	word32 ecx_482 = Mem479[ecx + 8<32>:word32] - ebx_475
	word32 edx_486 = SLICE(ecx_482 *s64 0x92492493<32>, word32, 32) + ecx_482
	eax_476 = (edx_486 >> 4<32> >>u 0x1F<32>) + (edx_486 >> 4<32>)
l00403AF4:
	word32 edi_494 = dwArg08 + eax_476
	branch ebx_475 == 0<32> l00403B12
l00403AFA:
	fn004033F0(ebx_475, Mem479[ecx + 8<32>:word32])
	operator delete(Mem506[ecx + 4<32>:word32])
l00403B12:
	Mem532[ecx + 0xC<32>:word32] = eax_376 + (dwLoc38_637 * 8<32> - dwLoc38_637) * 4<32>
	edx = eax_376 + (edi_494 * 8<32> - edi_494) * 4<32>
	Mem534[ecx + 8<32>:word32] = edx
	Mem535[ecx + 4<32>:word32] = eax_376
	eax_231 = eax_376
l00403C5D:
	~basic_string(fp - 0x34<32>)
	Mem543[fs:0x00000000<p32>:word32] = eax_13
	word32 ecx_768
	fn00694B8E(eax_231, eax_18 ^ fp - 4<i32>, edx, ebx, fp - 4<i32>, esi, edi, es, ds, ebx, out ecx_768)
	return
fn00403950_exit:


word32 fn00403CA0(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403ED0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: edx
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebx edi esi esp
fn00403CA0_entry:
l00403CA0:
	word32 esi_41
	word32 esi_16 = Mem13[ecx + 4<32>:word32]
	branch esi_16 == 0<32> l00403CCA
l00403CB0:
	word32 ecx_21 = Mem13[ecx + 8<32>:word32] - esi_16
	word32 edx_25 = SLICE(ecx_21 *s64 0x92492493<32>, word32, 32) + ecx_21
	edx = edx_25 >> 4<32>
	branch (edx_25 >> 4<32> >>u 0x1F<32>) + (edx_25 >> 4<32>) != 0<32> l00403CCE
l00403CCE:
	word32 ecx_33 = dwArg08 - esi_16
	word32 edx_37 = SLICE(ecx_33 *s64 0x92492493<32>, word32, 32) + ecx_33
	edx = edx_37 >> 4<32>
	esi_41 = (edx_37 >> 4<32> >>u 0x1F<32>) + (edx_37 >> 4<32>)
l00403CCA:
	esi_41 = 0<32>
l00403CE5:
	fn00403950(ecx, edx, dwArg08, esi_41, ecx, es, ds, dwArg08, 1<32>, dwArg0C)
	word32 edx_96 = esi_41 * 8<32> - esi_41
	Mem104[dwArg04:word32] = Mem58[ecx + 4<32>:word32] + edx_96 * 4<32>
	return edx_96
fn00403CA0_exit:


word32 fn00403D10(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403E60
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: esi esp
fn00403D10_entry:
l00403D10:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem21[fs:0<32>:word32] = fp - 0xC<32>
	Mem28[ecx:word32] = 0<32>
	Mem29[ecx + 4<32>:word32] = 0<32>
	Mem30[ecx + 8<32>:word32] = 0<32>
	Mem31[ecx + 0x10<32>:word32] = 0<32>
	Mem33[ecx + 0x18<32>:word32] = 0<32>
	Mem34[ecx + 0x1C<32>:word32] = 0<32>
	Mem35[ecx + 0x20<32>:word32] = 0<32>
	basic_string(ecx + 0x24<32>)
	basic_string(fp - 0x28<32>, 0x8A698F<32>)
	Mem57[ecx + 0xC<32>:word32] = fn00408FB0(fp - 0x28<32>)
	~basic_string(fp - 0x28<32>)
	Mem61[fs:0x00000000<p32>:word32] = eax_9
	return ecx
fn00403D10_exit:


void fn00403E60(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004048C0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: esi esp
fn00403E60_entry:
l00403E60:
	word32 eax_34
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem23[fs:0<32>:word32] = fp - 0xC<32>
	word32 eax_27 = operator new(0x40<32>)
	branch eax_27 == 0<32> l00403EA7
l00403EA7:
	eax_34 = 0<32>
l00403E9E:
	eax_34 = fn00403D10(eax_27)
l00403EA9:
	Mem49[ecx:word32] = eax_34
	Mem50[eax_34:word32] = dwArg04
	Mem54[fs:0x00000000<p32>:word32] = eax_9
	return
fn00403E60_exit:


word32 fn00403ED0(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403F70
//      fn0040CBA0
//      fn00413A20
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: DP ebx edi esi esp
fn00403ED0_entry:
l00403ED0:
	word32 esi_30
	word32 ebx_17 = Mem15[ecx + 4<32>:word32]
	branch ebx_17 != 0<32> l00403EE1
l00403EE1:
	word32 ecx_22 = Mem15[ecx + 8<32>:word32] - ebx_17
	word32 edx_26 = SLICE(ecx_22 *s64 0x92492493<32>, word32, 32) + ecx_22
	esi_30 = (edx_26 >> 4<32> >>u 0x1F<32>) + (edx_26 >> 4<32>)
l00403EDD:
	esi_30 = 0<32>
l00403EF9:
	branch ebx_17 == 0<32> l00403F49
l00403EFD:
	word32 ecx_42 = Mem15[ecx + 0xC<32>:word32] - ebx_17
	word32 edx_46 = SLICE(ecx_42 *s64 0x92492493<32>, word32, 32) + ecx_42
	branch esi_30 >=u ((edx_46 >> 4<32>) >>u 0x1F<32>) + (edx_46 >> 4<32>) l00403F49
l00403F49:
	return fn00403CA0(ecx, fp + 4<32>, es, ds, fp + 4<32>, Mem15[ecx + 8<32>:word32], dwArg04)
l00403F19:
	word32 esi_106 = Mem15[ecx + 8<32>:word32]
	fn00402270(esi_106, 1<32>, dwArg04)
	Mem130[ecx + 8<32>:word32] = esi_106 + 0x1C<32>
	return dwArg04
fn00403ED0_exit:


void fn00403F70(word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404190
//      fn004046D0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00403F70_entry:
l00403F70:
	word32 edi_106
	word32 ebp_284
	word32 eax_9 = Mem7[fs:0<32>:word32]
	word32 eax_14 = Mem11[0x00A14188<p32>:word32] ^ fp - 0x74<32>
	Mem33[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(fp - 0x2C<32>, dwArg04)
	word32 eax_52 = strtok(c_str(fp - 0x2C<32>), 0x8A6BE0<32>)
	word32 esi_273 = eax_52
	ebp_284 = ebp
	edi_106 = edi
	branch eax_52 == 0<32> l0040413E
l00403FF6:
	ebp_284 = isspace
	word32 esp_274 = fp - 0x88<32>
l00404000:
	word32 esp_63 = esp_274 - 4<i32>
	Mem64[esp_63:word32] = CONVERT(Mem60[esi_273:byte], byte, int32)
	branch isspace(Mem64[esp_63:int32]) == 0<32> l00404021
l0040400D:
l00404010:
	word32 esp_77 = esp_274 - 4<i32>
	Mem78[esp_77:word32] = CONVERT(Mem73[esi_273 + 1<32>:byte], byte, int32)
	esi_273 = esi_273 + 1<32>
	branch isspace(Mem78[esp_77:int32]) != 0<32> l00404010
l00404021:
	word32 esp_123 = esp_274
	word32 eax_85 = esi_273
	word32 edx_86 = esi_273 + 1<32>
l00404026:
	eax_85 = eax_543 + 1<32>
	eax_543 = eax_85
	branch Mem396[eax_543:byte] != 0<8> l00404026
l0040402F:
	edi_106 = eax_85 - edx_86 - 1<32> + esi_273
	branch edi_106 <=u esi_273 l00404125
l0040403D:
l00404040:
	word32 esp_110 = esp_274 - 4<i32>
	Mem111[esp_110:word32] = CONVERT(Mem107[edi_106:byte], byte, int32)
	esp_123 = esp_110 + 4<32>
	branch isspace(Mem111[esp_110:int32]) == 0<32> l0040405B
l0040405B:
	branch edi_106 <=u esi_273 l00404125
l00404063:
	Mem130[esp_110:word32] = esi_273
	basic_string(esp_110 + 0x28<32>, Mem130[esp_110:(ptr32 charconst )])
	Mem136[esp_110:word32] = Mem130[esp_110 + 0x18<32>:word32]
	Mem139[esp_110 - 4<i32>:word32] = esp_110 + 0x28<32>
	Mem142[esp_110 - 8<i32>:word32] = esp_110 + 0x44<32>
	Mem143[esp_110 + 0x88<32>:byte] = 1<8>
	fn00403570(0<32>, isspace, esi_273, edi_106, es, ds, Mem143[esp_110 - 8<i32>:word32], Mem143[esp_110 - 4<i32>:word32], Mem143[esp_110:word32])
	Mem161[esp_110 + 0x88<32>:byte] = 3<8>
	~basic_string(esp_110 + 0x28<32>)
	word32 ebx_535
	word32 ebp_536
	word32 edi_537
	word32 edx_534
	word32 ecx_169 = Mem161[Mem161[fn004048C0(0<32>, isspace, esi_273, edi_106, es, ds, out edx_534, out ebx_535, out ebp_536, out edi_537):word32] + 0xC<32>:word32]
	word32 edx_171 = Mem161[Mem161[ecx_169:word32] + 4<32>:word32]
	Mem173[esp_110:word32] = 0<32>
	Mem176[esp_110 - 4<32>:word32] = esp_110 + 0x44<32>
	word32 esp_177
	word32 eax_178
	call edx_171 (retsize: 4;)
		uses: eax:esp_110 + 0x44<32>,ecx:ecx_169,edx:edx_171,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0010:dwArg0C
		defs: eax:eax_178,esp:esp_177
	branch eax_178 != 0<32> l004040E3
l004040BA:
	Mem187[esp_177 + 0x1C<32>:word32] = 0<32>
	Mem188[esp_177 + 0x20<32>:word32] = 6<32>
	Mem191[esp_177 - 4<i32>:word32] = c_str(esp_177 + 0x40<32>)
	Mem194[esp_177 - 8<i32>:word32] = 0x8A6B28<32>
	Mem196[esp_177 - 12<i32>:word32] = esp_177 + 0x1C<32>
	word32 edx_542
	fn0061FC50(0<32>, isspace, esi_273, edi_106, es, ds, Mem196[esp_177 - 12<i32>:word32], Mem196[esp_177 - 8<i32>:word32], out edx_542, out edi_106)
l004040E3:
	word32 edi_541
	word32 edx_538
	word32 ebp_540
	word32 ebx_539
	word32 eax_217 = fn004048C0(0<32>, isspace, esi_273, edi_106, es, ds, out edx_538, out ebx_539, out ebp_540, out edi_541)
	Mem224[esp_177 - 4<i32>:word32] = esp_177 + 0x40<32>
	fn00403ED0(Mem224[eax_217:word32] + 0x14<32>, es, ds, Mem224[esp_177 - 4<i32>:word32])
	Mem243[esp_177 - 4<i32>:word32] = Mem224[esp_177 + 0x18<32>:word32]
	Mem247[esp_177 - 8<i32>:word32] = c_str(esp_177 + 0x40<32>)
	Mem249[esp_177 - 12<i32>:word32] = 0x8A6B08<32>
	fn00520C80()
	Mem254[esp_177 + 0x84<32>:byte] = 0<8>
	~basic_string(esp_177 + 0x40<32>)
	esp_123 = esp_177
l0040404D:
	Mem255[edi_106:byte] = 0<8>
	edi_106 = edi_106 - 1<32>
	branch edi_106 >u esi_273 l00404040
l00404056:
l00404125:
	word32 esp_262 = esp_123 - 4<i32>
	Mem263[esp_262:word32] = 0x8A6BE0<32>
	Mem271[esp_262 - 4<i32>:word32] = 0<32>
	word32 eax_272 = strtok(Mem271[esp_262 - 4<i32>:(ptr32 charconst )], Mem271[esp_262:(ptr32 charconst )])
	esi_273 = eax_272
	esp_274 = esp_262 + 4<32>
	branch eax_272 != 0<32> l00404000
l0040413E:
	word32 ebx_526
	word32 ebp_527
	word32 edi_528
	word32 edx_303
	word32 eax_307 = Mem306[fn004048C0(0<32>, ebp_284, esi_273, edi_106, es, ds, out edx_303, out ebx_526, out ebp_527, out edi_528):word32]
	branch Mem306[eax_307 + 8<32>:word32] == 0<32> l00404156
l0040414A:
	word32 ebp_532
	word32 edi_533
	word32 ebx_531
	word32 edx_530
	eax_307 = fn004023A0(Mem306[fn004048C0(0<32>, ebp_284, esi_273, edi_106, es, ds, out edx_530, out ebx_531, out ebp_532, out edi_533):word32], 0<32>, ebp_284, esi_273, edi_106, es, ds, out edx_303)
l00404156:
	~basic_string(fp - 0x2C<32>)
	Mem328[fs:0x00000000<p32>:word32] = eax_9
	word32 ecx_529
	fn00694B8E(eax_307, eax_14 ^ fp - 116<i32>, edx_303, ebx, ebp, esi, edi, es, ds, ebx, out ecx_529)
	return
fn00403F70_exit:


byte fn00404190(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004046D0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00404190_entry:
l00404190:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	word32 eax_14 = Mem11[0x00A14188<p32>:word32] ^ fp - 0xC0<32>
	Mem33[fs:0<32>:word32] = fp - 0xC<32>
	word32 edi_136 = ecx
	word32 eax_37 = Mem36[ecx + 0x18<32>:word32]
	branch eax_37 == 0<32> l004041FF
l004041E1:
	word32 ecx_43 = Mem40[ecx + 0x1C<32>:word32] - eax_37
	word32 edx_47 = SLICE(ecx_43 *s64 0x92492493<32>, word32, 32) + ecx_43
	branch (edx_47 >> 4<32> >>u 0x1F<32>) + (edx_47 >> 4<32>) != 0<32> l0040428E
l004041FF:
	word32 eax_57 = getenv(0x8A6CB4<32>)
	branch eax_57 == 0<32> l0040428E
l00404213:
	fn00520C80()
	basic_string(fp - 0x64<32>, 0x8A698F<32>)
	basic_string(fp - 0x48<32>, eax_57)
	fn00403F70(ebx, 0<32>, eax_57, ecx, es, ds, fp - 0x48<32>, 0x8A6C44<32>, fp - 0x64<32>)
	~basic_string(fp - 0x48<32>)
	~basic_string(fp - 0x64<32>)
l0040428E:
	word32 edx_115
	word32 esp_122 = fp - 0xD4<32>
	word32 eax_105 = Mem104[ecx + 0x18<32>:word32]
	branch eax_105 == 0<32> l004042B3
l00404295:
	word32 ecx_110 = Mem104[ecx + 0x1C<32>:word32] - eax_105
	word32 edx_114 = SLICE(ecx_110 *s64 0x92492493<32>, word32, 32) + ecx_110
	edx_115 = edx_114 >> 4<32>
	branch (edx_114 >> 4<32> >>u 0x1F<32>) + (edx_114 >> 4<32>) != 0<32> l00404658
l004042B3:
	basic_string(fp - 0x64<32>)
l004042C5:
	word32 esp_154
	word32 esp_128 = esp_122 - 4<i32>
	Mem129[esp_128:word32] = 0x8A698F<32>
	word32 ecx_127 = esp_122 + 0xD8<32>
	Mem131[esp_128 - 4<i32>:word32] = ecx_127
	word32 esp_138
	word32 eax_139
	call MSVCP80.dll!??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z (retsize: 4;)
		uses: ecx:ecx_127
		defs: eax:eax_139,esp:esp_138
	branch SLICE(eax_139, byte, 0) == 0<8> l00404319
l00404319:
	Mem151[esp_138 + 4<32>:word32] = esp_138 + 0xE0<32>
	operator =(esp_138 + 0x78<32>, Mem151[esp_138 + 4<32>:(ptr32 basic_string)])
	esp_154 = esp_138 + 8<32>
l004042DF:
	Mem157[esp_138 + 4<32>:word32] = esp_138 + 0xB0<32>
	word32 esp_169 = <invalid>
	word32 esi_1022
	word32 ebx_1021
	Mem179[esp_169:word32] = fn00403420(0<32>, edi_136, es, ds, Mem157[esp_138 + 4<32>:word32], out ebx_1021, out esi_1022, out edi_136)
	Mem181[esp_169 + 0xD4<32>:byte] = 4<8>
	operator =(esp_169 + 0x74<32>, Mem181[esp_169:(ptr32 basic_string)])
	Mem185[esp_169 + 0xD4<32>:byte] = 3<8>
	~basic_string(esp_169 + 0xAC<32>)
	esp_154 = esp_169 + 4<32>
l0040432B:
	word32 esp_187 = esp_154 - 4<i32>
	Mem188[esp_187:word32] = 0x8A698F<32>
	word32 eax_190 = operator =(esp_187 + 0xDC<32>, Mem188[esp_187:(ptr32 charconst )])
	Mem193[esp_187:word32] = 0x8A6C38<32>
	Mem196[esp_187 - 4<i32>:word32] = esp_187 + 0x74<32>
	Mem199[esp_187 - 8<i32>:word32] = esp_187 + 0x90<32>
	word32 esp_206
	call MSVCP80.dll!??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z (retsize: 4;)
		uses: eax:eax_190,ecx:esp_187 + 0x74<32>,edx:esp_187 + 0x90<32>
		defs: esp:esp_206
	word32 ecx_214 = Mem199[edi_136 + 0xC<32>:word32]
	word32 eax_216 = Mem199[Mem199[ecx_214:word32] + 4<32>:word32]
	Mem218[esp_206 + 8<32>:word32] = 0<32>
	Mem221[esp_206 + 4<32>:word32] = esp_206 + 0x98<32>
	Mem222[esp_206 + 0xDC<32>:byte] = 5<8>
	word32 eax_224
	word32 esp_223
	call eax_216 (retsize: 4;)
		uses: eax:eax_216,ecx:ecx_214,edx:esp_206 + 0x98<32>
		defs: eax:eax_224,esp:esp_223
	branch eax_224 == 0<32> l004045EF
l0040437B:
	Mem235[esp_223 - 4<i32>:word32] = c_str(esp_223 + 0x8C<32>)
	Mem237[esp_223 - 8<i32>:word32] = 0x8A6C28<32>
	fn00520C80()
	word32 ecx_238 = Mem237[edi_136 + 0xC<32>:word32]
	word32 edx_240 = Mem237[Mem237[ecx_238:word32] + 0x10<32>:word32]
	Mem245[esp_223 - 4<i32>:word32] = esp_223 + 0x8C<32>
	Mem248[esp_223 - 8<i32>:word32] = esp_223 + 0x14<32>
	word32 esp_249
	call edx_240 (retsize: 4;)
		uses: eax:esp_223 + 0x14<32>,ecx:ecx_238,edx:edx_240
		defs: esp:esp_249
	Mem256[esp_249 - 4<i32>:word32] = 0x8A6C20<32>
	Mem258[esp_249 + 0xD0<32>:byte] = 6<8>
	basic_string(esp_249 + 0x54<32>, Mem258[esp_249 - 4<i32>:(ptr32 charconst )])
	Mem262[esp_249 - 4<i32>:word32] = esp_249 + 0x54<32>
	Mem265[esp_249 - 4<i32>:word32] = Mem262[esp_249 + 0x14<32>:word32]
	word32 eax_266 = Mem265[esp_249 + 0x14<32>:word32]
	Mem268[esp_249 + 0xD0<32>:byte] = 7<8>
	Mem269[esp_249 + 0x34<32>:word32] = esp_249 - 4<i32>
	branch eax_266 == 0<32> l004043E5
l004043E1:
	Mem272[eax_266 + 4<32>:word32] = Mem269[eax_266 + 4<32>:word32] + 1<32>
l004043E5:
	Mem277[esp_249 - 8<i32>:word32] = esp_249 + 0x54<32>
	Mem280[esp_249 - 12<i32>:word32] = esp_249 + 0x1C<32>
	word32 ebx_301 = Mem280[fn00418D40(es, ds, Mem280[esp_249 - 12<i32>:word32], Mem280[esp_249 - 4<i32>:word32]):word32]
	Mem305[esp_249 + 0x34<32>:word32] = ebx_301
	word32 esp_302 = esp_249
	branch ebx_301 == 0<32> l00404408
l00404401:
	fn00401AD0(ebx_301)
l00404408:
	word32 ecx_314 = Mem305[esp_249 + 0x1C<32>:word32]
	Mem317[esp_249 + 0xD0<32>:byte] = 8<8>
	branch ecx_314 == 0<32> l00404431
l00404418:
	word32 eax_320 = fn00401AE0(ecx_314)
	branch eax_320 != 1<32> l00404431
l00404424:
	branch ecx_314 == 0<32> l00404431
l00404428:
	word32 edx_329 = Mem317[ecx_314:word32]
	Mem331[esp_249 - 4<i32>:word32] = eax_320
	call Mem331[edx_329:word32] (retsize: 4;)
		uses: ecx:ecx_314,edx:edx_329
		defs: esp:esp_340
l00404431:
	Mem348[esp_302 + 0x1C<32>:word32] = 0<32>
	Mem350[esp_302 + 0xD0<32>:byte] = 9<8>
	~basic_string(esp_302 + 0x54<32>)
	branch ebx_301 == 0<32> l00404597
l00404597:
	word32 esp_354 = esp_302 - 4<i32>
	Mem355[esp_354:word32] = 0x8A6BE4<32>
	fn00520C80()
	esp_223 = esp_354 + 4<32>
l0040444F:
	word32 esp_358 = esp_302 - 4<i32>
	Mem359[esp_358:word32] = 0x8A6C18<32>
	basic_string(esp_358 + 0xAC<32>, Mem359[esp_358:(ptr32 charconst )])
	Mem364[esp_358:word32] = 0<32>
	Mem367[esp_358 - 4<i32>:word32] = esp_358 + 0xAC<32>
	Mem370[esp_358 - 8<i32>:word32] = esp_358 + 0x1C<32>
	Mem372[esp_358 + 0xD4<32>:byte] = 0xA<8>
	word32 edx_1026
	fn0040E780(ebx_301, Mem372[esp_358 - 8<i32>:word32], Mem372[esp_358 - 4<i32>:word32], out edx_1026)
	Mem384[esp_358 + 0x28<32>:word32] = 0<32>
	Mem385[esp_358 + 0x2C<32>:word32] = 0<32>
	Mem386[esp_358 + 0x30<32>:word32] = 0<32>
	Mem388[esp_358 + 0xD4<32>:byte] = 0xC<8>
	word32 eax_382 = 0<32>
	word32 ecx_383 = 0<32>
	branch Mem386[esp_358 + 0x1C<32>:word32] == 0<32> l004044E1
l0040449C:
	Mem391[esp_358:word32] = 0x8A6C10<32>
	basic_string(esp_358 + 0x3C<32>, Mem391[esp_358:(ptr32 charconst )])
	Mem396[esp_358:word32] = 0<32>
	Mem399[esp_358 - 4<i32>:word32] = esp_358 + 0x24<32>
	Mem402[esp_358 - 8<i32>:word32] = esp_358 + 0x3C<32>
	word32 ecx_403 = Mem402[esp_358 + 0x1C<32>:word32]
	Mem404[esp_358 + 0xD4<32>:byte] = 0xD<8>
	ebx_301 = fn00413A20(ecx_403, es, ds, Mem404[esp_358 - 8<i32>:word32], Mem404[esp_358 - 4<i32>:word32], Mem404[esp_358:word32], out edi_136)
	Mem429[esp_358 + 0xD4<32>:byte] = 0xC<8>
	~basic_string(esp_358 + 0x3C<32>)
	ecx_383 = Mem429[esp_358 + 0x2C<32>:word32]
	eax_382 = Mem429[esp_358 + 0x28<32>:word32]
l004044E1:
	word32 esi_435 = eax_382
	branch eax_382 == ecx_383 l00404512
l004044E7:
l004044F0:
	word32 esp_439 = esp_302 - 4<i32>
	Mem440[esp_439:word32] = esp_302 + 0x70<32>
	Mem442[esp_439 - 4<i32>:word32] = 0x8A6C00<32>
	Mem445[esp_439 - 8<i32>:word32] = esi_435
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg12 = <invalid>
	fn00403F70(ebx_301, 0<32>, esi_435, edi_136, es, ds, stackArg4, stackArg8, stackArg12)
	ecx_383 = Mem445[esp_439 + 0x2C<32>:word32]
	esi_435 = esi_435 + 0x1C<32>
	branch esi_435 != ecx_383 l004044F0
l0040450E:
	eax_382 = Mem445[esp_439 + 0x28<32>:word32]
l00404512:
	Mem470[esp_302 + 0xD0<32>:byte] = 0xB<8>
	branch eax_382 == 0<32> l00404546
l0040451E:
	word32 esi_475 = eax_382
	branch eax_382 == ecx_383 l00404539
l00404526:
	~basic_string(esi_475)
	esi_475 = esi_475 + 0x1C<32>
	branch esi_475 != ecx_383 l00404526
l00404535:
	eax_382 = Mem470[esp_302 + 0x24<32>:word32]
l00404539:
	word32 esp_487 = esp_302 - 4<i32>
	Mem489[esp_487:word32] = eax_382
	operator delete(Mem489[esp_487:(ptr32 void)])
	edi_136 = Mem489[esp_487 + 0x34<32>:word32]
l00404546:
	word32 ecx_495 = Mem494[esp_302 + 0x18<32>:word32]
	Mem500[esp_302 + 0x24<32>:word32] = 0<32>
	Mem501[esp_302 + 0x28<32>:word32] = 0<32>
	Mem502[esp_302 + 0x2C<32>:word32] = 0<32>
	Mem503[esp_302 + 0xD0<32>:byte] = 0xA<8>
	esp_223 = esp_302
	branch ecx_495 == 0<32> l0040457C
l00404562:
	branch fn00401AE0(ecx_495) != 1<32> l0040457C
l0040456E:
	branch ecx_495 == 0<32> l0040457C
l00404572:
	word32 eax_515 = Mem503[ecx_495:word32]
	word32 edx_516 = Mem503[eax_515:word32]
	Mem518[esp_302 - 4<i32>:word32] = 1<32>
	call edx_516 (retsize: 4;)
		uses: eax:eax_515,ecx:ecx_495
		defs: esp:esp_540
l0040457C:
	Mem549[esp_223 + 0x18<32>:word32] = 0<32>
	Mem550[esp_223 + 0xD0<32>:byte] = 9<8>
	~basic_string(esp_223 + 0xA8<32>)
l004045A4:
	Mem556[esp_223 + 0xD0<32>:byte] = 6<8>
	branch ebx_301 == 0<32> l004045C6
l004045B0:
	branch fn00401AE0(ebx_301) != 1<32> l004045C6
l004045BC:
	word32 eax_566 = Mem556[ebx_301:word32]
	word32 edx_567 = Mem556[eax_566:word32]
	Mem569[esp_223 - 4<i32>:word32] = 1<32>
	call edx_567 (retsize: 4;)
		uses: eax:eax_566,ecx:ebx_551
		defs: esp:esp_585
l004045C6:
	word32 eax_593 = Mem592[esp_223 + 0x14<32>:word32]
	Mem596[esp_223 + 0xD0<32>:byte] = 5<8>
	branch eax_593 == 0<32> l004045EB
l004045D6:
	Mem599[eax_593 + 4<32>:word32] = Mem596[eax_593 + 4<32>:word32] + 0xFFFFFFFF<32>
	branch Mem599[eax_593 + 4<32>:word32] != 0<32> l004045EB
l004045E3:
	word32 eax_604 = Mem599[eax_593:word32]
	word32 edx_605 = Mem599[eax_604:word32]
	Mem607[esp_223 - 4<i32>:word32] = 1<32>
	call edx_605 (retsize: 4;)
		uses: eax:eax_604,ecx:eax_593
		defs: esp:esp_613
l004045EB:
	Mem621[esp_223 + 0x14<32>:word32] = 0<32>
l004045EF:
	Mem624[esp_223 + 0xD0<32>:byte] = 3<8>
	~basic_string(esp_223 + 0x8C<32>)
	word32 esp_626 = esp_223 - 4<i32>
	Mem627[esp_626:word32] = esp_223 + 0xA8<32>
	word32 esp_694 = <invalid>
	word32 esi_1024
	word32 ebx_1023
	Mem702[esp_694 - 4<i32>:word32] = fn00403420(0<32>, edi_136, es, ds, Mem627[esp_626:word32], out ebx_1023, out esi_1024, out edi_136)
	Mem705[esp_694 - 8<i32>:word32] = esp_694 + 0x74<32>
	Mem706[esp_694 + 0xD4<32>:byte] = 0xE<8>
	word32 esp_709
	word32 eax_710
	call MSVCP80.dll!??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: ecx:esp_694 + 0x74<32>
		defs: eax:eax_710,edx:edx_712,esp:esp_709
	Mem719[esp_709 + 0xDC<32>:byte] = 3<8>
	~basic_string(esp_709 + 0xB4<32>)
	byte al_717 = SLICE(eax_710, byte, 0)
	esp_122 = esp_709 + 0xC<32>
	branch al_717 != 0<8> l004042C5
l00404647:
	Mem724[esp_709 + 0xDC<32>:byte] = al_717
	~basic_string(esp_709 + 0x7C<32>)
l00404658:
	word32 eax_740
	word32 eax_727 = Mem726[edi_136 + 0x18<32>:word32]
	branch eax_727 != 0<32> l00404663
l00404663:
	word32 ecx_732 = Mem726[edi_136 + 0x1C<32>:word32] - eax_727
	word32 edx_736 = SLICE(ecx_732 *s64 0x92492493<32>, word32, 32) + ecx_732
	edx_115 = edx_736 >> 4<32>
	eax_740 = (edx_736 >> 4<32> >>u 0x1F<32>) + (edx_736 >> 4<32>)
l0040465F:
	eax_740 = 0<32>
l0040467B:
	~basic_string(fp + 4<32>)
	Mem759[fs:0x00000000<p32>:word32] = eax_9
	word32 ecx_1025
	return SLICE(fn00694B8E(SEQ(SLICE(eax_740, word24, 8), CONVERT(eax_740 != 0<32>, bool, int8)), eax_14 ^ fp - 192<i32>, edx_115, ebx, ebp, esi, edi, es, ds, ebx, out ecx_1025), byte, 0)
fn00404190_exit:


byte fn004046D0(word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401080
//      fn004048C0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax edx
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004046D0_entry:
l004046D0:
	word32 edi_156
	word32 esi_157
	word32 eax_9 = Mem7[fs:0<32>:word32]
	word32 eax_14 = Mem11[0x00A14188<p32>:word32] ^ fp - 0x68<32>
	Mem33[fs:0<32>:word32] = fp - 0xC<32>
	Mem40[0x00A53EF0<p32>:byte] = 1<8>
	word32 ebp_241 = 0<32>
	esi_157 = esi
	edi_156 = edi
	branch dwArg04 <= 0xFFFFFFFF<32> l0040484F
l00404728:
l00404730:
	word32 eax_45 = Mem44[dwArg08 + ebp_241 * 4<32>:word32]
	word32 edi_130 = 0x8A6970<32>
	word32 esi_127 = eax_45
	word32 ecx_48 = 6<32>
	bool v31_443 = true
l00404741:
	branch ecx_48 == 0<32> l00404743
l00404741_1:
	v31_443 = Mem44[esi_127:byte] == Mem44[edi_130:byte]
	esi_127 = esi_127 + 1<i32>
	edi_130 = edi_130 + 1<i32>
	ecx_48 = ecx_48 - 1<32>
	branch Mem44[esi_127:byte] != Mem44[edi_130:byte] l00404741
l00404743:
	branch v31_443 l00404757
l00404745:
	esi_127 = eax_45
	edi_130 = 0x8A696C<32>
	word32 ecx_68 = 3<32>
	bool v35_447 = false
l00404753:
	branch ecx_68 == 0<32> l00404755
l00404753_2:
	v35_447 = Mem44[esi_127:byte] != Mem44[edi_130:byte]
	esi_127 = esi_127 + 1<i32>
	edi_130 = edi_130 + 1<i32>
	ecx_68 = ecx_68 - 1<32>
	branch Mem44[esi_127:byte] != Mem44[edi_130:byte] l00404753
l00404755:
	branch v35_447 l004047BD
l00404757:
	basic_string(fp - 0x64<32>, 0x8A698F<32>)
	basic_string(fp - 0x48<32>, Mem91[dwArg08 + 4<32> + ebp_241 * 4<32>:word32])
	fn00403F70(dwArg08, ebp_241, esi_127, edi_130, es, ds, fp - 0x48<32>, dwArg04, dwArg08)
	~basic_string(fp - 0x48<32>)
	~basic_string(fp - 0x64<32>)
l004047BD:
	word32 eax_155 = Mem153[dwArg08 + ebp_241 * 4<32>:word32]
	edi_156 = 0x8A6CF4<32>
	esi_157 = eax_155
	word32 ecx_158 = 5<32>
	bool v39_451 = true
l004047CE:
	branch ecx_158 == 0<32> l004047D0
l004047CE_1:
	v39_451 = Mem153[esi_157:byte] == Mem153[edi_156:byte]
	esi_157 = esi_157 + 1<i32>
	edi_156 = edi_156 + 1<i32>
	ecx_158 = ecx_158 - 1<32>
	branch Mem153[esi_157:byte] != Mem153[edi_156:byte] l004047CE
l004047D0:
	branch v39_451 l004047E4
l004047D2:
	esi_157 = eax_155
	edi_156 = 0x8A6CEC<32>
	word32 ecx_178 = 5<32>
	bool v43_455 = false
l004047E0:
	branch ecx_178 == 0<32> l004047E2
l004047E0_2:
	v43_455 = Mem153[esi_157:byte] != Mem153[edi_156:byte]
	esi_157 = esi_157 + 1<i32>
	edi_156 = edi_156 + 1<i32>
	ecx_178 = ecx_178 - 1<32>
	branch Mem153[esi_157:byte] != Mem153[edi_156:byte] l004047E0
l004047E2:
	branch v43_455 l00404842
l004047E4:
	fn00520C80()
	basic_string(fp - 0x2C<32>, 0x8A6CC0<32>)
	operator +=(fp - 0x2C<32>, Mem220[dwArg08 + 4<32> + ebp_241 * 4<32>:word32])
	_putenv(c_str(fp - 0x2C<32>))
	~basic_string(fp - 0x2C<32>)
l00404842:
	ebp_241 = ebp_241 + 1<32>
	branch ebp_241 < dwArg04 + 0xFFFFFFFF<32> l00404730
l0040484F:
	basic_string(fp - 0x98<32>, 0x8A698F<32>)
	word32 edx_661
	word32 ebx_662
	word32 ebp_663
	word32 edi_664
	byte al_300 = SLICE(CONVERT(fn00404190(Mem291[fn004048C0(dwArg08, ebp_241, esi_157, edi_156, es, ds, out edx_661, out ebx_662, out ebp_663, out edi_664):word32], dwArg08, ebp_241, esi_157, edi_156, es, ds), uint8, uint32), byte, 0)
	word32 ebx_303 = SEQ(SLICE(dwArg08, word24, 8), al_300)
	word32 ebx_666
	word32 ebp_667
	word32 edi_668
	word32 edx_665
	word32 edx_314
	word24 eax_24_8_347 = SLICE(fn004023A0(Mem291[fn004048C0(ebx_303, ebp_241, esi_157, edi_156, es, ds, out edx_665, out ebx_666, out ebp_667, out edi_668):word32], ebx_303, ebp_241, esi_157, edi_156, es, ds, out edx_314), word24, 8)
	branch al_300 == 0<8> l0040489C
l00404897:
	eax_24_8_347 = SLICE(fn00402B60(ebx_303, ebp_241, edi_156, es, ds, out edx_314), word24, 8) (alias)
l0040489C:
	Mem332[fs:0x00000000<p32>:word32] = eax_9
	word32 ecx_669
	word32 eax_432 = fn00694B8E(SEQ(eax_24_8_347, al_300), eax_14 ^ fp - 104<i32>, edx_314, ebx, ebp, esi, edi, es, ds, ebx, out ecx_669)
	edxOut = edx_314
	return SLICE(eax_432, byte, 0)
fn004046D0_exit:


word32 fn004048C0(word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401C70
//      fn00402A20
//      fn00403F70
//      fn004046D0
//      fn00404990
//      fn00404A20
//      fn00404AB0
//      fn00404FF0
//      fn0042B310
//      fn00657290
//      fn007B2D10
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp ebx edi edx
// Trashed: SCZO eax ebp ebx ecx edi edx Top
// Preserved: DP esi esp
fn004048C0_entry:
l004048C0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem21[fs:0<32>:word32] = fp - 0xC<32>
	branch Mem21[0x00A53EF0<p32>:byte] != 0<8> l00404918
l004048ED:
	word32 edx_177
	fn0061FC50(ebx, ebp, esi, edi, es, ds, fp - 0x14<32>, 0x8A6D10<32>, out edx_177, out edi)
	word32 edx_178
	fn004046D0(ebx, ebp, esi, edi, es, ds, 0<32>, 0<32>, out edx_178)
l00404918:
	word32 edx_64 = Mem61[fs:0x0000002C<p32>:word32]
	word32 esi_105 = Mem61[edx_64 + Mem61[0x00A6B0F4<p32>:word32] * 4<32>:word32]
	branch Mem61[esi_105 + 8<32>:word32] != 0<32> l0040496F
l00404931:
	branch (Mem61[0x00A53F14<p32>:byte] & 1<8>) != 0<8> l00404965
l0040493E:
	Mem74[0x00A53F14<p32>:word32] = Mem61[0x00A53F14<p32>:word32] | 1<32>
	fn00403E60(0xA53F10<32>, 0<32>)
	ebx = fn00694C8C(ebx, esi_105, edi, out ebp, out esi_105, out edi)
l00404965:
	Mem106[esi_105 + 8<32>:word32] = 0xA53F10<32>
l0040496F:
	word32 eax_109 = Mem108[esi_105 + 8<32>:word32]
	Mem115[fs:0x00000000<p32>:word32] = eax_9
	edxOut = edx_64
	ebxOut = ebx
	ebpOut = ebp
	ediOut = edi
	return eax_109
fn004048C0_exit:


byte fn00404990(word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & edxOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404FF0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax ebp edi edx
// Trashed: SCZO eax ebp ecx edi edx Top
// Preserved: ebx esp
fn00404990_entry:
l00404990:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem23[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(fp - 0x28<32>, c_str(dwArg04))
	word32 ebp_43
	word32 edi_45
	word32 edx_101
	word32 ebx_102
	word32 ecx_51 = Mem31[Mem31[fn004048C0(ebx, ebp, esi, edi, es, ds, out edx_101, out ebx_102, out ebp_43, out edi_45):word32] + 8<32>:word32]
	word32 edx_53 = Mem31[Mem31[ecx_51:word32] + 4<32>:word32]
	word32 eax_60
	word32 edx_62
	call edx_53 (retsize: 4;)
		uses: eax:fp - 0x28<32>,ecx:ecx_51,edx:edx_53,Stack +0004:fp - 0x28<32>,Stack +0008:0<32>,Stack +0040:dwArg04
		defs: eax:eax_60,edx:edx_62
	~basic_string(fp - 0x28<32>)
	Mem72[fs:0x00000000<p32>:word32] = eax_9
	edxOut = edx_62
	ebpOut = ebp_43
	ediOut = edi_45
	return CONVERT(eax_60 != 0<32>, bool, int8)
fn00404990_exit:


byte fn00404A20(word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & edxOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404FF0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax ebp edi edx
// Trashed: SCZO eax ebp ecx edi edx Top
// Preserved: ebx esp
fn00404A20_entry:
l00404A20:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem23[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(fp - 0x28<32>, c_str(dwArg04))
	word32 ebp_43
	word32 edi_45
	word32 edx_101
	word32 ebx_102
	word32 ecx_51 = Mem31[Mem31[fn004048C0(ebx, ebp, esi, edi, es, ds, out edx_101, out ebx_102, out ebp_43, out edi_45):word32] + 0xC<32>:word32]
	word32 edx_53 = Mem31[Mem31[ecx_51:word32] + 4<32>:word32]
	word32 eax_60
	word32 edx_62
	call edx_53 (retsize: 4;)
		uses: eax:fp - 0x28<32>,ecx:ecx_51,edx:edx_53,Stack +0004:fp - 0x28<32>,Stack +0008:0<32>,Stack +0040:dwArg04
		defs: eax:eax_60,edx:edx_62
	~basic_string(fp - 0x28<32>)
	Mem72[fs:0x00000000<p32>:word32] = eax_9
	edxOut = edx_62
	ebpOut = ebp_43
	ediOut = edi_45
	return CONVERT(eax_60 != 0<32>, bool, int8)
fn00404A20_exit:


word32 fn00404AB0(word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & edxOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404FF0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax ebp edi edx
// Trashed: SCZO eax ebp ecx edi edx Top
// Preserved: ebx esi esp
fn00404AB0_entry:
l00404AB0:
	word32 ebx_68
	word32 eax_77
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem24[fs:0<32>:word32] = fp - 0xC<32>
	word32 ebx_40
	word32 edx_172
	word32 edi_158
	word32 ebp_155
	word32 eax_46 = Mem28[fn004048C0(0<32>, ebp, esi, edi, es, ds, out edx_172, out ebx_40, out ebp_155, out edi_158):word32]
	word32 edx_161 = Mem28[eax_46 + 0x18<32>:word32]
	branch edx_161 == 0<32> l00404B06
l00404AEC:
	word32 ecx_53 = Mem28[eax_46 + 0x1C<32>:word32] - edx_161
	word32 edx_57 = SLICE(ecx_53 *s64 0x92492493<32>, word32, 32) + ecx_53
	edx_161 = edx_57 >> 4<32>
	branch (edx_57 >> 4<32> >>u 0x1F<32>) + (edx_57 >> 4<32>) != 0<32> l00404B24
l00404B24:
	eax_77 = Mem28[Mem28[fn004048C0(ebx_40, ebp_155, esi, edi_158, es, ds, out edx_161, out ebx_68, out ebp_155, out edi_158):word32] + 0x18<32>:word32]
l00404B06:
	eax_77 = basic_string(fp - 0x28<32>, 0x8A698F<32>)
	ebx_68 = 1<32>
l00404B31:
	basic_string(dwArg04, eax_77)
	branch (SLICE(ebx_68 | 2<32>, byte, 0) & 1<8>) == 0<8> l00404B5F
l00404B4E:
	~basic_string(fp - 0x28<32>)
l00404B5F:
	Mem116[fs:0x00000000<p32>:word32] = eax_9
	edxOut = edx_161
	ebpOut = ebp_155
	ediOut = edi_158
	return dwArg04
fn00404AB0_exit:


word32 fn00404FF0(word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00405370
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax edx
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00404FF0_entry:
l00404FF0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	word32 eax_14 = Mem11[0x00A14188<p32>:word32] ^ fp - 0xAC<32>
	Mem33[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(dwArg04)
	word32 edi_112 = dwArg04
	branch strchr(c_str(dwArg08), 0x3A<32>) != 0<32> l0040535F
l00405083:
	branch Mem51[c_str(dwArg08):byte] == 0x5C<8> l0040535F
l00405094:
	branch Mem51[c_str(dwArg08):byte] == 0x2F<8> l0040535F
l004050A5:
	word32 esp_124 = fp - 0xC0<32>
	branch SLICE(CONVERT(fn00401880(dwArg08), uint8, uint32), byte, 0) == 0<8> l0040535F
l0040535F:
	operator =(dwArg04, dwArg08)
l004050B6:
	word32 ebp_96
	word32 ebx_97
	word32 edi_98
	word32 edx_569
	word32 esi_104 = Mem66[Mem66[fn004048C0(0<32>, ebp, dwArg08, dwArg04, es, ds, out edx_569, out ebx_97, out ebp_96, out edi_98):word32] + 0x18<32>:word32]
	word32 ebx_111
	word32 ebp_570
	fn004048C0(ebx_97, ebp_96, esi_104, edi_98, es, ds, out edx, out ebx_111, out ebp_570, out edi_112)
	byte bl_128 = SLICE(ebx_111, byte, 0)
	word24 ebx_24_8_492 = SLICE(ebx_111, word24, 8)
	word32 ebp_118 = MSVCP80.dll!??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
l004050DA:
	word32 ebx_387 = SEQ(ebx_24_8_492, bl_128)
	branch esi_104 == Mem125[esp_124 + 0x18<32>:word32] l00405158
l00405158:
	word32 ebx_142 = SEQ(ebx_24_8_492, bl_128)
	branch bl_128 != 0<8> l00405335
l00405160:
	word32 esp_133 = esp_124 - 4<i32>
	Mem134[esp_133:word32] = Mem125[esp_124 + 0x14<32>:word32]
	Mem137[esp_133 - 4<i32>:word32] = esp_133 + 0x98<32>
	fn00403200(esp_133 + 0x98<32>, ebx_142, ebp_118, esi_104, edi_112, es, ds, Mem137[esp_133 - 4<i32>:word32], Mem137[esp_133:word32])
	Mem159[esp_133 + 0xC0<32>:word32] = 3<32>
	word32 esp_157 = esp_133 + 4<32>
	word32 ebp_163
	word32 ebx_164
	word32 esi_171 = Mem159[Mem159[fn004048C0(ebx_142, ebp_118, esi_104, edi_112, es, ds, out edx, out ebx_164, out ebp_163, out edi_112):word32] + 0x18<32>:word32]
	branch esi_171 == Mem159[esp_133 + 0x1C<32>:word32] l00405299
l00405197:
	word32 esp_177 = esp_157 - 4<i32>
	Mem179[esp_177:word32] = esi_171
	Mem181[esp_177 - 4<i32>:word32] = esp_157 + 0x40<32>
	word32 edx_573
	Mem205[esp_177:word32] = fn00402D20(edx, ebx_164, ebp_163, esi_171, edi_112, es, ds, Mem181[esp_177 - 4<i32>:word32], Mem181[esp_177:word32], out edx_573, out esi_171)
	Mem207[esp_177 + 0xC0<32>:byte] = 4<8>
	basic_string(esp_177 + 0x7C<32>, Mem207[esp_177:(ptr32 basic_string)])
	Mem211[esp_177 + 0xC0<32>:byte] = 6<8>
	~basic_string(esp_177 + 0x44<32>)
	Mem214[esp_177:word32] = esp_177 + 0x98<32>
	Mem217[esp_177 - 4<i32>:word32] = esp_177 + 0x7C<32>
	Mem220[esp_177 - 8<i32>:word32] = esp_177 + 0x28<32>
	word32 esp_222
	word32 eax_223
	call ebp_163 (retsize: 4;)
		uses: eax:esp_177 + 0x28<32>,ecx:esp_177 + 0x98<32>,edx:esp_177 + 0x7C<32>,Stack +0008:dwArg04,Stack +000C:dwArg08
		defs: eax:eax_223,esp:esp_222
	Mem229[esp_222 - 4<i32>:word32] = 0x2E<32>
	Mem231[esp_222 - 8<i32>:word32] = eax_223
	Mem234[esp_222 - 12<i32>:word32] = esp_222 + 0x68<32>
	Mem235[esp_222 + 0xC8<32>:byte] = 7<8>
	word32 esp_236
	word32 eax_237
	call MSVCP80.dll!??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z (retsize: 4;)
		uses: ecx:esp_222 + 0x68<32>,edx:edx_249,Stack +0008:dwArg04,Stack +000C:dwArg08
		defs: eax:eax_237,esp:esp_236
	Mem243[esp_236 - 4<i32>:word32] = eax_237
	Mem244[esp_236 + 0xD4<32>:byte] = 8<8>
	byte al_256 = SLICE(CONVERT(fn00404990(ebx_164, ebp_163, esi_171, edi_112, es, ds, Mem244[esp_236 - 4<i32>:word32], out edx, out ebp_163, out edi_112), uint8, uint32), byte, 0)
	Mem258[esp_236 + 0xD4<32>:byte] = 7<8>
	~basic_string(esp_236 + 0x74<32>)
	Mem260[esp_236 + 0xD4<32>:byte] = 6<8>
	~basic_string(esp_236 + 0x3C<32>)
	word24 ebx_24_8_273 = SLICE(ebx_164, word24, 8)
	esp_157 = esp_236 + 0x18<32>
	branch al_256 != 0<8> l00405250
l00405250:
	Mem266[esp_236 + 0x14<32>:word32] = Mem260[esp_236 + 0x2C<32>:word32]
	Mem269[esp_236 + 0x10<32>:word32] = esp_236 + 0x90<32>
	Mem272[esp_236 + 0xC<32>:word32] = esp_236 + 0x3C<32>
	word32 eax_275
	call ebp_163 (retsize: 4;)
		uses: Stack +0004:Mem272[esp_236 + 0xC<32>:word32]
		defs: eax:eax_275,ebp:ebp_276,edi:edi_278,edx:edx_279
	Mem287[esp_236 + 0x14<32>:word32] = eax_275
	Mem289[esp_236 + 0xD4<32>:byte] = 9<8>
	operator =(edi_112, Mem289[esp_236 + 0x14<32>:(ptr32 basic_string)])
	Mem293[esp_236 + 0xD4<32>:byte] = 6<8>
	~basic_string(esp_236 + 0x3C<32>)
	Mem295[esp_236 + 0xD4<32>:byte] = 3<8>
	~basic_string(esp_236 + 0x90<32>)
	esp_157 = esp_236 + 0x18<32>
	ebx_164 = SEQ(ebx_24_8_273, al_256) (alias)
l0040522F:
	Mem297[esp_236 + 0xD4<32>:byte] = 3<8>
	~basic_string(esp_236 + 0x90<32>)
	esi_171 = esi_171 + 0x1C<32>
	ebx_164 = SEQ(ebx_24_8_273, al_256) (alias)
	branch esi_171 + 0x1C<32> != Mem297[esp_236 + 0x30<32>:word32] l00405197
l0040524E:
	ebx_164 = SEQ(ebx_24_8_273, al_256) (alias)
l00405299:
	Mem303[esp_157 + 0xBC<32>:byte] = 0<8>
	~basic_string(esp_157 + 0x94<32>)
	branch SLICE(ebx_164, byte, 0) != 0<8> l00405335
l004052B6:
	word32 esp_310 = esp_157 - 4<i32>
	Mem311[esp_310:word32] = esp_157 + 0x40<32>
	word32 ebp_322
	word32 edi_324
	word32 edx_325
	Mem331[esp_310 - 4<i32>:word32] = fn00404AB0(ebp_163, esi_171, edi_112, es, ds, Mem311[esp_310:word32], out edx_325, out ebp_322, out edi_324)
	Mem334[esp_310 - 8<i32>:word32] = esp_310 + 0x60<32>
	Mem335[esp_310 + 0xC0<32>:word32] = 0xA<32>
	word32 esi_575
	word32 edx_574
	word32 eax_339 = fn00402D20(edx_325, ebx_164, ebp_322, esi_171, edi_324, es, ds, Mem335[esp_310 - 8<i32>:word32], Mem335[esp_310 - 4<i32>:word32], out edx_574, out esi_575)
	Mem351[esp_310 - 12<i32>:word32] = Mem335[esp_310 + 0x18<32>:word32]
	Mem353[esp_310 - 16<i32>:word32] = eax_339
	Mem357[esp_310 - 20<i32>:word32] = esp_310 + 0x28<32>
	Mem358[esp_310 + 0xC0<32>:byte] = 0xB<8>
	word32 eax_359
	call ebp_322 (retsize: 4;)
		uses: Stack +0004:Mem358[esp_310 - 20<i32>:word32]
		defs: eax:eax_359,edi:edi_362,edx:edx_363
	Mem371[esp_310:word32] = eax_359
	Mem373[esp_310 + 0xC0<32>:byte] = 0xC<8>
	operator =(edi_112, Mem373[esp_310:(ptr32 basic_string)])
	Mem377[esp_310 + 0xC0<32>:byte] = 0xB<8>
	~basic_string(esp_310 + 0x28<32>)
	Mem379[esp_310 + 0xC0<32>:byte] = 0xA<8>
	~basic_string(esp_310 + 0x60<32>)
	Mem381[esp_310 + 0xC0<32>:byte] = 0<8>
	~basic_string(esp_310 + 0x44<32>)
l004050E0:
	word32 esp_383 = esp_124 - 4<i32>
	Mem384[esp_383:word32] = esi_104
	Mem386[esp_383 - 4<i32>:word32] = esp_124 + 0x78<32>
	word32 esi_392
	word32 edx_571
	word32 eax_389 = fn00402D20(edx, ebx_387, ebp_118, esi_104, edi_112, es, ds, Mem386[esp_383 - 4<i32>:word32], Mem386[esp_383:word32], out edx_571, out esi_392)
	word32 edx_399 = Mem386[esp_383 + 0x18<32>:word32]
	Mem401[esp_383 - 8<i32>:word32] = edx_399
	Mem403[esp_383 - 12<i32>:word32] = eax_389
	Mem406[esp_383 - 16<i32>:word32] = esp_383 + 0x98<32>
	Mem407[esp_383 + 0xC0<32>:word32] = 1<32>
	word32 esp_409
	word32 eax_410
	call MSVCP80.dll!??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z (retsize: 4;)
		uses: eax:esp_383 + 0x98<32>,edx:edx_399,Stack +0008:dwArg04,Stack +000C:dwArg08
		defs: eax:eax_410,esp:esp_409
	Mem418[esp_409 + 0x10<32>:word32] = eax_410
	Mem420[esp_409 + 0xD0<32>:byte] = 2<8>
	operator =(edi_112, Mem420[esp_409 + 0x10<32>:(ptr32 basic_string)])
	Mem424[esp_409 + 0xD0<32>:byte] = 1<8>
	~basic_string(esp_409 + 0xA8<32>)
	Mem426[esp_409 + 0xD0<32>:byte] = 0<8>
	~basic_string(esp_409 + 0x8C<32>)
	Mem428[esp_409 + 0x10<32>:word32] = edi_112
	byte al_438 = SLICE(CONVERT(fn00404A20(ebx_387, ebp_118, esi_392, edi_112, es, ds, Mem428[esp_409 + 0x10<32>:word32], out edx, out ebp_118, out edi_112), uint8, uint32), byte, 0)
	bl_128 = al_438
	esp_124 = esp_409 + 0x14<32>
	esi_104 = esi_392 + 0x1C<32>
	branch al_438 == 0<8> l004050DA
l00405153:
l00405335:
	Mem452[fs:0x00000000<p32>:word32] = eax_9
	word32 ecx_572
	word32 eax_481 = fn00694B8E(edi_112, eax_14 ^ fp - 172<i32>, edx, ebx, ebp, esi, edi, es, ds, ebx, out ecx_572)
	edxOut = edx
	return eax_481
fn00404FF0_exit:


word32 fn00405370(word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00657290
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ebx
// Trashed: SCZDOP eax ebx ecx edx Top
// Preserved: edi esi esp
fn00405370_entry:
l00405370:
	word24 nLoc0B_280 = Mem7[fs:1<32>:word24]
	word32 eax_14 = Mem11[0x00A14188<p32>:word32] ^ fp - 0x64<32>
	Mem32[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(fp - 0x2C<32>, dwArg08)
	word24 eax_24_8_56 = SLICE(fp - 0x5C<32>, word24, 8)
	word32 eax_57 = SEQ(eax_24_8_56, CONVERT(end(fp - 0x2C<32>), _String_iterator, uint8))
	fn00402230(Mem69[SEQ(eax_24_8_56, CONVERT(begin(fp - 0x30<32>), _String_iterator, uint8)) + 4<32>:word32], Mem62[eax_57 + 4<32>:word32], fp - 0x6A<32>, fp - 0x69<32>)
	basic_string(dwArg04, fp - 0x34<32>)
	word32 edx_108
	operator =(dwArg04, fn00404FF0(fp - 0x34<32>, 1<32>, ebp, dwArg04, eax_57, es, ds, fp - 0x58<32>, fp - 0x34<32>, out edx_108))
	~basic_string(fp - 0x58<32>)
	word32 dwLoc68_254 = 1<32>
	word32 dwLoc0C_281 = SEQ(nLoc0B_280, 1<8>)
	branch strchr(c_str(dwArg04), 0x3A<32>) != 0<32> l004054D6
l00405472:
	word32 esp_136 = fp - 0x80<32>
	branch Mem141[operator [](dwArg04, tLoc80):byte] == 0x2F<8> l004054A6
l0040548C:
	esp_136 = fp - 0x84<32>
	dwLoc68_254 = fp - 0x84<32>
	branch Mem150[operator [](dwArg04, tLoc84):byte] != 0x5C<8> l004054D6
l004054A6:
	word32 esp_155 = esp_136 - 4<i32>
	Mem157[esp_155:word32] = dwArg04
	Mem160[esp_155 - 4<i32>:word32] = 0xA53EF4<32>
	Mem162[esp_155 - 8<i32>:word32] = esp_155 + 0x28<32>
	word32 esp_173
	word32 eax_174
	call MSVCP80.dll!??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z (retsize: 4;)
		uses: ecx:esp_155 + 0x28<32>,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +FFFFFF80:tLoc84,Stack +FFFFFF84:tLoc80
		defs: eax:eax_174,edx:edx_176,esp:esp_173
	Mem182[esp_173 + 8<32>:word32] = eax_174
	Mem184[esp_173 + 0x7C<32>:byte] = 3<8>
	operator =(dwArg04, Mem184[esp_173 + 8<32>:(ptr32 basic_string)])
	Mem188[esp_173 + 0x7C<32>:byte] = 1<8>
	~basic_string(esp_173 + 0x30<32>)
l004054D6:
	~basic_string(fp - 0x2C<32>)
	Mem196[fs:0x00000000<p32>:word32] = dwLoc0C_281
	word32 ecx_293
	fn00694B8E(dwArg04, eax_14 ^ fp - 100<i32>, edx_108, dwLoc68_254, ebp, esi, edi, es, ds, dwLoc68_254, out ecx_293)
	return dwLoc68_254
fn00405370_exit:


byte fn004055D0(word32 dwArg04, word32 dwArg08, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040BA10
//      fn0040C7F0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax ecx
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn004055D0_entry:
l004055D0:
	word32 eax_12
	word32 ecx_13
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:dwArg08,ecx:dwArg04,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +0010:dwArg04,Stack +0014:dwArg08
		defs: eax:eax_12,ecx:ecx_13
	ecxOut = ecx_13
	return SLICE(eax_12, byte, 0)
fn004055D0_exit:


word32 fn00405610(word32 ecx, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00405CE0
// MayUse:  ecx:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax edx Top
// Preserved: ebp esp
fn00405610_entry:
l00405610:
l00405617:
	word32 eax_14 = Mem11[ecx + 4<32>:word32]
	branch eax_14 == 0<32> l00405628
l0040561E:
	__lock()
	edx = eax_14 + 1<32>
	branch __cmpxchg(Mem11[ecx + 4<32>:word32], eax_14 + 1<32>, eax_14, out eax_14) l00405617
l00405628:
	edxOut = edx
	return eax_14
fn00405610_exit:


word32 fn00405CE0(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00406D20
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00405CE0_entry:
l00405CE0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem32[fs:0<32>:word32] = fp - 0xC<32>
	WaitForSingleObject(Mem37[ecx + 0x20<32>:word32], 0xFFFFFFFF<32>)
	Mem47[ecx + 0x24<32>:byte] = 1<8>
	word32 ebx_58 = fn006129E0(ecx + 8<32>, fp + 8<32>, dwArg08)
	word32 edx_117 = fp + 8<32>
	byte bl_73 = SLICE(ebx_58, byte, 0)
	word32 esp_114 = fp - 0x24<32>
	branch dwArg08 == Mem55[ecx + 0xC<32>:word32] l00405D8B
l00405D8B:
	word32 ecx_68 = Mem55[ecx + 0x20<32>:word32]
	Mem72[dwArg04:word32] = ebx_58
	Mem74[ecx + 0x24<32>:byte] = bl_73
	ReleaseMutex(ecx_68)
l00405D43:
	word32 ebp_78 = Mem55[dwArg08 + 0x28<32>:word32]
	word32 esi_90 = 0<32> - (fn00405610(ebp_78, out edx_117) == 0<32>) & ebp_78
	Mem94[dwArg04:word32] = esi_90
	branch esi_90 == 0<32> l00405D7B
l00405D5E:
	fn00401AD0(esi_90)
	branch fn00401AE0(esi_90) != 1<32> l00405D7B
l00405D71:
	word32 eax_109 = Mem94[esi_90:word32]
	call Mem94[eax_109:word32] (retsize: 4;)
		uses: eax:eax_109,ecx:esi_90,Stack +0004:1<32>,Stack +0030:dwArg04,Stack +0034:dwArg08
		defs: edx:edx_117,esp:esp_114
l00405D7B:
	word32 esp_124 = esp_114 - 4<i32>
	Mem125[esp_124:word32] = Mem121[ecx + 0x20<32>:word32]
	Mem127[ecx + 0x24<32>:byte] = bl_73
	ReleaseMutex(Mem127[esp_124:HANDLE])
l00405D9F:
	Mem137[fs:0x00000000<p32>:word32] = eax_9
	return edx_117
fn00405CE0_exit:


void fn004064E0(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004064E0
//      fn00428A30
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebx edi esi esp
fn004064E0_entry:
l004064E0:
	word32 esp_10 = fp - 12<i32>
	word32 edi_13 = dwArg04
	word32 esi_17 = dwArg04
	branch Mem12[dwArg04 + 0x2D<32>:byte] != 0<8> l00406518
l004064F1:
	word32 esp_23 = esp_10 - 4<i32>
	Mem24[esp_23:word32] = Mem20[esi_17 + 8<32>:word32]
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	fn004064E0(stackArg4)
	esi_17 = Mem24[esi_17:word32]
	~basic_string(edi_13 + 0x10<32>)
	Mem37[esp_23 - 4<i32>:word32] = edi_13
	operator delete(Mem37[esp_23 - 4<i32>:(ptr32 void)])
	esp_10 = esp_23
	edi_13 = esi_17
	branch Mem37[esi_17 + 0x2D<32>:byte] == 0<8> l004064F1
l00406518:
	return
fn004064E0_exit:


word32 fn00406B00(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00406C90
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: ebx edi esi esp
fn00406B00_entry:
l00406B00:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem29[fs:0<32>:word32] = fp - 0xC<32>
	Mem35[ecx + 4<32>:word32] = 0<32>
	Mem39[ecx:word32] = 0x8A6DE4<32>
	word32 eax_40 = fn00811B80()
	Mem46[ecx + 0xC<32>:word32] = eax_40
	Mem47[eax_40 + 0x2D<32>:byte] = 1<8>
	word32 eax_48 = Mem47[ecx + 0xC<32>:word32]
	Mem49[eax_48 + 4<32>:word32] = eax_48
	word32 eax_50 = Mem49[ecx + 0xC<32>:word32]
	Mem51[eax_50:word32] = eax_50
	word32 eax_52 = Mem51[ecx + 0xC<32>:word32]
	Mem53[eax_52 + 8<32>:word32] = eax_52
	Mem54[ecx + 0x10<32>:word32] = 0<32>
	word32 eax_58 = fn00811B80()
	Mem64[ecx + 0x18<32>:word32] = eax_58
	Mem65[eax_58 + 0x2D<32>:byte] = 1<8>
	word32 eax_66 = Mem65[ecx + 0x18<32>:word32]
	Mem67[eax_66 + 4<32>:word32] = eax_66
	word32 eax_68 = Mem67[ecx + 0x18<32>:word32]
	Mem69[eax_68:word32] = eax_68
	word32 eax_70 = Mem69[ecx + 0x18<32>:word32]
	Mem75[eax_70 + 8<32>:word32] = eax_70
	Mem78[ecx + 0x1C<32>:word32] = 0<32>
	Mem82[ecx + 0x20<32>:word32] = CreateMutexA(0<32>, 0<32>, 0<32>)
	Mem84[ecx + 0x24<32>:byte] = 0<8>
	fn00401AD0(ecx)
	Mem91[fs:0x00000000<p32>:word32] = eax_9
	return ecx
fn00406B00_exit:


word32 fn00406C90()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00406D20
// MayUse:  fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn00406C90_entry:
l00406C90:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem23[fs:0<32>:word32] = fp - 0xC<32>
	word32 esi_27 = Mem23[Mem23[Mem23[fs:0x0000002C<p32>:word32] + Mem23[0x00A6B0F4<p32>:word32] * 4<32>:word32] + 0xC<32>:word32]
	branch Mem23[esi_27 + 0xA53F18<32>:word32] != 0<32> l00406D0A
l00406CD2:
	word32 eax_33 = operator new(0x28<32>)
	branch eax_33 == 0<32> l00406D06
l00406D06:
	Mem43[esi_27 + 0xA53F18<32>:word32] = 0<32>
l00406D0A:
	word32 eax_46 = Mem45[esi_27 + 0xA53F18<32>:word32]
	Mem50[fs:0x00000000<p32>:word32] = eax_9
	return eax_46
l00406CEC:
	word32 eax_58 = fn00406B00(eax_33)
	Mem64[esi_27 + 0xA53F18<32>:word32] = eax_58
	Mem66[fs:0x00000000<p32>:word32] = eax_9
	return eax_58
fn00406C90_exit:


word32 fn00406D20(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402A20
// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn00406D20_entry:
l00406D20:
	return fn00405CE0(fn00406C90(), dwArg04, dwArg08)
fn00406D20_exit:


void fn00406E20(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004023A0
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: eax ecx edx Top
// Preserved: esi esp
fn00406E20_entry:
l00406E20:
	WaitForSingleObject(Mem6[ecx + 0x14<32>:word32], 0xFFFFFFFF<32>)
	Mem17[0x00A53F1C<p32>:word32] = dwArg04
	word32 edx_18 = Mem17[ecx + 0x14<32>:word32]
	Mem21[ecx + 0x18<32>:byte] = 0<8>
	ReleaseMutex(edx_18)
	return
fn00406E20_exit:


void fn00406E50(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00407A90
//      fn00407BC0
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn00406E50_entry:
l00406E50:
	word32 edx_6 = Mem0[ecx + 0xC<32>:word32]
	branch dwArg04 != edx_6 l00406E71
l00406E5B:
	branch dwArg04 != Mem0[ecx + 0x10<32>:word32] l00406E71
l00406E71:
	branch dwArg04 != edx_6 l00406E8B
l00406E8B:
	word32 edx_22 = Mem19[ecx + 0x10<32>:word32]
	branch dwArg04 != edx_22 l00406EA7
l00406EA7:
	Mem27[Mem19[dwArg04 + 0x24<32>:word32] + 0x20<32>:word32] = Mem19[dwArg04 + 0x20<32>:word32]
	Mem30[Mem27[dwArg04 + 0x20<32>:word32] + 0x24<32>:word32] = Mem27[dwArg04 + 0x24<32>:word32]
	Mem36[dwArg04 + 0x20<32>:word32] = 0<32>
	Mem37[dwArg04 + 0x24<32>:word32] = 0<32>
	return
l00406E92:
	word32 esi_38 = Mem19[edx_22 + 0x20<32>:word32]
	Mem39[ecx + 0x10<32>:word32] = esi_38
	Mem43[esi_38 + 0x24<32>:word32] = 0<32>
	Mem46[dwArg04 + 0x20<32>:word32] = 0<32>
	Mem47[dwArg04 + 0x24<32>:word32] = 0<32>
	return
l00406E76:
	word32 esi_48 = Mem19[edx_6 + 0x24<32>:word32]
	Mem49[ecx + 0xC<32>:word32] = esi_48
	Mem53[esi_48 + 0x20<32>:word32] = 0<32>
	Mem56[dwArg04 + 0x20<32>:word32] = 0<32>
	Mem57[dwArg04 + 0x24<32>:word32] = 0<32>
	return
l00406E60:
	Mem61[ecx + 0xC<32>:word32] = 0<32>
	Mem62[ecx + 0x10<32>:word32] = 0<32>
	Mem63[dwArg04 + 0x20<32>:word32] = 0<32>
	Mem64[dwArg04 + 0x24<32>:word32] = 0<32>
	return
fn00406E50_exit:


word32 fn00406ED0(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004070F0
//      fn00426100
// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn00406ED0_entry:
l00406ED0:
	word32 eax_11 = dwArg04
	word32 ecx_10 = Mem0[dwArg04:word32]
	branch Mem0[ecx_10 + 0x2D<32>:byte] != 0<8> l00406EEA
l00406EDC:
l00406EE0:
	eax_11 = ecx_10
	ecx_10 = Mem0[ecx_10:word32]
	branch Mem0[ecx_10 + 0x2D<32>:byte] == 0<8> l00406EE0
l00406EEA:
	return eax_11
fn00406ED0_exit:


word32 fn00407070(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00407A90
//      fn00407BC0
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn00407070_entry:
l00407070:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem26[fs:0<32>:word32] = fp - 0xC<32>
	word32 esi_29 = Mem28[ecx + 0x1C<32>:word32]
	branch esi_29 == 0<32> l004070C2
l004070A8:
	branch fn00401AE0(esi_29) != 1<32> l004070C2
l004070B4:
	branch esi_29 == 0<32> l004070C2
l004070B8:
	word32 eax_45 = Mem32[esi_29:word32]
	call Mem32[eax_45:word32] (retsize: 4;)
		uses: eax:eax_45,ecx:esi_29,edx:edx_53,Stack +0004:1<32>
		defs: edx:edx_53
l004070C2:
	Mem58[ecx + 0x1C<32>:word32] = 0<32>
	~basic_string(ecx)
	Mem63[fs:0x00000000<p32>:word32] = eax_9
	return edx
fn00407070_exit:


word32 fn004070F0(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00407670
//      fn00407A90
//      fn00407BC0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004070F0_entry:
l004070F0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	word32 eax_33 = dwArg08
	branch Mem30[dwArg08 + 0x2D<32>:byte] == 0<8> l0040715F
l00407123:
	basic_string(fp - 0x50<32>, 0x8A6D94<32>)
	fn004019E0(fp - 0x34<32>, fp - 0x50<32>)
	call CxxThrowException (retsize: 4;)
		uses: ecx:fp - 0x34<32>,Stack +0004:fp - 0x34<32>,Stack +0008:0x99A88C<32>,Stack +0040:0x99003C<32>,Stack +007C:dwArg08
		defs: eax:eax_60
l0040715F:
	word32 esi_104
	word32 edi_129
	word32 edx_305 = fn005B0EC0(fp + 8<32>)
	word32 eax_76 = Mem69[eax_33:word32]
	branch Mem69[eax_76 + 0x2D<32>:byte] == 0<8> l0040717B
l0040717B:
	edx_305 = Mem69[eax_33 + 8<32>:word32]
	branch Mem69[edx_305 + 0x2D<32>:byte] == 0<8> l00407188
l00407188:
	edi_129 = Mem69[dwArg08 + 8<32>:word32]
	branch dwArg08 != eax_33 l004071FE
l004071FE:
	Mem86[eax_76 + 4<32>:word32] = dwArg08
	word32 edx_87 = Mem86[eax_33:word32]
	Mem88[dwArg08:word32] = edx_87
	word24 edx_24_8_497 = SLICE(edx_87, word24, 8)
	branch dwArg08 != Mem88[eax_33 + 8<32>:word32] l0040720E
l0040720E:
	esi_104 = Mem88[dwArg08 + 4<32>:word32]
	branch Mem88[edi_129 + 0x2D<32>:byte] != 0<8> l0040721A
l00407217:
	Mem94[edi_129 + 4<32>:word32] = esi_104
l0040721A:
	Mem97[esi_104:word32] = edi_129
	Mem101[dwArg08 + 8<32>:word32] = Mem97[eax_33 + 8<32>:word32]
	word32 edx_102 = Mem101[eax_33 + 8<32>:word32]
	Mem103[edx_102 + 4<32>:word32] = dwArg08
	edx_24_8_497 = SLICE(edx_102, word24, 8) (alias)
l0040720A:
	esi_104 = dwArg08
l00407228:
	word32 eax_109 = Mem108[ecx + 4<32>:word32]
	branch Mem108[eax_109 + 4<32>:word32] != eax_33 l00407235
l00407235:
	word32 eax_113 = Mem108[eax_33 + 4<32>:word32]
	branch Mem108[eax_113:word32] != eax_33 l00407240
l00407240:
	Mem117[eax_113 + 8<32>:word32] = dwArg08
l0040723C:
	Mem118[eax_113:word32] = dwArg08
l00407230:
	Mem119[eax_109 + 4<32>:word32] = dwArg08
l00407243:
	Mem124[dwArg08 + 4<32>:word32] = Mem121[eax_33 + 4<32>:word32]
	byte dl_125 = Mem124[eax_33 + 0x2C<32>:byte]
	byte al_126 = Mem124[dwArg08 + 0x2C<32>:byte]
	Mem127[dwArg08 + 0x2C<32>:byte] = dl_125
	Mem128[eax_33 + 0x2C<32>:byte] = al_126
	edx_305 = SEQ(edx_24_8_497, dl_125) (alias)
l00407184:
	edi_129 = eax_76
l00407176:
	edi_129 = Mem69[eax_33 + 8<32>:word32]
l00407193:
	esi_104 = Mem69[eax_33 + 4<32>:word32]
	branch Mem69[edi_129 + 0x2D<32>:byte] != 0<8> l0040719F
l0040719C:
	Mem137[edi_129 + 4<32>:word32] = esi_104
l0040719F:
	word32 eax_141 = Mem140[ecx + 4<32>:word32]
	branch Mem140[eax_141 + 4<32>:word32] != eax_33 l004071AC
l004071AC:
	branch Mem140[esi_104:word32] != eax_33 l004071B4
l004071B4:
	Mem149[esi_104 + 8<32>:word32] = edi_129
l004071B0:
	Mem150[esi_104:word32] = edi_129
l004071A7:
	Mem151[eax_141 + 4<32>:word32] = edi_129
l004071B7:
	word32 ebx_154 = Mem153[ecx + 4<32>:word32]
	branch Mem153[ebx_154:word32] != eax_33 l004071D7
l004071C2:
	word32 eax_166
	branch Mem153[edi_129 + 0x2D<32>:byte] == 0<8> l004071CC
l004071CC:
	eax_166 = fn00406ED0(edi_129)
l004071C8:
	eax_166 = esi_104
l004071D5:
	Mem178[ebx_154:word32] = eax_166
l004071D7:
	word32 ebx_182 = Mem181[ecx + 4<32>:word32]
	branch Mem181[ebx_182 + 8<32>:word32] != eax_33 l00407255
l004071E3:
	branch Mem181[edi_129 + 0x2D<32>:byte] == 0<8> l004071F0
l004071F0:
	Mem202[ebx_182 + 8<32>:word32] = fn004E6960(edi_129)
l004071E9:
	Mem206[ebx_182 + 8<32>:word32] = esi_104
l00407255:
	branch Mem211[eax_33 + 0x2C<32>:byte] != 1<8> l00407356
l00407264:
	branch edi_129 == Mem211[Mem211[ecx + 4<32>:word32] + 4<32>:word32] l00407353
l00407270:
	branch Mem225[edi_129 + 0x2C<32>:byte] != 1<8> l00407353
l00407279:
	word32 eax_230 = Mem225[esi_740:word32]
	branch edi_129 != eax_230 l004072E2
l004072E2:
	branch Mem225[eax_230 + 0x2C<32>:byte] != 0<8> l004072F9
l004072E8:
	Mem235[eax_230 + 0x2C<32>:byte] = 1<8>
	Mem241[esi_740 + 0x2C<32>:byte] = 0<8>
	fn00420740(ecx, esi_740)
	eax_230 = Mem241[esi_740:word32]
l004072F9:
	branch Mem252[eax_230 + 0x2D<32>:byte] != 0<8> l00407312
l004072FF:
	word32 edx_255 = Mem252[eax_230 + 8<32>:word32]
	branch Mem252[edx_255 + 0x2C<32>:byte] != 1<8> l00407325
l00407307:
	branch Mem252[Mem252[eax_230:word32] + 0x2C<32>:byte] != 1<8> l00407325
l00407325:
	branch Mem252[Mem252[eax_230:word32] + 0x2C<32>:byte] != 1<8> l0040733D
l0040732C:
	Mem269[edx_255 + 0x2C<32>:byte] = 1<8>
	Mem277[eax_230 + 0x2C<32>:byte] = 0<8>
	fn004E2250(ecx, eax_230)
	eax_230 = Mem277[esi_740:word32]
l0040733D:
	Mem293[eax_230 + 0x2C<32>:byte] = Mem290[esi_740 + 0x2C<32>:byte]
	Mem295[esi_740 + 0x2C<32>:byte] = 1<8>
	Mem302[Mem295[eax_230:word32] + 0x2C<32>:byte] = 1<8>
	edx_305 = fn00420740(ecx, esi_740)
l0040727F:
	eax_230 = Mem225[esi_740 + 8<32>:word32]
	branch Mem225[eax_230 + 0x2C<32>:byte] != 0<8> l0040729A
l00407288:
	Mem314[eax_230 + 0x2C<32>:byte] = 1<8>
	Mem318[esi_740 + 0x2C<32>:byte] = 0<8>
	fn004E2250(ecx, esi_740)
	eax_230 = Mem318[esi_740 + 8<32>:word32]
l0040729A:
	branch Mem329[eax_230 + 0x2D<32>:byte] != 0<8> l00407312
l004072A0:
	word32 edx_332 = Mem329[eax_230:word32]
	branch Mem329[edx_332 + 0x2C<32>:byte] != 1<8> l004072AF
l004072A7:
	branch Mem329[Mem329[eax_230 + 8<32>:word32] + 0x2C<32>:byte] == 1<8> l0040730E
l0040730E:
	Mem340[eax_230 + 0x2C<32>:byte] = 0<8>
l00407312:
	edx_305 = Mem344[ecx + 4<32>:word32]
	edi_129 = esi_740
	esi_104 = Mem344[esi_740 + 4<32>:word32]
	esi_740 = esi_104
	branch esi_740 != Mem344[edx_305 + 4<32>:word32] l00407270
l00407323:
l004072AF:
	branch Mem329[Mem329[eax_230 + 8<32>:word32] + 0x2C<32>:byte] != 1<8> l004072C9
l004072B7:
	Mem360[edx_332 + 0x2C<32>:byte] = 1<8>
	Mem367[eax_230 + 0x2C<32>:byte] = 0<8>
	fn00420740(ecx, eax_230)
	eax_230 = Mem367[esi_740 + 8<32>:word32]
l004072C9:
	Mem382[eax_230 + 0x2C<32>:byte] = Mem379[esi_740 + 0x2C<32>:byte]
	Mem384[esi_740 + 0x2C<32>:byte] = 1<8>
	Mem391[Mem384[eax_230 + 8<32>:word32] + 0x2C<32>:byte] = 1<8>
	edx_305 = fn004E2250(ecx, esi_740)
l00407353:
	Mem410[edi_129 + 0x2C<32>:byte] = 1<8>
l00407356:
	~basic_string(eax_33 + 0xC<32>)
	operator delete(eax_33)
	word32 eax_423 = Mem420[ecx + 8<32>:word32]
	branch eax_423 <=u 0<32> l0040737D
l00407377:
	Mem431[ecx + 8<32>:word32] = eax_423 + 0xFFFFFFFF<32>
l0040737D:
	Mem436[dwArg04:word32] = dwArg08
	Mem460[fs:0x00000000<p32>:word32] = eax_9
	return edx_305
fn004070F0_exit:


void fn00407670(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00407BC0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn00407670_entry:
l00407670:
	word32 esi_108 = dwArg08
	word32 eax_17 = Mem14[ecx + 4<32>:word32]
	branch dwArg08 != Mem14[eax_17:word32] l004076BA
l00407684:
	branch dwArg0C != eax_17 l004076BA
l004076BA:
	branch dwArg08 == dwArg0C l00407718
l004076BE:
l004076C0:
	branch Mem29[esi_108 + 0x2D<32>:byte] != 0<8> l00407707
l004076C8:
	word32 eax_33 = Mem29[esi_108 + 8<32>:word32]
	branch Mem29[eax_33 + 0x2D<32>:byte] != 0<8> l004076EC
l004076EC:
	word32 eax_36 = Mem29[esi_108 + 4<32>:word32]
	esi_39 = esi_108
	branch Mem29[eax_36 + 0x2D<32>:byte] != 0<8> l00407705
l004076F5:
	word32 esi_39
	branch esi_39 != Mem29[eax_36 + 8<32>:word32] l00407705
l004076FA:
	esi_39 = eax_36
	eax_36 = Mem29[eax_36 + 4<32>:word32]
	branch Mem29[eax_36 + 0x2D<32>:byte] == 0<8> l004076F5
l00407705:
	esi_108 = eax_36
l004076D1:
	esi_108 = eax_33
	word32 eax_51 = Mem29[eax_33:word32]
	branch Mem29[eax_51 + 0x2D<32>:byte] != 0<8> l00407707
l004076DB:
l004076E0:
	esi_108 = eax_51
	eax_51 = Mem29[eax_51:word32]
	branch Mem29[eax_51 + 0x2D<32>:byte] == 0<8> l004076E0
l004076EA:
l00407707:
	fn004070F0(ecx, fp + 8<32>, esi_108)
	branch esi_108 != dwArg0C l004076C0
l00407718:
	Mem109[dwArg04:word32] = esi_108
	return
l00407688:
	fn00629600(Mem14[eax_17 + 4<32>:word32])
	word32 eax_124 = Mem116[ecx + 4<32>:word32]
	Mem125[eax_124 + 4<32>:word32] = eax_124
	word32 eax_126 = Mem125[ecx + 4<32>:word32]
	Mem127[ecx + 8<32>:word32] = 0<32>
	Mem128[eax_126:word32] = eax_126
	word32 eax_129 = Mem128[ecx + 4<32>:word32]
	Mem130[eax_129 + 8<32>:word32] = eax_129
	Mem138[dwArg04:word32] = Mem130[Mem130[ecx + 4<32>:word32]:word32]
	return
fn00407670_exit:


word32 fn00407A90(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004023A0
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00407A90_entry:
l00407A90:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	WaitForSingleObject(Mem30[ecx + 0x14<32>:word32], 0xFFFFFFFF<32>)
	Mem42[ecx + 0x18<32>:byte] = 1<8>
	word32 ebx_164 = ecx + 0x14<32>
	branch Mem42[ecx + 0xC<32>:word32] == 0<32> l00407B5E
l00407ADF:
l00407AE0:
	word32 esi_49 = Mem48[ecx + 0x10<32>:word32]
	branch esi_49 == 0<32> l00407B57
l00407AE7:
	word32 eax_117
	word32 ecx_53 = Mem48[esi_49 + 0x1C<32>:word32]
	word32 edx_54 = Mem48[ecx_53:word32]
	word32 esp_61
	word32 eax_62
	call Mem48[edx_54 + 0x30<32>:word32] (retsize: 4;)
		uses: ecx:ecx_53,edx:edx_54
		defs: eax:eax_62,esp:esp_61
	Mem68[0x00A53F20<p32>:word32] = Mem48[0x00A53F20<p32>:word32] - eax_62
	Mem71[esp_61 - 4<i32>:word32] = esi_49
	fn00406E50(ecx, Mem71[esp_61 - 4<i32>:word32])
	Mem82[esp_61 - 4<i32>:word32] = esi_49
	word32 eax_84 = fn005B0F90(ecx, Mem82[esp_61 - 4<i32>:word32], out ebx_164)
	Mem93[esp_61 + 0x14<32>:word32] = eax_84
	word32 esp_107 = esp_61
	branch eax_84 == Mem82[ecx + 4<32>:word32] l00407B28
l00407B10:
	Mem98[esp_61 - 4<i32>:word32] = eax_84 + 0xC<32>
	Mem100[esp_61 - 8<i32>:word32] = esi_49
	word32 esp_101
	word32 eax_102
	word32 edx_104
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:eax_84 + 0xC<32>,ecx:ecx,edx:edx_104
		defs: eax:eax_102,edx:edx_104,esp:esp_101
	esp_107 = esp_101 + 8<32>
	branch SLICE(eax_102, byte, 0) != 0<8> l00407B28
l00407B28:
	Mem116[esp_107 + 0x18<32>:word32] = Mem113[ecx + 4<32>:word32]
	eax_117 = esp_107 + 0x18<32>
l00407B22:
	eax_117 = esp_101 + 0x1C<32>
l00407B33:
	word32 ebp_121 = Mem120[eax_117:word32]
	edx = fn00407070(esi_49)
	word32 esp_135 = esp_107 - 4<i32>
	Mem136[esp_135:word32] = esi_49
	operator delete(Mem136[esp_135:(ptr32 void)])
	branch ebp_121 == Mem136[ecx + 4<32>:word32] l00407B57
l00407B4A:
	Mem142[esp_135:word32] = ebp_121
	Mem145[esp_135 - 4<i32>:word32] = esp_135 + 0x24<32>
	edx = fn004070F0(ecx, Mem145[esp_135 - 4<i32>:word32], Mem145[esp_135:word32])
l00407B57:
	branch Mem157[ecx + 0xC<32>:word32] != 0<32> l00407AE0
l00407B5E:
	Mem161[0x00A53F20<p32>:word32] = 0<32>
	Mem162[0x00A53F24<p32>:word32] = 0<32>
	Mem163[0x00A53F28<p32>:word32] = 0<32>
	word32 eax_168 = Mem163[ebx_164:word32]
	Mem173[ebx_164 + 4<32>:byte] = 0<8>
	ReleaseMutex(eax_168)
	Mem179[fs:0x00000000<p32>:word32] = eax_9
	return edx
fn00407A90_exit:


void fn00407BC0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00407EC0
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00407BC0_entry:
l00407BC0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	branch Mem33[ecx + 0xC<32>:word32] == 0<32> l00407C7A
l00407BFB:
l00407C01:
	word32 edi_40 = Mem39[ecx + 0x10<32>:word32]
	branch edi_40 == 0<32> l00407C74
l00407C08:
	word32 eax_108
	word32 ecx_44 = Mem39[edi_40 + 0x1C<32>:word32]
	word32 eax_45 = Mem39[ecx_44:word32]
	word32 esp_52
	word32 eax_53
	call Mem39[eax_45 + 0x30<32>:word32] (retsize: 4;)
		uses: eax:eax_45,ecx:ecx_44
		defs: eax:eax_53,esp:esp_52
	Mem59[0x00A53F20<p32>:word32] = Mem39[0x00A53F20<p32>:word32] - eax_53
	Mem62[esp_52 - 4<i32>:word32] = edi_40
	fn00406E50(ecx, Mem62[esp_52 - 4<i32>:word32])
	Mem73[esp_52 - 4<i32>:word32] = edi_40
	word32 ebx_260
	word32 eax_75 = fn005B0F90(ecx, Mem73[esp_52 - 4<i32>:word32], out ebx_260)
	Mem84[esp_52 + 0x14<32>:word32] = eax_75
	word32 esp_106 = esp_52
	branch eax_75 == Mem73[ecx + 4<32>:word32] l00407C45
l00407C31:
	Mem89[esp_52 - 4<i32>:word32] = eax_75 + 0xC<32>
	Mem91[esp_52 - 8<i32>:word32] = edi_40
	word32 esp_92
	word32 eax_93
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:eax_75 + 0xC<32>,ecx:ecx
		defs: eax:eax_93,esp:esp_92
	esp_106 = esp_92 + 8<32>
	branch SLICE(eax_93, byte, 0) != 0<8> l00407C45
l00407C45:
	Mem107[esp_106 + 0x18<32>:word32] = Mem104[ecx + 4<32>:word32]
	eax_108 = esp_106 + 0x18<32>
l00407C3F:
	eax_108 = esp_92 + 0x1C<32>
l00407C50:
	word32 ebx_112 = Mem111[eax_108:word32]
	fn00407070(edi_40)
	word32 esp_126 = esp_106 - 4<i32>
	Mem127[esp_126:word32] = edi_40
	operator delete(Mem127[esp_126:(ptr32 void)])
	branch ebx_112 == Mem127[ecx + 4<32>:word32] l00407C74
l00407C67:
	Mem133[esp_126:word32] = ebx_112
	Mem136[esp_126 - 4<i32>:word32] = esp_126 + 0x24<32>
	fn004070F0(ecx, Mem136[esp_126 - 4<i32>:word32], Mem136[esp_126:word32])
l00407C74:
	branch Mem147[ecx + 0xC<32>:word32] != 0<32> l00407C01
l00407C7A:
	CloseHandle(Mem151[ecx + 0x14<32>:word32])
	word32 eax_159 = Mem156[ecx + 4<32>:word32]
	fn00407670(ecx, fp - 0x10<32>, Mem156[eax_159:word32], eax_159)
	operator delete(Mem169[ecx + 4<32>:word32])
	Mem184[ecx + 4<32>:word32] = 0<32>
	Mem185[ecx + 8<32>:word32] = 0<32>
	Mem187[fs:0x00000000<p32>:word32] = eax_9
	return
fn00407BC0_exit:


word32 fn00407CD0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00407E40
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn00407CD0_entry:
l00407CD0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem29[fs:0<32>:word32] = fp - 0xC<32>
	word32 eax_33 = fn00811B80()
	Mem39[ecx + 4<32>:word32] = eax_33
	Mem40[eax_33 + 0x2D<32>:byte] = 1<8>
	word32 eax_41 = Mem40[ecx + 4<32>:word32]
	Mem42[eax_41 + 4<32>:word32] = eax_41
	word32 eax_43 = Mem42[ecx + 4<32>:word32]
	Mem44[eax_43:word32] = eax_43
	word32 eax_45 = Mem44[ecx + 4<32>:word32]
	Mem47[eax_45 + 8<32>:word32] = eax_45
	Mem48[ecx + 8<32>:word32] = 0<32>
	Mem56[ecx + 0xC<32>:word32] = 0<32>
	Mem57[ecx + 0x10<32>:word32] = 0<32>
	Mem60[ecx + 0x14<32>:word32] = CreateMutexA(0<32>, 0<32>, 0<32>)
	Mem62[ecx + 0x18<32>:byte] = 0<8>
	branch Mem62[0x00A0D0C3<p32>:byte] == 0<8> l00407E1D
l00407D48:
	fn00422A90(fp - 0x14<32>)
	word32 esp_80 = fp - 0x24<32>
	branch dwLoc14 == 0<32> l00407D7E
l00407D71:
	word32 v14_84 = Mem76[dwLoc14 + 4<32>:word32] + 0xFFFFFFFF<32>
	Mem85[dwLoc14 + 4<32>:word32] = v14_84
	branch v14_84 != 0<32> l00407D7E
l00407D76:
	word32 edx_88 = Mem85[dwLoc14:word32]
	call Mem85[edx_88:word32] (retsize: 4;)
		uses: ecx:dwLoc14,edx:edx_88,Stack +0004:1<32>,Stack +0018:dwLoc14
		defs: esp:esp_92
l00407D7E:
	word32 esp_99 = esp_80 - 4<i32>
	Mem100[esp_99:word32] = 0x8A6E58<32>
	Mem102[esp_99 - 4<i32>:word32] = 2<32>
	Mem104[esp_99 - 8<i32>:word32] = 0xA53F20<32>
	Mem107[esp_99 - 12<i32>:word32] = 0x8A6E44<32>
	Mem109[esp_99 - 16<i32>:word32] = esp_99 + 0x14<32>
	fn00422A90(Mem109[esp_99 - 16<i32>:word32])
	word32 ecx_112 = Mem109[esp_99 + 0x14<32>:word32]
	word32 esp_113 = esp_99 + 4<32>
	branch ecx_112 == 0<32> l00407DB1
l00407DA4:
	word32 v16_118 = Mem109[ecx_112 + 4<32>:word32] + 0xFFFFFFFF<32>
	Mem119[ecx_112 + 4<32>:word32] = v16_118
	branch v16_118 != 0<32> l00407DB1
l00407DA9:
	word32 edx_122 = Mem119[ecx_112:word32]
	word32 eax_123 = Mem119[edx_122:word32]
	Mem125[esp_99:word32] = 1<32>
	call eax_123 (retsize: 4;)
		uses: ecx:ecx_112,edx:edx_122,Stack +FFFFFFF0:dwLoc14
		defs: esp:esp_129
l00407DB1:
	word32 esp_136 = esp_113 - 4<i32>
	Mem137[esp_136:word32] = 0x8A6E28<32>
	Mem139[esp_136 - 4<i32>:word32] = 2<32>
	Mem141[esp_136 - 8<i32>:word32] = 0xA53F24<32>
	Mem144[esp_136 - 12<i32>:word32] = 0x8A6E1C<32>
	Mem146[esp_136 - 16<i32>:word32] = esp_136 + 0x14<32>
	fn00422A90(Mem146[esp_136 - 16<i32>:word32])
	word32 ecx_149 = Mem146[esp_136 + 0x14<32>:word32]
	word32 esp_150 = esp_136 + 4<32>
	branch ecx_149 == 0<32> l00407DE4
l00407DD7:
	word32 v17_155 = Mem146[ecx_149 + 4<32>:word32] + 0xFFFFFFFF<32>
	Mem156[ecx_149 + 4<32>:word32] = v17_155
	branch v17_155 != 0<32> l00407DE4
l00407DDC:
	word32 edx_159 = Mem156[ecx_149:word32]
	word32 eax_160 = Mem156[edx_159:word32]
	Mem162[esp_136:word32] = 1<32>
	call eax_160 (retsize: 4;)
		uses: ecx:ecx_149,edx:edx_159,Stack +FFFFFFF0:dwLoc14
		defs: esp:esp_166
l00407DE4:
	word32 esp_173 = esp_150 - 4<i32>
	Mem174[esp_173:word32] = 0x8A6DFC<32>
	Mem176[esp_173 - 4<i32>:word32] = 2<32>
	Mem178[esp_173 - 8<i32>:word32] = 0xA53F28<32>
	Mem181[esp_173 - 12<i32>:word32] = 0x8A6DEC<32>
	Mem183[esp_173 - 16<i32>:word32] = esp_173 + 0x14<32>
	fn00422A90(Mem183[esp_173 - 16<i32>:word32])
	word32 ecx_186 = Mem183[esp_173 + 0x14<32>:word32]
	branch ecx_186 == 0<32> l00407E17
l00407E0A:
	word32 v18_192 = Mem183[ecx_186 + 4<32>:word32] + 0xFFFFFFFF<32>
	Mem193[ecx_186 + 4<32>:word32] = v18_192
	branch v18_192 != 0<32> l00407E17
l00407E0F:
	word32 edx_196 = Mem193[ecx_186:word32]
	word32 eax_197 = Mem193[edx_196:word32]
	Mem199[esp_173:word32] = 1<32>
	call eax_197 (retsize: 4;)
		uses: ecx:ecx_186,edx:edx_196,Stack +FFFFFFF0:dwLoc14
l00407E17:
	Mem210[0x00A0D0C3<p32>:byte] = 0<8>
l00407E1D:
	Mem220[fs:0x00000000<p32>:word32] = eax_9
	return ecx
fn00407CD0_exit:


word32 fn00407E40()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004023A0
// MayUse:  fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00407E40_entry:
l00407E40:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem20[fs:0<32>:word32] = fp - 0xC<32>
	word32 eax_21 = Mem20[0x00A53F2C<p32>:word32]
	branch eax_21 != 0<32> l00407EA7
l00407E6A:
	word32 eax_27 = operator new(0x1C<32>)
	branch eax_27 == 0<32> l00407EA0
l00407EA0:
	Mem37[0x00A53F2C<p32>:word32] = 0<32>
	eax_21 = 0<32>
l00407EA7:
	Mem42[fs:0x00000000<p32>:word32] = eax_9
	return eax_21
l00407E84:
	word32 eax_48 = fn00407CD0(eax_27)
	Mem55[0x00A53F2C<p32>:word32] = eax_48
	Mem57[fs:0x00000000<p32>:word32] = eax_9
	return eax_48
fn00407E40_exit:


void fn00407EC0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402310
// MayUse:  fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn00407EC0_entry:
l00407EC0:
	word32 ecx_5 = Mem0[0x00A53F2C<p32>:word32]
	branch ecx_5 == 0<32> l00407EDB
l00407ECD:
	fn00407BC0(ecx_5)
	operator delete(ecx_5)
l00407EDB:
	Mem25[0x00A53F2C<p32>:word32] = 0<32>
	return
fn00407EC0_exit:


word32 fn00407FC0(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004083D0
// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: ebp ebx edi esi esp
fn00407FC0_entry:
l00407FC0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem31[fs:0<32>:word32] = fp - 0x10<32>
	word32 esi_33 = dwArg0C
	word32 edi_34 = dwArg04
l00408000:
	branch edi_34 == dwArg08 l0040804C
l0040804C:
	Mem50[fs:0x00000000<p32>:word32] = eax_13
	return esi_33
fn00407FC0_exit:
l00408005:
	branch esi_33 == 0<32> l0040801C
l00408013:
	basic_string(esi_33, edi_34)
l0040801C:
	esi_33 = esi_33 + 0x1C<32>
	edi_34 = edi_34 + 0x1C<32>


word32 fn004083D0(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004085A0
// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004083D0_entry:
l004083D0:
	word32 eax_26 = fn00407FC0(dwArg04, dwArg08, dwArg0C)
	edxOut = dwArg04
	return eax_26
fn004083D0_exit:


void fn00408450(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004085A0
// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp ebx edi esi esp
fn00408450_entry:
l00408450:
	word32 edi_10 = dwArg0C
	branch dwArg08 == dwArg0C l004084A8
l00408460:
	word32 ebx_19 = Mem18[ecx + 8<32>:word32]
	word32 esi_24 = dwArg08
	branch dwArg0C == ebx_19 l00408487
l0040846B:
l00408470:
	operator =(esi_24, edi_10)
	edi_10 = edi_10 + 0x1C<32>
	esi_24 = esi_24 + 0x1C<32>
	branch edi_10 != ebx_19 l00408470
l00408483:
l00408487:
	word32 ebx_43 = Mem42[ecx + 8<32>:word32]
	word32 edi_46 = esi_24
	branch esi_24 == ebx_43 l004084A3
l00408490:
	~basic_string(edi_46)
	edi_46 = edi_46 + 0x1C<32>
	branch edi_46 != ebx_43 l00408490
l0040849F:
l004084A3:
	Mem62[ecx + 8<32>:word32] = esi_24
l004084A8:
	Mem76[dwArg04:word32] = dwArg08
	return
fn00408450_exit:


word32 fn004085A0(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00408720
//      fn0040CBA0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004085A0_entry:
l004085A0:
	branch ecx == dwArg04 l00408714
l004085B0:
	word32 eax_15 = Mem10[dwArg04 + 4<32>:word32]
	branch eax_15 == 0<32> l004085D1
l004085B7:
	word32 ecx_20 = Mem10[dwArg04 + 8<32>:word32] - eax_15
	word32 edx_24 = SLICE(ecx_20 *s64 0x92492493<32>, word32, 32) + ecx_20
	edx = edx_24 >> 4<32>
	word32 ecx_28 = (edx_24 >> 4<32> >>u 0x1F<32>) + (edx_24 >> 4<32>)
	branch ecx_28 != 0<32> l004085EC
l004085EC:
	word32 eax_50
	word32 edi_37 = Mem36[ecx + 4<32>:word32]
	branch edi_37 != 0<32> l004085F9
l004085F9:
	word32 ebx_42 = Mem36[ecx + 8<32>:word32] - edi_37
	word32 edx_46 = SLICE(ebx_42 *s64 0x92492493<32>, word32, 32) + ebx_42
	eax_50 = (edx_46 >> 4<32> >>u 0x1F<32>) + (edx_46 >> 4<32>)
l004085F5:
	eax_50 = 0<32>
l00408611:
	branch ecx_28 >u eax_50 l0040866C
l0040866C:
	word32 eax_74
	branch edi_37 != 0<32> l00408674
l00408674:
	word32 ebx_66 = Mem36[ecx + 0xC<32>:word32] - edi_37
	word32 edx_70 = SLICE(ebx_66 *s64 0x92492493<32>, word32, 32) + ebx_66
	eax_74 = (edx_70 >> 4<32> >>u 0x1F<32>) + (edx_70 >> 4<32>)
l00408670:
	eax_74 = 0<32>
l0040868C:
	branch ecx_28 >u eax_74 l004086CD
l004086CD:
	branch edi_37 == 0<32> l004086E9
l004086D1:
	fn004033F0(edi_37, Mem36[ecx + 8<32>:word32])
	operator delete(Mem95[ecx + 4<32>:word32])
l004086E9:
	branch SLICE(CONVERT(fn00401EC0(ecx, fn0040D930(dwArg04), out edx), uint8, uint32), byte, 0) == 0<8> l00408712
l004086FC:
	Mem158[ecx + 8<32>:word32] = fn004083D0(Mem121[dwArg04 + 4<32>:word32], Mem121[dwArg04 + 8<32>:word32], Mem121[ecx + 4<32>:word32], out edx)
l00408712:
l00408714:
	return edx
l00408690:
	word32 eax_175 = fn0040D930(ecx)
	word32 eax_185 = Mem36[dwArg04 + 4<32>:word32]
	word32 ebx_186 = eax_185 + (eax_175 * 8<32> - eax_175) * 4<32>
	word32 ecx_413
	fn00409170(eax_185, ebx_186, edi_37, out ecx_413)
	word32 edx_212
	Mem220[ecx + 8<32>:word32] = fn004083D0(ebx_186, Mem192[dwArg04 + 8<32>:word32], Mem192[ecx + 8<32>:word32], out edx_212)
	return edx_212
l00408615:
	word32 ecx_412
	fn004033F0(fn00409170(Mem232[dwArg04 + 4<32>:word32], Mem36[dwArg04 + 8<32>:word32], edi_37, out ecx_412), Mem235[ecx + 8<32>:word32])
	word32 eax_256 = Mem248[dwArg04 + 4<32>:word32]
	branch eax_256 == 0<32> l00408651
l00408639:
	word32 ecx_261 = Mem248[dwArg04 + 8<32>:word32] - eax_256
	word32 edx_265 = SLICE(ecx_261 *s64 0x92492493<32>, word32, 32) + ecx_261
	eax_256 = (edx_265 >> 4<32> >>u 0x1F<32>) + (edx_265 >> 4<32>)
l00408651:
	word32 edx_273 = eax_256 * 8<32> - eax_256
	Mem284[ecx + 8<32>:word32] = Mem248[ecx + 4<32>:word32] + edx_273 * 4<32>
	return edx_273
l004085D1:
	fn00408450(ecx, fp + 4<32>, Mem10[ecx + 4<32>:word32], Mem10[ecx + 8<32>:word32])
	return edx
fn004085A0_exit:


word32 fn00408720(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004023A0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00408720_entry:
l00408720:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	Mem35[ecx + 4<32>:word32] = 0<32>
	Mem42[ecx:word32] = 0x8A6F60<32>
	basic_string(ecx + 8<32>, dwArg04)
	basic_string(ecx + 0x24<32>, 0x8A6C20<32>)
	Mem52[ecx + 0x44<32>:word32] = 0<32>
	Mem53[ecx + 0x48<32>:word32] = 0<32>
	Mem54[ecx + 0x4C<32>:word32] = 0<32>
	Mem56[ecx + 0x50<32>:word32] = dwArg08
	word32 esp_50 = fp - 0x34<32>
	word32 eax_57 = Mem56[0x00A53F30<p32>:word32]
	branch eax_57 == 0<32> l004087C2
l004087A0:
	branch Mem59[Mem59[Mem59[fs:0x0000002C<p32>:word32] + Mem59[0x00A6B0F4<p32>:word32] * 4<32>:word32] + 0x10<32>:byte] != 0<8> l004087C2
l004087B8:
	word32 esp_70
	call eax_57 (retsize: 4;)
		uses: ecx:dwArg04,Stack +0004:dwArg04,Stack +0040:dwArg04,Stack +0044:dwArg08
		defs: esp:esp_70
	esp_50 = esp_70 + 4<32>
l004087C2:
	word32 ecx_80 = Mem79[ecx + 0x50<32>:word32]
	word32 edx_82 = Mem79[Mem79[ecx_80:word32] + 0xC<32>:word32]
	word32 esp_84 = esp_50 - 4<i32>
	Mem86[esp_84:word32] = ecx + 8<32>
	Mem89[esp_84 - 4<i32>:word32] = esp_84 + 0x1C<32>
	word32 eax_95
	call edx_82 (retsize: 4;)
		uses: eax:esp_84 + 0x1C<32>,ecx:ecx_80,edx:edx_82,Stack +0008:dwArg04,Stack +000C:dwArg08
		defs: eax:eax_95
	word32 edx_106 = fn004085A0(ecx + 0x40<32>, eax_95)
	fn00403900(fp - 0x1C<32>)
	word32 ebx_120 = Mem113[ecx + 0x44<32>:word32]
	word32 ebp_121 = 0<32>
l004087F2:
	branch ebx_120 == 0<32> l00408817
l004087F6:
	word32 ecx_131 = Mem113[ecx + 0x48<32>:word32] - ebx_120
	word32 edx_135 = SLICE(ecx_131 *s64 0x92492493<32>, word32, 32) + ecx_131
	edx_106 = edx_135 >> 4<32>
	branch ebp_121 >=u ((edx_135 >> 4<32>) >>u 0x1F<32>) + (edx_135 >> 4<32>) l00408817
l00408817:
	Mem152[fs:0x00000000<p32>:word32] = eax_9
	edxOut = edx_106
	return ecx
fn00408720_exit:
l00408812:
	ebp_121 = ebp_121 + 1<32>


word32 fn00408FB0(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004023A0
//      fn00403D10
// MayUse:  fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn00408FB0_entry:
l00408FB0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem20[fs:0<32>:word32] = fp - 0xC<32>
	word32 eax_23 = operator new(0x20<32>)
	branch eax_23 == 0<32> l00409007
l00409007:
	Mem32[fs:0x00000000<p32>:word32] = eax_9
	return 0<32>
l00408FEB:
	word32 eax_41 = fn00419D30(eax_23, dwArg04)
	Mem49[fs:0x00000000<p32>:word32] = eax_9
	return eax_41
fn00408FB0_exit:


word32 fn004090B0(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409AC0
// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: ecx
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn004090B0_entry:
l004090B0:
	Mem20[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(fp - 0x50<32>, 0x8A6998<32>)
	fn004019E0(fp - 0x34<32>, fp - 0x50<32>)
	word32 esp_44
	call CxxThrowException (retsize: 4;)
		uses: ecx:fp - 0x34<32>,Stack +0004:fp - 0x34<32>,Stack +0008:0x999C68<32>,Stack +002C:0x990030<32>
		defs: esp:esp_44
	int3()
	Mem50[esp_44 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem52[esp_44 - 8<i32>:word32] = 0x82C2A9<32>
	Mem55[esp_44 - 12<i32>:word32] = Mem52[fs:0<32>:word32]
	Mem62[esp_44 - 0x54<32>:word32] = Mem55[0x00A14188<p32>:word32] ^ esp_44 - 0x50<32>
	Mem64[fs:0<32>:word32] = esp_44 - 0xC<32>
	Mem66[esp_44 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_44 - 0x50<32>, Mem66[esp_44 - 0x58<32>:(ptr32 charconst )])
	Mem72[esp_44 - 0x58<32>:word32] = esp_44 - 0x50<32>
	Mem74[esp_44 - 4<32>:word32] = 0<32>
	fn004019E0(esp_44 - 0x34<32>, Mem74[esp_44 - 0x58<32>:word32])
	Mem83[esp_44 - 0x58<32>:word32] = 0x999C68<32>
	Mem86[esp_44 - 0x5C<32>:word32] = esp_44 - 0x34<32>
	Mem87[esp_44 - 0x34<32>:word32] = 0x990030<32>
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_44 - 0x34<32>
	int3()
l0040916F_thunk_fn00409170:
	word32 ecx_94
	fn00409170(dwArg04, dwArg08, dwArg0C, out ecx_94)
	return ecx_94
fn004090B0_exit:


word32 fn00409170(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004085A0
//      fn004090B0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax ecx
// Trashed: SCZO eax ecx Top
// Preserved: ebx edi esi esp
fn00409170_entry:
l00409170:
	word32 esi_11 = dwArg04
	word32 edi_16 = dwArg0C
	branch dwArg04 == dwArg08 l00409196
l00409183:
	operator =(edi_16, esi_11)
	ecx = edi_16
	esi_11 = esi_11 + 0x1C<32>
	edi_16 = edi_16 + 0x1C<32>
	branch esi_11 != dwArg08 l00409183
l00409196:
	ecxOut = ecx
	return edi_16
fn00409170_exit:


word32 fn004091A0(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409CE0
// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: ebp ebx edi esi esp
fn004091A0_entry:
l004091A0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem31[fs:0<32>:word32] = fp - 0x10<32>
	word32 esi_33 = dwArg0C
	word32 edi_34 = dwArg04
l004091E0:
	branch edi_34 == dwArg08 l0040922C
l0040922C:
	Mem50[fs:0x00000000<p32>:word32] = eax_13
	return esi_33
fn004091A0_exit:
l004091E5:
	branch esi_33 == 0<32> l004091FC
l004091F3:
	basic_string(esi_33, edi_34)
l004091FC:
	esi_33 = esi_33 + 0x1C<32>
	edi_34 = edi_34 + 0x1C<32>


word32 fn00409610(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004023A0
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn00409610_entry:
l00409610:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem20[fs:0<32>:word32] = fp - 0xC<32>
	Mem23[ecx:word32] = 0x8A7088<32>
	Mem24[ecx + 8<32>:word32] = 0<32>
	Mem25[ecx + 0xC<32>:word32] = 0<32>
	Mem26[ecx + 0x10<32>:word32] = 0<32>
	Mem28[fs:0x00000000<p32>:word32] = eax_9
	return ecx
fn00409610_exit:


void fn00409AC0(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409EA0
//      fn00409F70
// MayUse:  ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00409AC0_entry:
l00409AC0:
	word32 edi_25
	word32 ecx_16 = Mem15[ecx + 4<32>:word32]
	branch ecx_16 != 0<32> l00409ADA
l00409ADA:
	edi_25 = Mem21[ecx + 0xC<32>:word32] - ecx_16 >> 2<32>
l00409AD6:
	edi_25 = 0<32>
l00409AE2:
	branch dwArg08 == 0<32> l00409C6F
l00409AEE:
	word32 eax_43
	branch ecx_16 != 0<32> l00409AF6
l00409AF6:
	eax_43 = Mem21[ecx + 8<32>:word32] - ecx_16 >> 2<32>
l00409AF2:
	eax_43 = 0<32>
l00409AFE:
	branch 0x3FFFFFFF<32> - eax_43 >=u dwArg08 l00409B0E
l00409B09:
	ecx_16 = fn004090B0(edi, esi, ebx)
l00409B0E:
	word32 eax_76
	branch ecx_16 != 0<32> l00409B16
l00409B16:
	eax_76 = Mem21[ecx + 8<32>:word32] - ecx_16 >> 2<32>
l00409B12:
	eax_76 = 0<32>
l00409B1E:
	branch edi_25 >=u eax_76 + dwArg08 l00409BDD
l00409BDD:
	word32 ebp_101 = Mem98[ecx + 8<32>:word32]
	branch ebp_101 - dwArg04 >> 2<32> >=u dwArg08 l00409C42
l00409C42:
	word32 ebx_114 = ebp_101 - dwArg08 * 4<32>
	Mem134[ecx + 8<32>:word32] = fn007B2800(ebx_114, ebp_101, ebp_101)
	fn0050AAA0(dwArg04, ebx_114, ebp_101)
	fn004B3770(dwArg04, dwArg08 * 4<32> + dwArg04, fp + 0xC<32>)
l00409C6F:
	return
l00409BFC:
	fn007B2800(dwArg04, ebp_101, dwArg08 * 4<32> + dwArg04)
	word32 eax_187 = Mem178[ecx + 8<32>:word32]
	fn00669E20(eax_187, dwArg08 - (eax_187 - dwArg04 >> 2<32>), fp + 0xC<32>)
	Mem211[ecx + 8<32>:word32] = Mem199[ecx + 8<32>:word32] + dwArg08 * 4<32>
	fn004B3770(dwArg04, Mem211[ecx + 8<32>:word32] - dwArg08 * 4<32>, fp + 0xC<32>)
	return
l00409B29:
	word32 edi_245
	word32 eax_240 = edi_25 >>u 1<32>
	branch 0x3FFFFFFF<32> - eax_240 >=u edi_25 l00409B3C
l00409B3C:
	edi_245 = edi_25 + eax_240
l00409B38:
	edi_245 = 0<32>
l00409B3E:
	word32 eax_259
	branch ecx_16 != 0<32> l00409B46
l00409B46:
	eax_259 = Mem98[ecx + 8<32>:word32] - ecx_16 >> 2<32>
l00409B42:
	eax_259 = 0<32>
l00409B4E:
	branch edi_245 >=u eax_259 + dwArg08 l00409B66
l00409B54:
	word32 edi_280
	branch ecx_16 != 0<32> l00409B5C
l00409B5C:
	edi_280 = Mem98[ecx + 8<32>:word32] - ecx_16 >> 2<32>
l00409B58:
	edi_280 = 0<32>
l00409B64:
	edi_245 = edi_280 + dwArg08
l00409B66:
	word32 ecx_375
	word32 ebx_309
	word32 edi_310
	word32 esi_311
	word32 ecx_556
	word32 edx_557
	word32 ebp_558
	word32 eax_305 = fn007B2480(dwArg08, ebp, ecx, edi_245, edi_245, out ecx_556, out edx_557, out ebx_309, out ebp_558, out esi_311, out edi_310)
	fn007B2800(dwArg04, Mem354[esi_311 + 8<32>:word32], fn00669E20(fn007B2800(Mem297[esi_311 + 4<32>:word32], dwArg04, eax_305), ebx_309, fp + 0xC<32>))
	word32 eax_369 = Mem359[esi_311 + 4<32>:word32]
	branch eax_369 != 0<32> l00409BAE
l00409BAE:
	ecx_375 = Mem359[esi_311 + 8<32>:word32] - eax_369 >> 2<32>
l00409BAA:
	ecx_375 = 0<32>
l00409BB6:
	word32 ebx_382 = ebx_309 + ecx_375
	branch eax_369 == 0<32> l00409BC5
l00409BBC:
	operator delete(eax_369)
l00409BC5:
	Mem401[esi_311 + 4<32>:word32] = eax_305
	Mem407[esi_311 + 0xC<32>:word32] = eax_305 + edi_310 * 4<32>
	Mem408[esi_311 + 8<32>:word32] = eax_305 + ebx_382 * 4<32>
	return
fn00409AC0_exit:


void fn00409C80(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn007B2D10
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn00409C80_entry:
l00409C80:
	word32 esi_15 = dwArg04
	word32 esp_27 = fp - 8<i32>
	branch dwArg04 == dwArg08 l00409CB1
l00409C8E:
l00409C90:
	word32 ecx_17 = Mem16[esi_15:word32]
	branch ecx_17 == 0<32> l00409CA4
l00409C96:
	word32 v10_21 = Mem16[ecx_17 + 4<32>:word32] + 0xFFFFFFFF<32>
	Mem22[ecx_17 + 4<32>:word32] = v10_21
	branch v10_21 != 0<32> l00409CA4
l00409C9C:
	word32 eax_25 = Mem22[ecx_17:word32]
	word32 edx_26 = Mem22[eax_25:word32]
	Mem29[esp_27 - 4<i32>:word32] = 1<32>
	word32 ecx_33
	word32 edx_35
	call edx_26 (retsize: 4;)
		uses: eax:eax_25,ecx:ecx_33,edx:edx_35,Stack +0008:dwArg04,Stack +000C:dwArg08
		defs: ecx:ecx_33,edx:edx_35,esp:esp_32
l00409CA4:
	Mem39[esi_15:word32] = 0<32>
	esi_15 = esi_15 + 4<32>
	branch esi_15 != dwArg08 l00409C90
l00409CB1:
	return
fn00409C80_exit:


void fn00409CE0(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040BDA0
//      fn0040BE00
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00409CE0_entry:
l00409CE0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem31[fs:0<32>:word32] = fp - 0x10<32>
	word32 eax_37 = Mem35[dwArg04 + 4<32>:word32]
	branch eax_37 == 0<32> l00409D32
l00409D1A:
	word32 ecx_42 = Mem35[dwArg04 + 8<32>:word32] - eax_37
	word32 edx_46 = SLICE(ecx_42 *s64 0x92492493<32>, word32, 32) + ecx_42
	eax_37 = (edx_46 >> 4<32> >>u 0x1F<32>) + (edx_46 >> 4<32>)
l00409D32:
	word32 edx_167
	branch SLICE(CONVERT(fn00401EC0(ecx, eax_37, out edx_167), uint8, uint32), byte, 0) == 0<8> l00409D69
l00409D3E:
	Mem100[ecx + 8<32>:word32] = fn004091A0(Mem55[dwArg04 + 4<32>:word32], Mem55[dwArg04 + 8<32>:word32], Mem55[ecx + 4<32>:word32])
l00409D69:
	Mem107[fs:0x00000000<p32>:word32] = eax_13
	return
fn00409CE0_exit:


void fn00409EA0(word32 ecx, word32 ebx, word32 ebp, word32 edi, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409F70
// MayUse:  ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn00409EA0_entry:
l00409EA0:
	word32 edx_14
	word32 esi_8 = Mem6[ecx + 4<32>:word32]
	branch esi_8 != 0<32> l00409EAC
l00409EAC:
	edx_14 = Mem6[ecx + 8<32>:word32] - esi_8 >> 2<32>
l00409EA8:
	edx_14 = 0<32>
l00409EB4:
	branch esi_8 == 0<32> l00409ED9
l00409EB8:
	branch edx_14 >=u Mem6[ecx + 0xC<32>:word32] - esi_8 >> 2<32> l00409ED9
l00409ED9:
	fn00409AC0(ecx, ebx, ebp, esi_8, edi, Mem6[ecx + 8<32>:word32], 1<32>)
	return
l00409EC4:
	word32 eax_66 = Mem6[ecx + 8<32>:word32]
	Mem69[eax_66:word32] = Mem6[dwArg04:word32]
	Mem72[ecx + 8<32>:word32] = eax_66 + 4<32>
	return
fn00409EA0_exit:


void fn00409F70(word32 ecx, word32 ebx, word32 ebp, word32 edi, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004023A0
// MayUse:  ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] fs:[0..15] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn00409F70_entry:
l00409F70:
	word32 edx_9 = Mem6[ecx + 8<32>:word32]
	branch edx_9 == 0<32> l00409F8D
l00409F7D:
	branch dwArg08 <u Mem6[ecx + 0xC<32>:word32] - edx_9 >> 2<32> l00409F9B
l00409F9B:
	fn00409AC0(ecx + 4<32>, ebx, ebp, ecx, edi, Mem6[ecx + 8<32>:word32] + dwArg08 * 4<32>, 1<32>)
	return
l00409F8D:
	fn00409EA0(ecx + 4<32>, ebx, ebp, edi, fp + 4<32>)
	return
fn00409F70_exit:


word32 fn0040A480(word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040CBA0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn0040A480_entry:
l0040A480:
	word32 eax_25 = fn00694B89(length(dwArg08) + 1<32>)
	word32 eax_30 = c_str(dwArg08)
	word32 edx_31 = eax_25
l0040A4B4:
	byte cl_34 = Mem33[eax_30:byte]
	Mem36[edx_31:byte] = cl_34
	eax_30 = eax_30 + 1<32>
	edx_31 = edx_31 + 1<32>
	branch cl_34 != 0<8> l0040A4B4
l0040A4C2:
	_strlwr(eax_25)
	basic_string(dwArg04, eax_25)
	operator delete[](eax_25)
	edxOut = edx_31
	return dwArg04
fn0040A480_exit:


void fn0040A5F0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040C710
//      fn0040C7F0
// MayUse:  ecx:[0..31]
// LiveOut:
// Trashed: SCZO eax edx Top
// Preserved: esp
fn0040A5F0_entry:
l0040A5F0:
	word32 eax_6 = Mem0[ecx:word32]
	branch Mem0[eax_6 + 0x39<32>:byte] == 0<8> l0040A5FE
l0040A5FE:
	word32 edx_36 = Mem0[eax_6:word32]
	branch Mem0[edx_36 + 0x39<32>:byte] != 0<8> l0040A61E
l0040A61E:
	word32 eax_12 = Mem0[eax_6 + 4<32>:word32]
	branch Mem0[eax_12 + 0x39<32>:byte] != 0<8> l0040A638
l0040A627:
	branch Mem16[ecx:word32] != Mem16[eax_12:word32] l0040A638
l0040A62D:
	Mem21[ecx:word32] = eax_12
	eax_12 = Mem21[eax_12 + 4<32>:word32]
	branch Mem21[eax_12 + 0x39<32>:byte] == 0<8> l0040A627
l0040A638:
	branch Mem26[Mem26[ecx:word32] + 0x39<32>:byte] != 0<8> l0040A642
l0040A640:
	Mem31[ecx:word32] = eax_12
l0040A642:
	return
l0040A606:
	word32 eax_32 = Mem0[edx_36 + 8<32>:word32]
	branch Mem0[eax_32 + 0x39<32>:byte] != 0<8> l0040A61B
l0040A60F:
l0040A610:
	edx_36 = eax_32
	eax_32 = Mem0[eax_32 + 8<32>:word32]
	branch Mem0[eax_32 + 0x39<32>:byte] == 0<8> l0040A610
l0040A61B:
	Mem44[ecx:word32] = edx_36
	return
l0040A5F8:
	Mem46[ecx:word32] = Mem0[eax_6 + 8<32>:word32]
	return
fn0040A5F0_exit:


void fn0040A650(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040C7F0
// MayUse:  ecx:[0..31]
// LiveOut:
// Trashed: SCZO eax edx Top
// Preserved: esp
fn0040A650_entry:
l0040A650:
	word32 eax_6 = Mem0[ecx:word32]
	branch Mem0[eax_6 + 0x39<32>:byte] != 0<8> l0040A69A
l0040A658:
	word32 edx_33 = Mem0[eax_6 + 8<32>:word32]
	branch Mem0[edx_33 + 0x39<32>:byte] != 0<8> l0040A67D
l0040A67D:
	word32 eax_12 = Mem0[eax_6 + 4<32>:word32]
	branch Mem0[eax_12 + 0x39<32>:byte] != 0<8> l0040A698
l0040A686:
	branch Mem16[ecx:word32] != Mem16[eax_12 + 8<32>:word32] l0040A698
l0040A68D:
	Mem21[ecx:word32] = eax_12
	eax_12 = Mem21[eax_12 + 4<32>:word32]
	branch Mem21[eax_12 + 0x39<32>:byte] == 0<8> l0040A686
l0040A698:
	Mem27[ecx:word32] = eax_12
l0040A69A:
	return
l0040A661:
	word32 eax_28 = Mem0[edx_33:word32]
	branch Mem0[eax_28 + 0x39<32>:byte] != 0<8> l0040A67A
l0040A669:
l0040A670:
	edx_33 = eax_28
	eax_28 = Mem0[eax_28:word32]
	branch Mem0[eax_28 + 0x39<32>:byte] == 0<8> l0040A670
l0040A67A:
	Mem41[ecx:word32] = edx_33
	return
fn0040A650_exit:


word32 fn0040A6A0(word32 ecx, word32 dwArg04, ptr32 & ebxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040AB30
//      fn0040CAE0
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut: eax ebp ebx
// Trashed: SCZO eax ebp ebx Top
// Preserved: ecx edi esi esp
fn0040A6A0_entry:
l0040A6A0:
	word32 eax_59 = Mem0[ecx + 4<32>:word32]
	word32 esi_10 = Mem9[eax_59 + 4<32>:word32]
	word32 edi_15 = eax_59
	branch Mem9[esi_10 + 0x39<32>:byte] != 0<8> l0040A6E1
l0040A6B0:
	word32 esp_25 = fp - 16<i32>
l0040A6C0:
	word32 esp_29 = esp_25 - 4<i32>
	Mem31[esp_29:word32] = dwArg04
	word32 eax_27 = esi_10 + 0xC<32>
	Mem33[esp_29 - 4<i32>:word32] = eax_27
	word32 esp_38
	word32 eax_39
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:eax_27,ecx:ecx_34,Stack +0008:dwArg04
		defs: eax:eax_39,ecx:ecx_40,esp:esp_38
	esp_25 = esp_38 + 8<32>
	branch SLICE(eax_39, byte, 0) == 0<8> l0040A6D3
l0040A6D3:
	edi_15 = esi_10
	esi_10 = Mem33[esi_10:word32]
l0040A6CE:
	esi_10 = Mem33[esi_10 + 8<32>:word32]
l0040A6D7:
	branch Mem33[esi_10 + 0x39<32>:byte] == 0<8> l0040A6C0
l0040A6DD:
	ebp = Mem33[esp_38 + 8<32>:word32]
	eax_59 = edi_15
	ebx = Mem33[esp_38 + 0xC<32>:word32]
l0040A6E1:
	ebxOut = ebx
	ebpOut = ebp
	return eax_59
fn0040A6A0_exit:


void fn0040A6F0(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040C130
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn0040A6F0_entry:
l0040A6F0:
	word32 eax_6 = Mem0[dwArg04 + 8<32>:word32]
	Mem11[dwArg04 + 8<32>:word32] = Mem9[eax_6:word32]
	word32 esi_12 = Mem11[eax_6:word32]
	branch Mem11[esi_12 + 0x39<32>:byte] != 0<8> l0040A708
l0040A705:
	Mem15[esi_12 + 4<32>:word32] = dwArg04
l0040A708:
	Mem20[eax_6 + 4<32>:word32] = Mem17[dwArg04 + 4<32>:word32]
	word32 ecx_23 = Mem20[ecx + 4<32>:word32]
	branch dwArg04 != Mem20[ecx_23 + 4<32>:word32] l0040A722
l0040A722:
	word32 ecx_29 = Mem20[dwArg04 + 4<32>:word32]
	branch dwArg04 != Mem20[ecx_29:word32] l0040A733
l0040A733:
	Mem32[ecx_29 + 8<32>:word32] = eax_6
	Mem33[eax_6:word32] = dwArg04
	Mem34[dwArg04 + 4<32>:word32] = eax_6
	return
l0040A729:
	Mem35[ecx_29:word32] = eax_6
	Mem36[eax_6:word32] = dwArg04
	Mem37[dwArg04 + 4<32>:word32] = eax_6
	return
l0040A717:
	Mem38[ecx_23 + 4<32>:word32] = eax_6
	Mem39[eax_6:word32] = dwArg04
	Mem40[dwArg04 + 4<32>:word32] = eax_6
	return
fn0040A6F0_exit:


void fn0040A740(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040C130
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn0040A740_entry:
l0040A740:
	word32 eax_6 = Mem0[dwArg04:word32]
	Mem11[dwArg04:word32] = Mem9[eax_6 + 8<32>:word32]
	word32 esi_12 = Mem11[eax_6 + 8<32>:word32]
	branch Mem11[esi_12 + 0x39<32>:byte] != 0<8> l0040A758
l0040A755:
	Mem15[esi_12 + 4<32>:word32] = dwArg04
l0040A758:
	Mem20[eax_6 + 4<32>:word32] = Mem17[dwArg04 + 4<32>:word32]
	word32 ecx_23 = Mem20[ecx + 4<32>:word32]
	branch dwArg04 != Mem20[ecx_23 + 4<32>:word32] l0040A773
l0040A773:
	word32 ecx_29 = Mem20[dwArg04 + 4<32>:word32]
	branch dwArg04 != Mem20[ecx_29 + 8<32>:word32] l0040A787
l0040A787:
	Mem32[ecx_29:word32] = eax_6
	Mem33[eax_6 + 8<32>:word32] = dwArg04
	Mem34[dwArg04 + 4<32>:word32] = eax_6
	return
l0040A77B:
	Mem35[ecx_29 + 8<32>:word32] = eax_6
	Mem36[eax_6 + 8<32>:word32] = dwArg04
	Mem37[dwArg04 + 4<32>:word32] = eax_6
	return
l0040A767:
	Mem38[ecx_23 + 4<32>:word32] = eax_6
	Mem39[eax_6 + 8<32>:word32] = dwArg04
	Mem40[dwArg04 + 4<32>:word32] = eax_6
	return
fn0040A740_exit:


void fn0040A7A0(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, byte bArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040AB90
// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..7]
// LiveOut:
// Trashed: SCZO ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0040A7A0_entry:
l0040A7A0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem31[fs:0<32>:word32] = fp - 0x10<32>
	word32 eax_35 = operator new(0x30<32>)
	branch eax_35 == 0<32> l0040A81C
l0040A7EC:
	Mem49[eax_35 + 4<32>:word32] = dwArg08
	Mem54[eax_35:word32] = dwArg04
	Mem55[eax_35 + 8<32>:word32] = dwArg0C
	basic_string(eax_35 + 0xC<32>, dwArg10)
	Mem60[eax_35 + 0x28<32>:word32] = Mem55[dwArg10 + 0x1C<32>:word32]
	Mem61[eax_35 + 0x2C<32>:byte] = bArg14
	Mem62[eax_35 + 0x2D<32>:byte] = 0<8>
l0040A81C:
	Mem69[fs:0x00000000<p32>:word32] = eax_13
	return
fn0040A7A0_exit:


word32 fn0040A850()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040D620
// MayUse: 
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn0040A850_entry:
l0040A850:
	word32 eax_6 = operator new(0x3C<32>)
	branch eax_6 == 0<32> l0040A864
l0040A85E:
	Mem11[eax_6:word32] = 0<32>
l0040A864:
	branch eax_6 == 4<32> l0040A871
l0040A86B:
	Mem17[eax_6 + 4<32>:word32] = 0<32>
l0040A871:
	branch eax_6 == 8<32> l0040A87E
l0040A878:
	Mem23[eax_6 + 8<32>:word32] = 0<32>
l0040A87E:
	Mem25[eax_6 + 0x38<32>:byte] = 1<8>
	Mem26[eax_6 + 0x39<32>:byte] = 0<8>
	return eax_6
fn0040A850_exit:


word32 fn0040AB30(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040CBA0
// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ebx
// Trashed: SCZO eax ebp ebx ecx Top
// Preserved: edi esi esp
fn0040AB30_entry:
l0040AB30:
	word32 ebx_19
	word32 ebp_108
	word32 eax_17 = fn0040A6A0(ecx, dwArg08, out ebx_19, out ebp_108)
	branch eax_17 == Mem15[ecx + 4<32>:word32] l0040AB6C
l0040AB48:
	word32 eax_36
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:eax_17 + 0xC<32>,ecx:ecx,Stack +0004:dwArg08,Stack +0008:eax_17 + 0xC<32>,Stack +0020:eax_17
		defs: eax:eax_36
	branch SLICE(eax_36, byte, 0) != 0<8> l0040AB6C
l0040AB6C:
	Mem54[dwArg04:word32] = Mem45[ecx + 4<32>:word32]
	return
l0040AB5A:
	Mem64[dwArg04:word32] = eax_17
	return
fn0040AB30_exit:


word32 fn0040AB90(word32 ecx, word32 dwArg04, byte bArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040B930
//      fn0040BA10
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..7] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0040AB90_entry:
l0040AB90:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	branch Mem30[ecx + 8<32>:word32] <u 0x7FFFFFE<32> l0040ABFE
l0040ABC2:
	basic_string(fp - 0x50<32>, 0x8A6D80<32>)
	fn004019E0(fp - 0x34<32>, fp - 0x50<32>)
	call CxxThrowException (retsize: 4;)
		uses: ecx:fp - 0x34<32>,Stack +0004:fp - 0x34<32>,Stack +0008:0x999C68<32>,Stack +003C:0x990030<32>
l0040ABFE:
	word32 eax_68 = Mem65[ecx + 4<32>:word32]
	fn0040A7A0(eax_68, dwArg0C, eax_68, dwArg10, 0<8>)
	word32 eax_89 = Mem79[ecx + 4<32>:word32]
	Mem92[ecx + 8<32>:word32] = Mem79[ecx + 8<32>:word32] + 1<32>
	branch dwArg0C != eax_89 l0040AC35
l0040AC35:
	branch bArg08 == 0<8> l0040AC49
l0040AC49:
	Mem97[dwArg0C + 8<32>:word32] = eax_68
	word32 eax_98 = Mem97[ecx + 4<32>:word32]
	branch dwArg0C != Mem97[eax_98 + 8<32>:word32] l0040AC57
l0040AC54:
	Mem101[eax_98 + 8<32>:word32] = eax_68
l0040AC3C:
	Mem102[dwArg0C:word32] = eax_68
	word32 eax_103 = Mem102[ecx + 4<32>:word32]
	branch dwArg0C != Mem102[eax_103:word32] l0040AC57
l0040AC45:
	Mem106[eax_103:word32] = eax_68
l0040AC25:
	Mem107[eax_89 + 4<32>:word32] = eax_68
	Mem109[Mem107[ecx + 4<32>:word32]:word32] = eax_68
	Mem111[Mem109[ecx + 4<32>:word32] + 8<32>:word32] = eax_68
l0040AC57:
	word32 eax_116 = eax_68 + 4<32>
	word32 esi_117 = eax_68
	branch Mem113[Mem113[eax_68 + 4<32>:word32] + 0x2C<32>:byte] != 0<8> l0040AD55
l0040AC69:
l0040AC70:
	word32 ecx_123 = Mem122[eax_116:word32]
	word32 edx_124 = Mem122[ecx_123 + 4<32>:word32]
	branch ecx_123 != Mem122[edx_124:word32] l0040ACCA
l0040ACCA:
	word32 edx_127 = Mem122[edx_124:word32]
	branch Mem122[edx_127 + 0x2C<32>:byte] != 0<8> l0040ACE8
l0040ACE8:
	branch esi_117 != Mem122[ecx_123:word32] l0040ACF6
l0040ACEC:
	fn00420740(ecx, ecx_123)
	esi_117 = ecx_123
l0040ACF6:
	Mem152[Mem148[esi_117 + 4<32>:word32] + 0x2C<32>:byte] = 1<8>
	Mem155[Mem152[Mem152[esi_117 + 4<32>:word32] + 4<32>:word32] + 0x2C<32>:byte] = 0<8>
	word32 eax_157 = Mem155[Mem155[esi_117 + 4<32>:word32] + 4<32>:word32]
	word32 ecx_158 = Mem155[eax_157 + 8<32>:word32]
	Mem160[eax_157 + 8<32>:word32] = Mem155[ecx_158:word32]
	word32 edx_161 = Mem160[ecx_158:word32]
	branch Mem160[edx_161 + 0x2D<32>:byte] != 0<8> l0040AD1F
l0040AD1C:
	Mem164[edx_161 + 4<32>:word32] = eax_157
l0040AD1F:
	Mem169[ecx_158 + 4<32>:word32] = Mem166[eax_157 + 4<32>:word32]
	word32 edx_172 = Mem169[ecx + 4<32>:word32]
	branch eax_157 != Mem169[edx_172 + 4<32>:word32] l0040AD32
l0040AD32:
	word32 edx_175 = Mem169[eax_157 + 4<32>:word32]
	branch eax_157 != Mem169[edx_175:word32] l0040AD3D
l0040AD3D:
	Mem178[edx_175 + 8<32>:word32] = ecx_158
l0040AD39:
	Mem179[edx_175:word32] = ecx_158
l0040AD2D:
	Mem180[edx_172 + 4<32>:word32] = ecx_158
l0040AD40:
	Mem183[ecx_158:word32] = eax_157
	Mem184[eax_157 + 4<32>:word32] = ecx_158
l0040ACD2:
	Mem185[ecx_123 + 0x2C<32>:byte] = 1<8>
	Mem186[edx_127 + 0x2C<32>:byte] = 1<8>
	Mem189[Mem186[Mem186[eax_116:word32] + 4<32>:word32] + 0x2C<32>:byte] = 0<8>
	esi_117 = Mem189[Mem189[eax_116:word32] + 4<32>:word32]
l0040AC79:
	word32 edx_192 = Mem122[edx_124 + 8<32>:word32]
	branch Mem122[edx_192 + 0x2C<32>:byte] != 0<8> l0040AC9B
l0040AC9B:
	branch esi_117 != Mem122[ecx_123 + 8<32>:word32] l0040ACAA
l0040ACA0:
	fn004E2250(ecx, ecx_123)
	esi_117 = ecx_123
l0040ACAA:
	Mem213[Mem210[esi_117 + 4<32>:word32] + 0x2C<32>:byte] = 1<8>
	Mem216[Mem213[Mem213[esi_117 + 4<32>:word32] + 4<32>:word32] + 0x2C<32>:byte] = 0<8>
	fn00420740(ecx, Mem216[Mem216[esi_117 + 4<32>:word32] + 4<32>:word32])
l0040AC82:
	Mem232[ecx_123 + 0x2C<32>:byte] = 1<8>
	Mem233[edx_192 + 0x2C<32>:byte] = 1<8>
	Mem236[Mem233[Mem233[eax_116:word32] + 4<32>:word32] + 0x2C<32>:byte] = 0<8>
	esi_117 = Mem236[Mem236[eax_116:word32] + 4<32>:word32]
l0040AD45:
	eax_116 = esi_117 + 4<32>
	branch Mem242[Mem242[esi_117 + 4<32>:word32] + 0x2C<32>:byte] == 0<8> l0040AC70
l0040AD55:
	Mem260[Mem251[Mem251[ecx + 4<32>:word32] + 4<32>:word32] + 0x2C<32>:byte] = 1<8>
	Mem274[dwArg04:word32] = eax_68
	Mem284[fs:0x00000000<p32>:word32] = eax_9
	return dwArg04
fn0040AB90_exit:


word32 fn0040B930(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040BA10
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0040B930_entry:
l0040B930:
	word32 ecx_27
	word32 edi_21 = Mem20[ecx + 4<32>:word32]
	word32 esp_18 = fp - 20<i32>
	word32 esi_22 = Mem20[edi_21 + 4<32>:word32]
	byte al_24 = 1<8>
	ecx_27 = ecx
	branch Mem20[esi_22 + 0x2D<32>:byte] != 0<8> l0040B975
l0040B94D:
	ecx_27 = ecx
l0040B950:
	word32 eax_29 = esi_22 + 0xC<32>
	word32 esp_31 = esp_18 - 4<i32>
	Mem32[esp_31:word32] = eax_29
	Mem35[esp_31 - 4<i32>:word32] = dwArg08
	word32 esp_40
	word32 eax_42
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:eax_29,ecx:ecx_37,Stack +000C:dwArg08
		defs: eax:eax_42,ecx:ecx_41,esp:esp_40
	al_24 = SLICE(eax_42, byte, 0) (alias)
	Mem50[esp_40 + 0x18<32>:byte] = al_24
	edi_21 = esi_22
	esp_18 = esp_40 + 8<32>
	branch al_24 == 0<8> l0040B96C
l0040B96C:
	esi_22 = Mem50[esi_22 + 8<32>:word32]
l0040B968:
	esi_22 = Mem50[esi_22:word32]
l0040B96F:
	branch Mem50[esi_22 + 0x2D<32>:byte] == 0<8> l0040B950
l0040B975:
	word32 esi_64 = edi_21
	branch al_24 == 0<8> l0040B9B7
l0040B97F:
	branch edi_21 != Mem67[Mem67[ecx + 4<32>:word32]:word32] l0040B9AA
l0040B9AA:
	fn005F58C0(fp + 8<32>)
	ecx_27 = fp + 8<32>
	esi_64 = dwArg08
l0040B9B7:
	word32 edx_83 = esi_64 + 0xC<32>
	word32 eax_102
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: ecx:ecx_92,edx:edx_83,Stack +0004:edx_83,Stack +0008:dwArg08,Stack +000C:dwArg08,Stack +0028:dwArg08
		defs: eax:eax_102
	branch SLICE(eax_102, byte, 0) == 0<8> l0040B9F0
l0040B9F0:
	Mem114[dwArg04:word32] = esi_64
	Mem119[dwArg04 + 4<32>:byte] = 0<8>
	return
l0040B9C9:
	Mem156[dwArg04:word32] = Mem133[fn0040AB90(ecx, fp + 8<32>, 1<8>, edi_21, dwArg08):word32]
	Mem157[dwArg04 + 4<32>:byte] = 1<8>
	return
l0040B986:
	Mem188[dwArg04:word32] = Mem170[fn0040AB90(ecx, fp + 8<32>, 1<8>, edi_21, dwArg08):word32]
	Mem189[dwArg04 + 4<32>:byte] = 1<8>
	return
fn0040B930_exit:


word32 fn0040BA10(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040BC80
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0040BA10_entry:
l0040BA10:
	branch Mem7[ecx + 8<32>:word32] != 0<32> l0040BA3E
l0040BA3E:
	word32 eax_15 = Mem13[ecx + 4<32>:word32]
	branch dwArg08 != Mem19[eax_15:word32] l0040BA81
l0040BA81:
	branch dwArg08 != eax_15 l0040BAC0
l0040BAC0:
	word32 eax_35
	word32 ecx_34
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:dwArg08 + 0xC<32>,ecx:ecx,Stack +0004:dwArg0C,Stack +0008:dwArg08 + 0xC<32>,Stack +0028:dwArg04,Stack +002C:dwArg08,Stack +0030:dwArg0C
		defs: eax:eax_35,ecx:ecx_34
	branch SLICE(eax_35, byte, 0) == 0<8> l0040BB2D
l0040BAD2:
	fn005F58C0(fp + 0xC<32>)
	branch SLICE(CONVERT(fn004055D0(dwArg08 + 0xC<32>, dwArg0C, out ecx_34), uint8, uint32), byte, 0) == 0<8> l0040BB2D
l0040BB2D:
	word32 eax_84
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:dwArg08 + 0xC<32>,ecx:ecx_79,Stack +0004:dwArg08 + 0xC<32>,Stack +0008:dwArg0C,Stack +000C:dwArg08,Stack +0010:dwArg0C,Stack +0028:dwArg04,Stack +002C:dwArg08,Stack +0030:dwArg0C
		defs: eax:eax_84
	branch SLICE(eax_84, byte, 0) == 0<8> l0040BB9F
l0040BB3F:
	fn005B0EC0(fp + 0xC<32>)
	branch dwArg08 == Mem94[ecx + 4<32>:word32] l0040BB65
l0040BB55:
	word32 ecx_524
	branch SLICE(CONVERT(fn004055D0(dwArg0C, dwArg08 + 0xC<32>, out ecx_524), uint8, uint32), byte, 0) == 0<8> l0040BB9F
l0040BB65:
	branch Mem122[Mem122[dwArg08 + 8<32>:word32] + 0x2D<32>:byte] == 0<8> l0040BB8A
l0040BB8A:
	fn0040AB90(ecx, dwArg04, 1<8>, dwArg08, dwArg0C)
	return
l0040BB75:
	fn0040AB90(ecx, dwArg04, 0<8>, dwArg08, dwArg0C)
	return
l0040BAF3:
	branch Mem57[Mem57[dwArg08 + 8<32>:word32] + 0x2D<32>:byte] == 0<8> l0040BB18
l0040BB18:
	fn0040AB90(ecx, dwArg04, 1<8>, dwArg08, dwArg0C)
	return
l0040BB03:
	fn0040AB90(ecx, dwArg04, 0<8>, dwArg08, dwArg0C)
	return
l0040BA85:
	word32 eax_244 = Mem24[eax_15 + 8<32>:word32]
	word32 eax_253
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:eax_244 + 0xC<32>,ecx:ecx,Stack +0004:eax_244 + 0xC<32>,Stack +0008:dwArg0C,Stack +0028:dwArg04,Stack +002C:dwArg08,Stack +0030:dwArg0C
		defs: eax:eax_253
	branch SLICE(eax_253, byte, 0) == 0<8> l0040BB9F
l0040BA9E:
	fn0040AB90(ecx, dwArg04, 0<8>, Mem250[Mem250[ecx + 4<32>:word32] + 8<32>:word32], dwArg0C)
	return
l0040BA4F:
	word32 eax_300
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: ecx:ecx,edx:dwArg08 + 0xC<32>,Stack +0004:dwArg0C,Stack +0008:dwArg08 + 0xC<32>,Stack +0028:dwArg04,Stack +002C:dwArg08,Stack +0030:dwArg0C
		defs: eax:eax_300
	branch SLICE(eax_300, byte, 0) == 0<8> l0040BB9F
l0040BB9F:
	Mem335[dwArg04:word32] = Mem315[fn0040B930(ecx, fp - 8<32>, dwArg0C):word32]
	return
l0040BA65:
	fn0040AB90(ecx, dwArg04, 1<8>, dwArg08, dwArg0C)
	return
l0040BA1D:
	fn0040AB90(ecx, dwArg04, 1<8>, Mem13[ecx + 4<32>:word32], dwArg0C)
	return
fn0040BA10_exit:


word32 fn0040BC80(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040CBA0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx edi esi esp
fn0040BC80_entry:
l0040BC80:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem29[fs:0<32>:word32] = fp - 0xC<32>
	word32 ebx_37
	word32 eax_35 = fn005B0F90(ecx, dwArg04, out ebx_37)
	branch eax_35 == Mem34[ecx + 4<32>:word32] l0040BCCB
l0040BCB9:
	word32 eax_52
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:eax_35 + 0xC<32>,ecx:ecx,Stack +0004:ebx_37,Stack +0008:eax_35 + 0xC<32>,Stack +004C:dwArg04
		defs: eax:eax_52
	branch SLICE(eax_52, byte, 0) == 0<8> l0040BD1E
l0040BD1E:
	Mem64[fs:0x00000000<p32>:word32] = eax_9
	return eax_35 + 0x28<32>
l0040BCCB:
	basic_string(fp - 0x2C<32>, ebx_37)
	word32 esi_107 = Mem97[fn0040BA10(ecx, fp + 4<32>, eax_35, fp - 0x2C<32>):word32]
	~basic_string(fp - 0x2C<32>)
	Mem112[fs:0x00000000<p32>:word32] = eax_9
	return esi_107 + 0x28<32>
fn0040BC80_exit:


void fn0040BD40(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040CAE0
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: esi esp
fn0040BD40_entry:
l0040BD40:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem25[fs:0<32>:word32] = fp - 0xC<32>
	fn00403900(ecx + 0x1C<32>)
	~basic_string(ecx)
	Mem39[fs:0x00000000<p32>:word32] = eax_9
	return
fn0040BD40_exit:


word32 fn0040BDA0(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040CAE0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn0040BDA0_entry:
l0040BDA0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem25[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(ecx, dwArg04)
	fn00409CE0(ecx + 0x1C<32>, dwArg08)
	Mem48[fs:0x00000000<p32>:word32] = eax_9
	return ecx
fn0040BDA0_exit:


void fn0040BE00(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040C090
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn0040BE00_entry:
l0040BE00:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem26[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(ecx, dwArg04)
	fn00409CE0(ecx + 0x1C<32>, dwArg04 + 0x1C<32>)
	Mem50[fs:0x00000000<p32>:word32] = eax_9
	return
fn0040BE00_exit:


void fn0040C090(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, byte bArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040C130
// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..7]
// LiveOut:
// Trashed: SCZO ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0040C090_entry:
l0040C090:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem31[fs:0<32>:word32] = fp - 0x10<32>
	word32 eax_35 = operator new(0x3C<32>)
	branch eax_35 == 0<32> l0040C103
l0040C0DC:
	Mem48[eax_35:word32] = dwArg04
	Mem50[eax_35 + 4<32>:word32] = dwArg08
	Mem54[eax_35 + 8<32>:word32] = dwArg0C
	fn0040BE00(eax_35 + 0xC<32>, dwArg10)
	Mem64[eax_35 + 0x38<32>:byte] = bArg14
	Mem65[eax_35 + 0x39<32>:byte] = 0<8>
l0040C103:
	Mem72[fs:0x00000000<p32>:word32] = eax_13
	return
fn0040C090_exit:


word32 fn0040C130(word32 ecx, word32 dwArg04, byte bArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040C710
//      fn0040C7F0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..7] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0040C130_entry:
l0040C130:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	branch Mem30[ecx + 8<32>:word32] <u 0x5D1745C<32> l0040C19E
l0040C162:
	basic_string(fp - 0x50<32>, 0x8A6D80<32>)
	fn004019E0(fp - 0x34<32>, fp - 0x50<32>)
	call CxxThrowException (retsize: 4;)
		uses: ecx:fp - 0x34<32>,Stack +0004:fp - 0x34<32>,Stack +0008:0x999C68<32>,Stack +003C:0x990030<32>
l0040C19E:
	word32 eax_68 = Mem65[ecx + 4<32>:word32]
	fn0040C090(eax_68, dwArg0C, eax_68, dwArg10, 0<8>)
	word32 eax_89 = Mem79[ecx + 4<32>:word32]
	Mem92[ecx + 8<32>:word32] = Mem79[ecx + 8<32>:word32] + 1<32>
	branch dwArg0C != eax_89 l0040C1D5
l0040C1D5:
	branch bArg08 == 0<8> l0040C1E9
l0040C1E9:
	Mem97[dwArg0C + 8<32>:word32] = eax_68
	word32 eax_98 = Mem97[ecx + 4<32>:word32]
	branch dwArg0C != Mem97[eax_98 + 8<32>:word32] l0040C1F7
l0040C1F4:
	Mem101[eax_98 + 8<32>:word32] = eax_68
l0040C1DC:
	Mem102[dwArg0C:word32] = eax_68
	word32 eax_103 = Mem102[ecx + 4<32>:word32]
	branch dwArg0C != Mem102[eax_103:word32] l0040C1F7
l0040C1E5:
	Mem106[eax_103:word32] = eax_68
l0040C1C5:
	Mem107[eax_89 + 4<32>:word32] = eax_68
	Mem109[Mem107[ecx + 4<32>:word32]:word32] = eax_68
	Mem111[Mem109[ecx + 4<32>:word32] + 8<32>:word32] = eax_68
l0040C1F7:
	word32 eax_116 = eax_68 + 4<32>
	word32 esi_117 = eax_68
	branch Mem113[Mem113[eax_68 + 4<32>:word32] + 0x38<32>:byte] != 0<8> l0040C2F5
l0040C209:
l0040C210:
	word32 ecx_123 = Mem122[eax_116:word32]
	word32 edx_124 = Mem122[ecx_123 + 4<32>:word32]
	branch ecx_123 != Mem122[edx_124:word32] l0040C26A
l0040C26A:
	word32 edx_127 = Mem122[edx_124:word32]
	branch Mem122[edx_127 + 0x38<32>:byte] != 0<8> l0040C288
l0040C288:
	branch esi_117 != Mem122[ecx_123:word32] l0040C296
l0040C28C:
	fn0040A740(ecx, ecx_123)
	esi_117 = ecx_123
l0040C296:
	Mem152[Mem148[esi_117 + 4<32>:word32] + 0x38<32>:byte] = 1<8>
	Mem155[Mem152[Mem152[esi_117 + 4<32>:word32] + 4<32>:word32] + 0x38<32>:byte] = 0<8>
	word32 eax_157 = Mem155[Mem155[esi_117 + 4<32>:word32] + 4<32>:word32]
	word32 ecx_158 = Mem155[eax_157 + 8<32>:word32]
	Mem160[eax_157 + 8<32>:word32] = Mem155[ecx_158:word32]
	word32 edx_161 = Mem160[ecx_158:word32]
	branch Mem160[edx_161 + 0x39<32>:byte] != 0<8> l0040C2BF
l0040C2BC:
	Mem164[edx_161 + 4<32>:word32] = eax_157
l0040C2BF:
	Mem169[ecx_158 + 4<32>:word32] = Mem166[eax_157 + 4<32>:word32]
	word32 edx_172 = Mem169[ecx + 4<32>:word32]
	branch eax_157 != Mem169[edx_172 + 4<32>:word32] l0040C2D2
l0040C2D2:
	word32 edx_175 = Mem169[eax_157 + 4<32>:word32]
	branch eax_157 != Mem169[edx_175:word32] l0040C2DD
l0040C2DD:
	Mem178[edx_175 + 8<32>:word32] = ecx_158
l0040C2D9:
	Mem179[edx_175:word32] = ecx_158
l0040C2CD:
	Mem180[edx_172 + 4<32>:word32] = ecx_158
l0040C2E0:
	Mem183[ecx_158:word32] = eax_157
	Mem184[eax_157 + 4<32>:word32] = ecx_158
l0040C272:
	Mem185[ecx_123 + 0x38<32>:byte] = 1<8>
	Mem186[edx_127 + 0x38<32>:byte] = 1<8>
	Mem189[Mem186[Mem186[eax_116:word32] + 4<32>:word32] + 0x38<32>:byte] = 0<8>
	esi_117 = Mem189[Mem189[eax_116:word32] + 4<32>:word32]
l0040C219:
	word32 edx_192 = Mem122[edx_124 + 8<32>:word32]
	branch Mem122[edx_192 + 0x38<32>:byte] != 0<8> l0040C23B
l0040C23B:
	branch esi_117 != Mem122[ecx_123 + 8<32>:word32] l0040C24A
l0040C240:
	fn0040A6F0(ecx, ecx_123)
	esi_117 = ecx_123
l0040C24A:
	Mem213[Mem210[esi_117 + 4<32>:word32] + 0x38<32>:byte] = 1<8>
	Mem216[Mem213[Mem213[esi_117 + 4<32>:word32] + 4<32>:word32] + 0x38<32>:byte] = 0<8>
	fn0040A740(ecx, Mem216[Mem216[esi_117 + 4<32>:word32] + 4<32>:word32])
l0040C222:
	Mem232[ecx_123 + 0x38<32>:byte] = 1<8>
	Mem233[edx_192 + 0x38<32>:byte] = 1<8>
	Mem236[Mem233[Mem233[eax_116:word32] + 4<32>:word32] + 0x38<32>:byte] = 0<8>
	esi_117 = Mem236[Mem236[eax_116:word32] + 4<32>:word32]
l0040C2E5:
	eax_116 = esi_117 + 4<32>
	branch Mem242[Mem242[esi_117 + 4<32>:word32] + 0x38<32>:byte] == 0<8> l0040C210
l0040C2F5:
	Mem260[Mem251[Mem251[ecx + 4<32>:word32] + 4<32>:word32] + 0x38<32>:byte] = 1<8>
	Mem274[dwArg04:word32] = eax_68
	Mem284[fs:0x00000000<p32>:word32] = eax_9
	return dwArg04
fn0040C130_exit:


void fn0040C630(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040C630
//      fn0040CA60
// MayUse:  fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp ebx edi esi esp
fn0040C630_entry:
l0040C630:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	word32 ebp_35 = dwArg04
	branch Mem32[dwArg04 + 0x39<32>:byte] != 0<8> l0040C6ED
l0040C66B:
l0040C674:
	fn0040C630(Mem38[ebp_35 + 8<32>:word32])
	ebp_35 = Mem43[ebp_35:word32]
	word32 edi_58 = Mem57[dwArg04 + 0x2C<32>:word32]
	branch edi_58 == 0<32> l0040C6C1
l0040C698:
	word32 ebx_63 = Mem61[dwArg04 + 0x30<32>:word32]
	branch edi_58 == ebx_63 l0040C6AF
l0040C69F:
l0040C6A0:
	~basic_string(edi_58)
	edi_58 = edi_58 + 0x1C<32>
	branch edi_58 != ebx_63 l0040C6A0
l0040C6AF:
	operator delete(Mem61[dwArg04 + 0x2C<32>:word32])
l0040C6C1:
	Mem89[dwArg04 + 0x2C<32>:word32] = 0<32>
	Mem90[dwArg04 + 0x30<32>:word32] = 0<32>
	Mem91[dwArg04 + 0x34<32>:word32] = 0<32>
	~basic_string(dwArg04 + 0xC<32>)
	operator delete(dwArg04)
	branch Mem96[ebp_35 + 0x39<32>:byte] == 0<8> l0040C670
l0040C670:
l0040C6ED:
	Mem112[fs:0x00000000<p32>:word32] = eax_9
	return
fn0040C630_exit:


word32 fn0040C710(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040C7F0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0040C710_entry:
l0040C710:
	word32 ecx_27
	word32 edi_21 = Mem20[ecx + 4<32>:word32]
	word32 esp_18 = fp - 20<i32>
	word32 esi_22 = Mem20[edi_21 + 4<32>:word32]
	byte al_24 = 1<8>
	ecx_27 = ecx
	branch Mem20[esi_22 + 0x39<32>:byte] != 0<8> l0040C755
l0040C72D:
	ecx_27 = ecx
l0040C730:
	word32 eax_29 = esi_22 + 0xC<32>
	word32 esp_31 = esp_18 - 4<i32>
	Mem32[esp_31:word32] = eax_29
	Mem35[esp_31 - 4<i32>:word32] = dwArg08
	word32 esp_40
	word32 eax_42
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:eax_29,ecx:ecx_37,Stack +000C:dwArg08
		defs: eax:eax_42,ecx:ecx_41,esp:esp_40
	al_24 = SLICE(eax_42, byte, 0) (alias)
	Mem50[esp_40 + 0x18<32>:byte] = al_24
	edi_21 = esi_22
	esp_18 = esp_40 + 8<32>
	branch al_24 == 0<8> l0040C74C
l0040C74C:
	esi_22 = Mem50[esi_22 + 8<32>:word32]
l0040C748:
	esi_22 = Mem50[esi_22:word32]
l0040C74F:
	branch Mem50[esi_22 + 0x39<32>:byte] == 0<8> l0040C730
l0040C755:
	word32 esi_64 = edi_21
	branch al_24 == 0<8> l0040C797
l0040C75F:
	branch edi_21 != Mem67[Mem67[ecx + 4<32>:word32]:word32] l0040C78A
l0040C78A:
	fn0040A5F0(fp + 8<32>)
	ecx_27 = fp + 8<32>
	esi_64 = dwArg08
l0040C797:
	word32 edx_83 = esi_64 + 0xC<32>
	word32 eax_102
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: ecx:ecx_92,edx:edx_83,Stack +0004:edx_83,Stack +0008:dwArg08,Stack +000C:dwArg08,Stack +0028:dwArg08
		defs: eax:eax_102
	branch SLICE(eax_102, byte, 0) == 0<8> l0040C7D0
l0040C7D0:
	Mem114[dwArg04:word32] = esi_64
	Mem119[dwArg04 + 4<32>:byte] = 0<8>
	return
l0040C7A9:
	Mem156[dwArg04:word32] = Mem133[fn0040C130(ecx, fp + 8<32>, 1<8>, edi_21, dwArg08):word32]
	Mem157[dwArg04 + 4<32>:byte] = 1<8>
	return
l0040C766:
	Mem188[dwArg04:word32] = Mem170[fn0040C130(ecx, fp + 8<32>, 1<8>, edi_21, dwArg08):word32]
	Mem189[dwArg04 + 4<32>:byte] = 1<8>
	return
fn0040C710_exit:


word32 fn0040C7F0(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040CAE0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0040C7F0_entry:
l0040C7F0:
	branch Mem7[ecx + 8<32>:word32] != 0<32> l0040C81E
l0040C81E:
	word32 eax_15 = Mem13[ecx + 4<32>:word32]
	branch dwArg08 != Mem19[eax_15:word32] l0040C861
l0040C861:
	branch dwArg08 != eax_15 l0040C8A0
l0040C8A0:
	word32 eax_35
	word32 ecx_34
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:dwArg08 + 0xC<32>,ecx:ecx,Stack +0004:dwArg0C,Stack +0008:dwArg08 + 0xC<32>,Stack +0028:dwArg04,Stack +002C:dwArg08,Stack +0030:dwArg0C
		defs: eax:eax_35,ecx:ecx_34
	branch SLICE(eax_35, byte, 0) == 0<8> l0040C90D
l0040C8B2:
	fn0040A5F0(fp + 0xC<32>)
	branch SLICE(CONVERT(fn004055D0(dwArg08 + 0xC<32>, dwArg0C, out ecx_34), uint8, uint32), byte, 0) == 0<8> l0040C90D
l0040C90D:
	word32 eax_84
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:dwArg08 + 0xC<32>,ecx:ecx_79,Stack +0004:dwArg08 + 0xC<32>,Stack +0008:dwArg0C,Stack +000C:dwArg08,Stack +0010:dwArg0C,Stack +0028:dwArg04,Stack +002C:dwArg08,Stack +0030:dwArg0C
		defs: eax:eax_84
	branch SLICE(eax_84, byte, 0) == 0<8> l0040C97F
l0040C91F:
	fn0040A650(fp + 0xC<32>)
	branch dwArg08 == Mem94[ecx + 4<32>:word32] l0040C945
l0040C935:
	word32 ecx_524
	branch SLICE(CONVERT(fn004055D0(dwArg0C, dwArg08 + 0xC<32>, out ecx_524), uint8, uint32), byte, 0) == 0<8> l0040C97F
l0040C945:
	branch Mem122[Mem122[dwArg08 + 8<32>:word32] + 0x39<32>:byte] == 0<8> l0040C96A
l0040C96A:
	fn0040C130(ecx, dwArg04, 1<8>, dwArg08, dwArg0C)
	return
l0040C955:
	fn0040C130(ecx, dwArg04, 0<8>, dwArg08, dwArg0C)
	return
l0040C8D3:
	branch Mem57[Mem57[dwArg08 + 8<32>:word32] + 0x39<32>:byte] == 0<8> l0040C8F8
l0040C8F8:
	fn0040C130(ecx, dwArg04, 1<8>, dwArg08, dwArg0C)
	return
l0040C8E3:
	fn0040C130(ecx, dwArg04, 0<8>, dwArg08, dwArg0C)
	return
l0040C865:
	word32 eax_244 = Mem24[eax_15 + 8<32>:word32]
	word32 eax_253
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:eax_244 + 0xC<32>,ecx:ecx,Stack +0004:eax_244 + 0xC<32>,Stack +0008:dwArg0C,Stack +0028:dwArg04,Stack +002C:dwArg08,Stack +0030:dwArg0C
		defs: eax:eax_253
	branch SLICE(eax_253, byte, 0) == 0<8> l0040C97F
l0040C87E:
	fn0040C130(ecx, dwArg04, 0<8>, Mem250[Mem250[ecx + 4<32>:word32] + 8<32>:word32], dwArg0C)
	return
l0040C82F:
	word32 eax_300
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: ecx:ecx,edx:dwArg08 + 0xC<32>,Stack +0004:dwArg0C,Stack +0008:dwArg08 + 0xC<32>,Stack +0028:dwArg04,Stack +002C:dwArg08,Stack +0030:dwArg0C
		defs: eax:eax_300
	branch SLICE(eax_300, byte, 0) == 0<8> l0040C97F
l0040C97F:
	Mem335[dwArg04:word32] = Mem315[fn0040C710(ecx, fp - 8<32>, dwArg0C):word32]
	return
l0040C845:
	fn0040C130(ecx, dwArg04, 1<8>, dwArg08, dwArg0C)
	return
l0040C7FD:
	fn0040C130(ecx, dwArg04, 1<8>, Mem13[ecx + 4<32>:word32], dwArg0C)
	return
fn0040C7F0_exit:


word32 fn0040CA60(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040CBA0
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn0040CA60_entry:
l0040CA60:
	word32 eax_12 = Mem9[ecx + 0x40<32>:word32]
	branch eax_12 == 0<32> l0040CA7C
l0040CA6B:
	fclose(eax_12)
	Mem21[ecx + 0x40<32>:word32] = 0<32>
l0040CA7C:
	fn00629600(Mem23[Mem23[ecx + 0x2C<32>:word32] + 4<32>:word32])
	word32 eax_38 = Mem29[ecx + 0x2C<32>:word32]
	Mem39[eax_38 + 4<32>:word32] = eax_38
	word32 eax_40 = Mem39[ecx + 0x2C<32>:word32]
	Mem41[ecx + 0x30<32>:word32] = 0<32>
	Mem42[eax_40:word32] = eax_40
	word32 esi_43 = Mem42[ecx + 0x2C<32>:word32]
	Mem44[esi_43 + 8<32>:word32] = esi_43
	word32 edx_45 = Mem44[ecx + 0x38<32>:word32]
	fn0040C630(Mem44[edx_45 + 4<32>:word32])
	word32 eax_60 = Mem49[ecx + 0x38<32>:word32]
	Mem61[eax_60 + 4<32>:word32] = eax_60
	word32 eax_62 = Mem61[ecx + 0x38<32>:word32]
	Mem63[ecx + 0x3C<32>:word32] = 0<32>
	Mem64[eax_62:word32] = eax_62
	word32 esi_65 = Mem64[ecx + 0x38<32>:word32]
	Mem68[esi_65 + 8<32>:word32] = esi_65
	return edx_45
fn0040CA60_exit:


word32 fn0040CAE0(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040CBA0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0040CAE0_entry:
l0040CAE0:
	word32 eax_127
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem32[fs:0<32>:word32] = fp - 0xC<32>
	word32 ebp_39
	word32 ebx_178
	word32 eax_38 = fn0040A6A0(ecx, dwArg04, out ebx_178, out ebp_39)
	word32 esp_45 = fp - 0x5C<32>
	branch eax_38 == Mem37[ecx + 4<32>:word32] l0040CB2C
l0040CB1A:
	word32 esp_54
	word32 eax_55
	call MSVCP80.dll!??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:eax_38 + 0xC<32>,ecx:ecx,Stack +0004:ebp_39,Stack +0008:eax_38 + 0xC<32>,Stack +006C:dwArg04
		defs: eax:eax_55,esp:esp_54
	esp_45 = esp_54 + 8<32>
	branch SLICE(eax_55, byte, 0) == 0<8> l0040CB85
l0040CB85:
	eax_127 = eax_38 + 0x28<32>
l0040CB2C:
	Mem70[esp_45 + 0x18<32>:word32] = 0<32>
	Mem71[esp_45 + 0x1C<32>:word32] = 0<32>
	Mem72[esp_45 + 0x20<32>:word32] = 0<32>
	word32 esp_74 = esp_45 - 4<i32>
	Mem75[esp_74:word32] = esp_45 + 0x14<32>
	Mem78[esp_74 - 4<i32>:word32] = ebp_39
	Mem80[esp_74 + 0x5C<32>:word32] = 0<32>
	Mem91[esp_74:word32] = fn0040BDA0(esp_74 + 0x28<32>, Mem80[esp_74 - 4<i32>:word32], Mem80[esp_74:word32])
	Mem94[esp_74 - 4<i32>:word32] = eax_38
	Mem97[esp_74 - 8<i32>:word32] = esp_74 + 0x64<32>
	Mem100[esp_74 + 0x5C<32>:byte] = 1<8>
	word32 esi_109 = Mem100[fn0040C7F0(ecx, Mem100[esp_74 - 8<i32>:word32], Mem100[esp_74 - 4<i32>:word32], Mem100[esp_74:word32]):word32]
	Mem112[esp_74 + 0x5C<32>:byte] = 0<8>
	fn0040BD40(esp_74 + 0x28<32>)
	Mem120[esp_74 + 0x5C<32>:word32] = 0xFFFFFFFF<32>
	fn00403900(esp_74 + 0x18<32>)
	eax_127 = esi_109 + 0x28<32>
l0040CB88:
	Mem132[fs:0x00000000<p32>:word32] = eax_9
	return eax_127
fn0040CAE0_exit:


void fn0040CBA0(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040D620
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0040CBA0_entry:
l0040CBA0:
	word32 eax_855
	word32 eax_9 = Mem7[fs:0<32>:word32]
	word32 eax_14 = Mem11[0x00A14188<p32>:word32] ^ fp - 0x4F8<32>
	Mem33[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(fp - 0x464<32>)
	basic_string(fp - 0x448<32>)
	basic_string(fp - 0x42C<32>)
	basic_string(fp - 0x4DC<32>, 0x8A698F<32>)
	word32 edx_123 = fn004085A0(fn0040CAE0(ecx + 0x34<32>, fp - 0x4DC<32>), fp - 0x4F4<32>)
	~basic_string(fp - 0x4DC<32>)
	word32 eax_90 = fopen(c_str(dwArg04), 0x8A7744<32>)
	Mem93[ecx + 0x40<32>:word32] = eax_90
	word32 ebx_157 = dwArg04
	branch eax_90 == 0<32> l0040CCBF
l0040CC90:
	branch fseek(eax_90, 0xFFFFFFEA<32>, 2<32>) == 0<32> l0040CD19
l0040CD19:
	branch fread(fp - 0x4BC<32>, 0x16<32>, 1<32>, Mem100[ecx + 0x40<32>:word32]) == 1<32> l0040CDAD
l0040CDAD:
	branch dwLoc04BC == 0x6054B50<32> l0040CE2E
l0040CE2E:
	edx_123 = dwLoc04AC
	word32 esp_132 = fp - 0x50C<32>
	branch fseek(Mem116[ecx + 0x40<32>:word32], dwLoc04AC, 0<32>) == 0<32> l0040CEBC
l0040CEBC:
	branch wLoc04B2 <=u 0<16> l0040D21E
l0040CECB:
	word32 esp_144 = esp_132 - 4<i32>
	Mem145[esp_144:word32] = Mem141[ecx + 0x40<32>:word32]
	Mem147[esp_144 - 4<i32>:word32] = 1<32>
	Mem150[esp_144 - 8<i32>:word32] = 0x2E<32>
	Mem152[esp_144 - 12<i32>:word32] = esp_144 + 0x6C<32>
	branch fread(Mem152[esp_144 - 12<i32>:(ptr32 void)], Mem152[esp_144 - 8<i32>:size_t], Mem152[esp_144 - 4<i32>:size_t], Mem152[esp_144:(ptr32 FILE)]) != 1<32> l0040D29D
l0040D29D:
	Mem161[esp_144:word32] = c_str(ebx_157)
	Mem163[esp_144 - 4<i32>:word32] = 0x8A75B0<32>
	fn00520C80()
	edx_123 = fn0040CA60(ecx)
	Mem176[esp_144 + 0x50C<32>:byte] = 2<8>
	word24 eax_24_8_866 = SLICE(fn00403900(esp_144 + 0x1C<32>), word24, 8)
	Mem184[esp_144 + 0x50C<32>:byte] = 1<8>
	~basic_string(esp_144 + 0xE4<32>)
	Mem186[esp_144 + 0x50C<32>:byte] = 0<8>
	~basic_string(esp_144 + 0xC8<32>)
	Mem188[esp_144 + 0x50C<32>:word32] = 0xFFFFFFFF<32>
	~basic_string(esp_144 + 0xAC<32>)
	eax_855 = SEQ(eax_24_8_866, 0<8>) (alias)
l0040CEE6:
	branch Mem152[esp_144 + 0x6C<32>:word32] != 0x2014B50<32> l0040D314
l0040D314:
	Mem197[esp_144:word32] = c_str(ebx_157)
	Mem199[esp_144 - 4<i32>:word32] = 0x8A7568<32>
	fn00520C80()
	edx_123 = fn0040CA60(ecx)
	Mem211[esp_144 + 0x50C<32>:byte] = 2<8>
	word24 eax_24_8_874 = SLICE(fn00403900(esp_144 + 0x1C<32>), word24, 8)
	Mem219[esp_144 + 0x50C<32>:byte] = 1<8>
	~basic_string(esp_144 + 0xE4<32>)
	Mem221[esp_144 + 0x50C<32>:byte] = 0<8>
	~basic_string(esp_144 + 0xC8<32>)
	Mem223[esp_144 + 0x50C<32>:word32] = 0xFFFFFFFF<32>
	~basic_string(esp_144 + 0xAC<32>)
	eax_855 = SEQ(eax_24_8_874, 0<8>) (alias)
l0040CEF4:
	word16 ax_227 = Mem152[esp_144 + 0x88<32>:word16]
	branch ax_227 >u 0x400<16> l0040D38B
l0040D38B:
	Mem235[esp_144:word32] = c_str(ebx_157)
	Mem237[esp_144 - 4<i32>:word32] = 0x8A752C<32>
	fn00520C80()
	edx_123 = fn0040CA60(ecx)
	Mem249[esp_144 + 0x50C<32>:byte] = 2<8>
	word24 eax_24_8_868 = SLICE(fn00403900(esp_144 + 0x1C<32>), word24, 8)
	Mem257[esp_144 + 0x50C<32>:byte] = 1<8>
	~basic_string(esp_144 + 0xE4<32>)
	Mem259[esp_144 + 0x50C<32>:byte] = 0<8>
	~basic_string(esp_144 + 0xC8<32>)
	Mem261[esp_144 + 0x50C<32>:word32] = 0xFFFFFFFF<32>
	~basic_string(esp_144 + 0xAC<32>)
	eax_855 = SEQ(eax_24_8_868, 0<8>) (alias)
l0040CF0A:
	branch Mem152[esp_144 + 0x8A<32>:word16] >u 0x400<16> l0040D402
l0040D402:
	Mem270[esp_144:word32] = c_str(ebx_157)
	Mem272[esp_144 - 4<i32>:word32] = 0x8A74EC<32>
	fn00520C80()
	edx_123 = fn0040CA60(ecx)
	Mem284[esp_144 + 0x50C<32>:byte] = 2<8>
	word24 eax_24_8_872 = SLICE(fn00403900(esp_144 + 0x1C<32>), word24, 8)
	Mem292[esp_144 + 0x50C<32>:byte] = 1<8>
	~basic_string(esp_144 + 0xE4<32>)
	Mem294[esp_144 + 0x50C<32>:byte] = 0<8>
	~basic_string(esp_144 + 0xC8<32>)
	Mem296[esp_144 + 0x50C<32>:word32] = 0xFFFFFFFF<32>
	~basic_string(esp_144 + 0xAC<32>)
	eax_855 = SEQ(eax_24_8_872, 0<8>) (alias)
l0040CF18:
	branch Mem152[esp_144 + 0x8C<32>:word16] >u 0x400<16> l0040D479
l0040D479:
	Mem305[esp_144:word32] = c_str(ebx_157)
	Mem307[esp_144 - 4<i32>:word32] = 0x8A74AC<32>
	fn00520C80()
	edx_123 = fn0040CA60(ecx)
	Mem319[esp_144 + 0x50C<32>:byte] = 2<8>
	word24 eax_24_8_870 = SLICE(fn00403900(esp_144 + 0x1C<32>), word24, 8)
	Mem327[esp_144 + 0x50C<32>:byte] = 1<8>
	~basic_string(esp_144 + 0xE4<32>)
	Mem329[esp_144 + 0x50C<32>:byte] = 0<8>
	~basic_string(esp_144 + 0xC8<32>)
	Mem331[esp_144 + 0x50C<32>:word32] = 0xFFFFFFFF<32>
	~basic_string(esp_144 + 0xAC<32>)
	eax_855 = SEQ(eax_24_8_870, 0<8>) (alias)
l0040CF26:
	Mem337[esp_144:word32] = Mem152[ecx + 0x40<32>:word32]
	Mem340[esp_144 - 4<i32>:word32] = 1<32>
	Mem342[esp_144 - 8<i32>:word32] = CONVERT(ax_227, word16, word32)
	Mem345[esp_144 - 12<i32>:word32] = esp_144 + 0x100<32>
	fread(Mem345[esp_144 - 12<i32>:(ptr32 void)], Mem345[esp_144 - 8<i32>:size_t], Mem345[esp_144 - 4<i32>:size_t], Mem345[esp_144:(ptr32 FILE)])
	Mem351[esp_144:word32] = CONVERT(Mem345[esp_144 + 0x88<32>:word16], word16, word32)
	Mem354[esp_144 - 4<i32>:word32] = esp_144 + 0x100<32>
	assign(esp_144 + 0xAC<32>, Mem354[esp_144 - 4<i32>:(ptr32 charconst )], Mem354[esp_144:uint32])
	Mem360[esp_144:word32] = esp_144 + 0x9C<32>
	Mem362[esp_144 + 0x1A<32>:byte] = 0x2F<8>
	Mem363[esp_144 + 0x1B<32>:byte] = 0x5C<8>
	byte al_364 = CONVERT(end(esp_144 + 0xAC<32>), _String_iterator, uint8)
	Mem367[esp_144 - 4<i32>:word32] = esp_144 + 0xA0<32>
	byte al_372 = CONVERT(begin(esp_144 + 0xA8<32>), _String_iterator, uint8)
	Mem375[esp_144 - 8<i32>:word32] = esp_144 + 0x12<32>
	word24 eax_24_8_369 = SLICE(esp_144 + 0x9C<32>, word24, 8)
	word32 eax_370 = SEQ(eax_24_8_369, al_364)
	word32 edx_376 = Mem375[eax_370 + 4<32>:word32]
	Mem379[esp_144 - 12<i32>:word32] = esp_144 + 0x13<32>
	word32 ecx_380 = Mem379[eax_370:word32]
	Mem382[esp_144 - 16<i32>:word32] = edx_376
	word32 eax_383 = SEQ(eax_24_8_369, al_372)
	word32 edx_384 = Mem382[eax_383 + 4<32>:word32]
	word32 eax_385 = Mem382[eax_383:word32]
	Mem387[esp_144 - 20<i32>:word32] = ecx_380
	Mem389[esp_144 - 24<i32>:word32] = edx_384
	Mem391[esp_144 - 28<i32>:word32] = eax_385
	fn00402230(Mem391[esp_144 - 24<i32>:word32], Mem391[esp_144 - 16<i32>:word32], Mem391[esp_144 - 12<i32>:word32], Mem391[esp_144 - 8<i32>:word32])
	word32 edx_399 = CONVERT(Mem391[esp_144 + 0x82<32>:word16], word16, word32)
	Mem401[esp_144 - 32<i32>:word32] = Mem391[ecx + 0x40<32>:word32]
	Mem403[esp_144 - 36<i32>:word32] = 1<32>
	Mem405[esp_144 - 40<i32>:word32] = edx_399
	Mem408[esp_144 - 44<i32>:word32] = esp_144 + 0xF8<32>
	fread(Mem408[esp_144 - 44<i32>:(ptr32 void)], Mem408[esp_144 - 40<i32>:size_t], Mem408[esp_144 - 36<i32>:size_t], Mem408[esp_144 - 32<i32>:(ptr32 FILE)])
	word32 edx_411 = CONVERT(Mem408[esp_144 + 0x84<32>:word16], word16, word32)
	Mem413[esp_144 - 48<i32>:word32] = Mem408[ecx + 0x40<32>:word32]
	Mem415[esp_144 - 52<i32>:word32] = 1<32>
	Mem417[esp_144 - 56<i32>:word32] = edx_411
	Mem420[esp_144 - 60<i32>:word32] = esp_144 + 0xF8<32>
	fread(Mem420[esp_144 - 60<i32>:(ptr32 void)], Mem420[esp_144 - 56<i32>:size_t], Mem420[esp_144 - 52<i32>:size_t], Mem420[esp_144 - 48<i32>:(ptr32 FILE)])
	word32 eax_424 = length(esp_144 + 0xA4<32>)
	Mem426[esp_144 - 8<32>:word32] = esp_144 + 0xA4<32>
	Mem429[esp_144 - 8<32>:word32] = eax_424 - 1<32>
	Mem431[esp_144 + 0x48<32>:word32] = esp_144 - 8<32>
	branch Mem431[operator [](esp_144 + 0xA4<32>, Mem431[esp_144 - 8<32>:_Size_type_nosscl]):byte] != 0x2F<8> l0040D079
l0040D00E:
	Mem439[esp_144 - 0xC<32>:word32] = Mem431[&npos:word32]
	Mem445[esp_144 - 0x10<32>:word32] = length(esp_144 + 0xA0<32>) - 1<32>
	erase(esp_144 + 0xA0<32>, Mem445[esp_144 - 0x10<32>:uint32], Mem445[esp_144 - 0xC<32>:uint32])
	Mem451[esp_144 - 0xC<32>:word32] = esp_144 + 0xA0<32>
	Mem454[esp_144 - 0x10<32>:word32] = esp_144 + 0x28<32>
	word32 edx_1050
	word32 eax_455 = fn0040A480(Mem454[esp_144 - 0x10<32>:word32], Mem454[esp_144 - 0xC<32>:word32], out edx_1050)
	Mem466[esp_144 - 0xC<32>:word32] = esp_144 + 0x10<32>
	Mem468[esp_144 - 0x10<32>:word32] = eax_455
	Mem470[esp_144 + 0x500<32>:byte] = 5<8>
	fn004085A0(fn0040CAE0(ecx + 0x34<32>, Mem470[esp_144 - 0x10<32>:word32]), Mem470[esp_144 - 0xC<32>:word32])
	Mem489[esp_144 + 0x500<32>:byte] = 3<8>
	~basic_string(esp_144 + 0x28<32>)
l0040D079:
	word32 esp_582
	word32 esp_490 = esp_132 - 0xC<32>
	Mem493[esp_490 - 4<i32>:word32] = esp_490 + 0xA8<32>
	Mem496[esp_490 - 8<i32>:word32] = esp_490 + 0x30<32>
	word32 edx_1049
	Mem507[esp_490 - 4<i32>:word32] = fn0040A480(Mem496[esp_490 - 8<i32>:word32], Mem496[esp_490 - 4<i32>:word32], out edx_1049)
	Mem510[esp_490 + 0x508<32>:byte] = 6<8>
	Mem523[fn0040BC80(ecx + 0x28<32>, Mem510[esp_490 - 4<i32>:word32]):word32] = Mem510[esp_490 + 0x92<32>:word32]
	Mem524[esp_490 + 0x508<32>:byte] = 3<8>
	~basic_string(esp_490 + 0x30<32>)
	Mem530[esp_490 - 4<i32>:word32] = Mem524[&npos:word32]
	Mem532[esp_490 - 8<i32>:word32] = 0x2F<32>
	word32 eax_534 = rfind(esp_490 + 0xA8<32>, Mem532[esp_490 - 8<i32>:charconst ], Mem532[esp_490 - 4<i32>:uint32])
	branch eax_534 != 0xFFFFFFFF<32> l0040D104
l0040D104:
	Mem540[esp_490 - 4<i32>:word32] = eax_534
	Mem542[esp_490 - 8<i32>:word32] = 0<32>
	Mem545[esp_490 - 12<i32>:word32] = esp_490 + 0x30<32>
	Mem552[esp_490 - 8<i32>:word32] = SEQ(SLICE(esp_490 + 0x30<32>, word24, 8), CONVERT(substr(esp_490 + 0xA8<32>, Mem545[esp_490 - 12<i32>:uint32], Mem545[esp_490 - 8<i32>:uint32]), basic_string, uint8))
	Mem554[esp_490 + 0x504<32>:byte] = 7<8>
	operator =(esp_490 + 0xC0<32>, Mem554[esp_490 - 8<i32>:(ptr32 basic_string)])
	Mem558[esp_490 + 0x504<32>:byte] = 3<8>
	~basic_string(esp_490 + 0x2C<32>)
	Mem564[esp_490 - 8<i32>:word32] = Mem558[&npos:word32]
	Mem568[esp_490 - 12<i32>:word32] = eax_534 + 1<32>
	Mem571[esp_490 - 16<i32>:word32] = esp_490 + 0x2C<32>
	Mem578[esp_490 - 0xC<32>:word32] = SEQ(SLICE(esp_490 + 0x2C<32>, word24, 8), CONVERT(substr(esp_490 + 0xA4<32>, Mem571[esp_490 - 16<i32>:uint32], Mem571[esp_490 - 12<i32>:uint32]), basic_string, uint8))
	Mem580[esp_490 + 0x500<32>:byte] = 8<8>
	operator =(esp_490 + 0xD8<32>, Mem580[esp_490 - 0xC<32>:(ptr32 basic_string)])
	Mem584[esp_490 + 0x500<32>:byte] = 3<8>
	~basic_string(esp_490 + 0x28<32>)
	esp_582 = esp_490 - 8<32>
l0040D0D8:
	Mem586[esp_490 - 4<i32>:word32] = 0x8A698F<32>
	operator =(esp_490 + 0xC4<32>, Mem586[esp_490 - 4<i32>:(ptr32 charconst )])
	Mem592[esp_490 - 4<i32>:word32] = esp_490 + 0xA8<32>
	operator =(esp_490 + 0xE0<32>, Mem592[esp_490 - 4<i32>:(ptr32 basic_string)])
	esp_582 = esp_490
l0040D188:
	word32 esp_598 = esp_582 - 4<i32>
	Mem599[esp_598:word32] = esp_582 + 0xC4<32>
	Mem602[esp_598 - 4<i32>:word32] = esp_598 + 0x34<32>
	Mem613[esp_598:word32] = fn0040A480(Mem602[esp_598 - 4<i32>:word32], Mem602[esp_598:word32], out edx_123)
	Mem616[esp_598 - 4<i32>:word32] = esp_598 + 0x30<32>
	Mem619[esp_598 + 0x50C<32>:byte] = 9<8>
	ebx_157 = fn0040AB30(ecx + 0x34<32>, Mem619[esp_598 - 4<i32>:word32], Mem619[esp_598:word32])
	Mem630[esp_598 + 0x50C<32>:byte] = 3<8>
	~basic_string(esp_598 + 0x34<32>)
	word32 ecx_632 = Mem630[esp_598 + 0x30<32>:word32]
	branch ecx_632 != Mem630[ecx + 0x38<32>:word32] l0040D1F6
l0040D1F6:
	Mem637[esp_598:word32] = esp_598 + 0xE4<32>
	edx_123 = fn00403ED0(ecx_632 + 0x28<32>, es, ds, Mem637[esp_598:word32])
l0040D1D0:
	Mem667[esp_598:word32] = c_str(ebx_157)
	Mem671[esp_598 - 4<i32>:word32] = c_str(esp_598 + 0xC8<32>)
	Mem673[esp_598 - 8<i32>:word32] = 0x8A75F8<32>
	fn00520C80()
l0040D206:
	word32 eax_678 = Mem677[esp_582 + 0x28<32>:word32]
	word32 ecx_679 = CONVERT(Mem677[esp_582 + 0x5A<32>:word16], word16, word32)
	Mem682[esp_582 + 0x28<32>:word32] = eax_678 + 1<32>
	esp_132 = esp_582
	branch eax_678 + 1<32> <u ecx_679 l0040CECB
l0040D21E:
	Mem686[esp_132 + 0x508<32>:byte] = 2<8>
	word24 eax_24_8_864 = SLICE(fn00403900(esp_132 + 0x18<32>), word24, 8)
	Mem694[esp_132 + 0x508<32>:byte] = 1<8>
	~basic_string(esp_132 + 0xE0<32>)
	Mem696[esp_132 + 0x508<32>:byte] = 0<8>
	~basic_string(esp_132 + 0xC4<32>)
	Mem698[esp_132 + 0x508<32>:word32] = 0xFFFFFFFF<32>
	~basic_string(esp_132 + 0xA8<32>)
	eax_855 = SEQ(eax_24_8_864, 1<8>) (alias)
l0040CE45:
	c_str(dwArg04)
	fn00520C80()
	edx_123 = fn0040CA60(ecx)
	word24 eax_24_8_862 = SLICE(fn00403900(fp - 0x4F4<32>), word24, 8)
	~basic_string(fp - 0x42C<32>)
	~basic_string(fp - 0x448<32>)
	~basic_string(fp - 0x464<32>)
	eax_855 = SEQ(eax_24_8_862, 0<8>) (alias)
l0040CDB7:
	c_str(dwArg04)
	fn00520C80()
	edx_123 = fn0040CA60(ecx)
	word24 eax_24_8_860 = SLICE(fn00403900(fp - 0x4F4<32>), word24, 8)
	~basic_string(fp - 0x42C<32>)
	~basic_string(fp - 0x448<32>)
	~basic_string(fp - 0x464<32>)
	eax_855 = SEQ(eax_24_8_860, 0<8>) (alias)
l0040CD36:
	c_str(dwArg04)
	fn00520C80()
	edx_123 = fn0040CA60(ecx)
	word24 eax_24_8_858 = SLICE(fn00403900(fp - 0x4F4<32>), word24, 8)
	~basic_string(fp - 0x42C<32>)
	~basic_string(fp - 0x448<32>)
	~basic_string(fp - 0x464<32>)
	eax_855 = SEQ(eax_24_8_858, 0<8>) (alias)
l0040CCA2:
	c_str(dwArg04)
	fn00520C80()
	edx_123 = fn0040CA60(ecx)
l0040CCBF:
	word24 eax_24_8_856 = SLICE(fn00403900(fp - 0x4F4<32>), word24, 8)
	~basic_string(fp - 0x42C<32>)
	~basic_string(fp - 0x448<32>)
	~basic_string(fp - 0x464<32>)
	eax_855 = SEQ(eax_24_8_856, 0<8>) (alias)
l0040D273:
	Mem840[fs:0x00000000<p32>:word32] = eax_9
	word32 ecx_1048
	fn00694B8E(eax_855, eax_14 ^ fp - 1272<i32>, edx_123, ebx, ebp, esi, edi, es, ds, ebx, out ecx_1048)
	return
fn0040CBA0_exit:


word32 fn0040D620(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004023A0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0040D620_entry:
l0040D620:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	Mem44[ecx:word32] = 0x8A7748<32>
	Mem48[ecx + 4<32>:word32] = CreateMutexA(0<32>, 0<32>, 0<32>)
	Mem50[ecx + 8<32>:byte] = 0<8>
	basic_string(ecx + 0xC<32>, dwArg04)
	word32 eax_61 = fn00811B80()
	Mem67[ecx + 0x2C<32>:word32] = eax_61
	Mem68[eax_61 + 0x2D<32>:byte] = 1<8>
	word32 eax_69 = Mem68[ecx + 0x2C<32>:word32]
	Mem70[eax_69 + 4<32>:word32] = eax_69
	word32 eax_71 = Mem70[ecx + 0x2C<32>:word32]
	Mem72[eax_71:word32] = eax_71
	word32 eax_73 = Mem72[ecx + 0x2C<32>:word32]
	Mem74[eax_73 + 8<32>:word32] = eax_73
	Mem75[ecx + 0x30<32>:word32] = 0<32>
	word32 eax_79 = fn0040A850()
	Mem85[ecx + 0x38<32>:word32] = eax_79
	Mem86[eax_79 + 0x39<32>:byte] = 1<8>
	word32 eax_87 = Mem86[ecx + 0x38<32>:word32]
	Mem88[eax_87 + 4<32>:word32] = eax_87
	word32 eax_89 = Mem88[ecx + 0x38<32>:word32]
	Mem90[eax_89:word32] = eax_89
	word32 eax_91 = Mem90[ecx + 0x38<32>:word32]
	Mem92[eax_91 + 8<32>:word32] = eax_91
	Mem93[ecx + 0x3C<32>:word32] = 0<32>
	Mem95[ecx + 0x40<32>:word32] = 0<32>
	WaitForSingleObject(Mem95[ecx + 4<32>:word32], 0xFFFFFFFF<32>)
	Mem104[ecx + 8<32>:byte] = 1<8>
	fn0040CBA0(ecx, 0<32>, ecx + 4<32>, ecx, ecx + 4<32>, es, ds, dwArg04)
	word32 eax_125 = Mem109[ecx + 4<32>:word32]
	Mem128[ecx + 8<32>:byte] = 0<8>
	ReleaseMutex(eax_125)
	Mem133[fs:0x00000000<p32>:word32] = eax_9
	return ecx
fn0040D620_exit:


word32 fn0040D910(word32 ecx, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn007B2480
// MayUse:  ecx:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax edx Top
// Preserved: esp
fn0040D910_entry:
l0040D910:
	word32 edx_6 = Mem0[ecx + 4<32>:word32]
	branch edx_6 != 0<32> l0040D91A
l0040D91A:
	word32 eax_12 = Mem0[ecx + 8<32>:word32] - edx_6 >> 2<32>
	edxOut = <invalid>
	return eax_12
l0040D917:
	edxOut = <invalid>
	return 0<32>
fn0040D910_exit:


word32 fn0040D930(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403950
//      fn004085A0
// MayUse:  ecx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn0040D930_entry:
l0040D930:
	word32 eax_6 = Mem0[ecx + 4<32>:word32]
	branch eax_6 != 0<32> l0040D938
l0040D938:
	word32 ecx_11 = Mem0[ecx + 8<32>:word32] - eax_6
	word32 edx_15 = SLICE(ecx_11 *s64 0x92492493<32>, word32, 32) + ecx_11
	return (edx_15 >> 4<32> >>u 0x1F<32>) + (edx_15 >> 4<32>)
l0040D937:
	return eax_6
fn0040D930_exit:


word32 fn0040D9C0(word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00414B80
// MayUse:  fs:[0..15] Stack +0004:[0..31]
// LiveOut: ecx edx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn0040D9C0_entry:
l0040D9C0:
	Mem20[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(fp - 0x50<32>, 0x8A6998<32>)
	fn004019E0(fp - 0x34<32>, fp - 0x50<32>)
	word32 esp_44
	call CxxThrowException (retsize: 4;)
		uses: ecx:fp - 0x34<32>,Stack +0004:fp - 0x34<32>,Stack +0008:0x999C68<32>,Stack +002C:0x990030<32>
		defs: esp:esp_44
	int3()
	Mem50[esp_44 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem52[esp_44 - 8<i32>:word32] = 0x82CB39<32>
	Mem55[esp_44 - 12<i32>:word32] = Mem52[fs:0<32>:word32]
	Mem62[esp_44 - 0x54<32>:word32] = Mem55[0x00A14188<p32>:word32] ^ esp_44 - 0x50<32>
	Mem64[fs:0<32>:word32] = esp_44 - 0xC<32>
	Mem66[esp_44 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_44 - 0x50<32>, Mem66[esp_44 - 0x58<32>:(ptr32 charconst )])
	Mem72[esp_44 - 0x58<32>:word32] = esp_44 - 0x50<32>
	Mem74[esp_44 - 4<32>:word32] = 0<32>
	fn004019E0(esp_44 - 0x34<32>, Mem74[esp_44 - 0x58<32>:word32])
	Mem83[esp_44 - 0x58<32>:word32] = 0x999C68<32>
	Mem86[esp_44 - 0x5C<32>:word32] = esp_44 - 0x34<32>
	Mem87[esp_44 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_88
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_44 - 0x34<32>
		defs: esp:esp_88
	int3()
	Mem94[esp_88 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem96[esp_88 - 8<i32>:word32] = 0x82CB69<32>
	Mem99[esp_88 - 12<i32>:word32] = Mem96[fs:0<32>:word32]
	Mem106[esp_88 - 0x54<32>:word32] = Mem99[0x00A14188<p32>:word32] ^ esp_88 - 0x50<32>
	Mem108[fs:0<32>:word32] = esp_88 - 0xC<32>
	Mem110[esp_88 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_88 - 0x50<32>, Mem110[esp_88 - 0x58<32>:(ptr32 charconst )])
	Mem116[esp_88 - 0x58<32>:word32] = esp_88 - 0x50<32>
	Mem118[esp_88 - 4<32>:word32] = 0<32>
	fn004019E0(esp_88 - 0x34<32>, Mem118[esp_88 - 0x58<32>:word32])
	Mem127[esp_88 - 0x58<32>:word32] = 0x999C68<32>
	Mem130[esp_88 - 0x5C<32>:word32] = esp_88 - 0x34<32>
	Mem131[esp_88 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_132
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_88 - 0x34<32>
		defs: esp:esp_132
	int3()
	Mem138[esp_132 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem140[esp_132 - 8<i32>:word32] = 0x82CB99<32>
	Mem143[esp_132 - 12<i32>:word32] = Mem140[fs:0<32>:word32]
	Mem150[esp_132 - 0x54<32>:word32] = Mem143[0x00A14188<p32>:word32] ^ esp_132 - 0x50<32>
	Mem152[fs:0<32>:word32] = esp_132 - 0xC<32>
	Mem154[esp_132 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_132 - 0x50<32>, Mem154[esp_132 - 0x58<32>:(ptr32 charconst )])
	Mem160[esp_132 - 0x58<32>:word32] = esp_132 - 0x50<32>
	Mem162[esp_132 - 4<32>:word32] = 0<32>
	fn004019E0(esp_132 - 0x34<32>, Mem162[esp_132 - 0x58<32>:word32])
	Mem171[esp_132 - 0x58<32>:word32] = 0x999C68<32>
	Mem174[esp_132 - 0x5C<32>:word32] = esp_132 - 0x34<32>
	Mem175[esp_132 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_176
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_132 - 0x34<32>
		defs: esp:esp_176
	int3()
	Mem182[esp_176 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem184[esp_176 - 8<i32>:word32] = 0x82CBC9<32>
	Mem187[esp_176 - 12<i32>:word32] = Mem184[fs:0<32>:word32]
	Mem194[esp_176 - 0x54<32>:word32] = Mem187[0x00A14188<p32>:word32] ^ esp_176 - 0x50<32>
	Mem196[fs:0<32>:word32] = esp_176 - 0xC<32>
	Mem198[esp_176 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_176 - 0x50<32>, Mem198[esp_176 - 0x58<32>:(ptr32 charconst )])
	Mem204[esp_176 - 0x58<32>:word32] = esp_176 - 0x50<32>
	Mem206[esp_176 - 4<32>:word32] = 0<32>
	fn004019E0(esp_176 - 0x34<32>, Mem206[esp_176 - 0x58<32>:word32])
	Mem215[esp_176 - 0x58<32>:word32] = 0x999C68<32>
	Mem218[esp_176 - 0x5C<32>:word32] = esp_176 - 0x34<32>
	Mem219[esp_176 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_220
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_176 - 0x34<32>
		defs: esp:esp_220
	int3()
	Mem226[esp_220 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem228[esp_220 - 8<i32>:word32] = 0x82CBF9<32>
	Mem231[esp_220 - 12<i32>:word32] = Mem228[fs:0<32>:word32]
	Mem238[esp_220 - 0x54<32>:word32] = Mem231[0x00A14188<p32>:word32] ^ esp_220 - 0x50<32>
	Mem240[fs:0<32>:word32] = esp_220 - 0xC<32>
	Mem242[esp_220 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_220 - 0x50<32>, Mem242[esp_220 - 0x58<32>:(ptr32 charconst )])
	Mem248[esp_220 - 0x58<32>:word32] = esp_220 - 0x50<32>
	Mem250[esp_220 - 4<32>:word32] = 0<32>
	fn004019E0(esp_220 - 0x34<32>, Mem250[esp_220 - 0x58<32>:word32])
	Mem259[esp_220 - 0x58<32>:word32] = 0x999C68<32>
	Mem262[esp_220 - 0x5C<32>:word32] = esp_220 - 0x34<32>
	Mem263[esp_220 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_264
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_220 - 0x34<32>
		defs: esp:esp_264
	int3()
	Mem270[esp_264 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem272[esp_264 - 8<i32>:word32] = 0x82CC29<32>
	Mem275[esp_264 - 12<i32>:word32] = Mem272[fs:0<32>:word32]
	Mem282[esp_264 - 0x54<32>:word32] = Mem275[0x00A14188<p32>:word32] ^ esp_264 - 0x50<32>
	Mem284[fs:0<32>:word32] = esp_264 - 0xC<32>
	Mem286[esp_264 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_264 - 0x50<32>, Mem286[esp_264 - 0x58<32>:(ptr32 charconst )])
	Mem292[esp_264 - 0x58<32>:word32] = esp_264 - 0x50<32>
	Mem294[esp_264 - 4<32>:word32] = 0<32>
	fn004019E0(esp_264 - 0x34<32>, Mem294[esp_264 - 0x58<32>:word32])
	Mem303[esp_264 - 0x58<32>:word32] = 0x999C68<32>
	Mem306[esp_264 - 0x5C<32>:word32] = esp_264 - 0x34<32>
	Mem307[esp_264 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_308
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_264 - 0x34<32>
		defs: esp:esp_308
	int3()
	Mem314[esp_308 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem316[esp_308 - 8<i32>:word32] = 0x82CC59<32>
	Mem319[esp_308 - 12<i32>:word32] = Mem316[fs:0<32>:word32]
	Mem326[esp_308 - 0x54<32>:word32] = Mem319[0x00A14188<p32>:word32] ^ esp_308 - 0x50<32>
	Mem328[fs:0<32>:word32] = esp_308 - 0xC<32>
	Mem330[esp_308 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_308 - 0x50<32>, Mem330[esp_308 - 0x58<32>:(ptr32 charconst )])
	Mem336[esp_308 - 0x58<32>:word32] = esp_308 - 0x50<32>
	Mem338[esp_308 - 4<32>:word32] = 0<32>
	fn004019E0(esp_308 - 0x34<32>, Mem338[esp_308 - 0x58<32>:word32])
	Mem347[esp_308 - 0x58<32>:word32] = 0x999C68<32>
	Mem350[esp_308 - 0x5C<32>:word32] = esp_308 - 0x34<32>
	Mem351[esp_308 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_352
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_308 - 0x34<32>
		defs: esp:esp_352
	int3()
	Mem358[esp_352 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem360[esp_352 - 8<i32>:word32] = 0x82CC89<32>
	Mem363[esp_352 - 12<i32>:word32] = Mem360[fs:0<32>:word32]
	Mem370[esp_352 - 0x54<32>:word32] = Mem363[0x00A14188<p32>:word32] ^ esp_352 - 0x50<32>
	Mem372[fs:0<32>:word32] = esp_352 - 0xC<32>
	Mem374[esp_352 - 0x58<32>:word32] = 0x8A7778<32>
	basic_string(esp_352 - 0x50<32>, Mem374[esp_352 - 0x58<32>:(ptr32 charconst )])
	Mem380[esp_352 - 0x58<32>:word32] = esp_352 - 0x50<32>
	Mem382[esp_352 - 4<32>:word32] = 0<32>
	fn004019E0(esp_352 - 0x34<32>, Mem382[esp_352 - 0x58<32>:word32])
	Mem391[esp_352 - 0x58<32>:word32] = 0x999C68<32>
	Mem394[esp_352 - 0x5C<32>:word32] = esp_352 - 0x34<32>
	Mem395[esp_352 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_396
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_352 - 0x34<32>
		defs: esp:esp_396
	int3()
	Mem402[esp_396 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem404[esp_396 - 8<i32>:word32] = 0x82CCB9<32>
	Mem407[esp_396 - 12<i32>:word32] = Mem404[fs:0<32>:word32]
	Mem414[esp_396 - 0x54<32>:word32] = Mem407[0x00A14188<p32>:word32] ^ esp_396 - 0x50<32>
	Mem416[fs:0<32>:word32] = esp_396 - 0xC<32>
	Mem418[esp_396 - 0x58<32>:word32] = 0x8A778C<32>
	basic_string(esp_396 - 0x50<32>, Mem418[esp_396 - 0x58<32>:(ptr32 charconst )])
	Mem424[esp_396 - 0x58<32>:word32] = esp_396 - 0x50<32>
	Mem426[esp_396 - 4<32>:word32] = 0<32>
	fn004019E0(esp_396 - 0x34<32>, Mem426[esp_396 - 0x58<32>:word32])
	Mem435[esp_396 - 0x58<32>:word32] = 0x999C68<32>
	Mem438[esp_396 - 0x5C<32>:word32] = esp_396 - 0x34<32>
	Mem439[esp_396 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_440
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_396 - 0x34<32>
		defs: esp:esp_440
	int3()
	Mem446[esp_440 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem448[esp_440 - 8<i32>:word32] = 0x82CCE9<32>
	Mem451[esp_440 - 12<i32>:word32] = Mem448[fs:0<32>:word32]
	Mem458[esp_440 - 0x54<32>:word32] = Mem451[0x00A14188<p32>:word32] ^ esp_440 - 0x50<32>
	Mem460[fs:0<32>:word32] = esp_440 - 0xC<32>
	Mem462[esp_440 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_440 - 0x50<32>, Mem462[esp_440 - 0x58<32>:(ptr32 charconst )])
	Mem468[esp_440 - 0x58<32>:word32] = esp_440 - 0x50<32>
	Mem470[esp_440 - 4<32>:word32] = 0<32>
	fn004019E0(esp_440 - 0x34<32>, Mem470[esp_440 - 0x58<32>:word32])
	Mem479[esp_440 - 0x58<32>:word32] = 0x999C68<32>
	Mem482[esp_440 - 0x5C<32>:word32] = esp_440 - 0x34<32>
	Mem483[esp_440 - 0x34<32>:word32] = 0x990030<32>
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_440 - 0x34<32>
	int3()
l0040DDDF_thunk_fn0040DDE0:
	word32 ecx_490
	word32 edx_491
	fn0040DDE0(dwArg04, out ecx_490, out edx_491)
	edxOut = edx_491
	return ecx_490
fn0040D9C0_exit:


word32 fn0040DA20(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004119C0
// MayUse:  fs:[0..15] Stack +0004:[0..31]
// LiveOut: ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn0040DA20_entry:
l0040DA20:
	Mem20[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(fp - 0x50<32>, 0x8A6998<32>)
	fn004019E0(fp - 0x34<32>, fp - 0x50<32>)
	word32 esp_44
	call CxxThrowException (retsize: 4;)
		uses: ecx:fp - 0x34<32>,Stack +0004:fp - 0x34<32>,Stack +0008:0x999C68<32>,Stack +002C:0x990030<32>
		defs: esp:esp_44
	int3()
	Mem50[esp_44 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem52[esp_44 - 8<i32>:word32] = 0x82CB69<32>
	Mem55[esp_44 - 12<i32>:word32] = Mem52[fs:0<32>:word32]
	Mem62[esp_44 - 0x54<32>:word32] = Mem55[0x00A14188<p32>:word32] ^ esp_44 - 0x50<32>
	Mem64[fs:0<32>:word32] = esp_44 - 0xC<32>
	Mem66[esp_44 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_44 - 0x50<32>, Mem66[esp_44 - 0x58<32>:(ptr32 charconst )])
	Mem72[esp_44 - 0x58<32>:word32] = esp_44 - 0x50<32>
	Mem74[esp_44 - 4<32>:word32] = 0<32>
	fn004019E0(esp_44 - 0x34<32>, Mem74[esp_44 - 0x58<32>:word32])
	Mem83[esp_44 - 0x58<32>:word32] = 0x999C68<32>
	Mem86[esp_44 - 0x5C<32>:word32] = esp_44 - 0x34<32>
	Mem87[esp_44 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_88
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_44 - 0x34<32>
		defs: esp:esp_88
	int3()
	Mem94[esp_88 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem96[esp_88 - 8<i32>:word32] = 0x82CB99<32>
	Mem99[esp_88 - 12<i32>:word32] = Mem96[fs:0<32>:word32]
	Mem106[esp_88 - 0x54<32>:word32] = Mem99[0x00A14188<p32>:word32] ^ esp_88 - 0x50<32>
	Mem108[fs:0<32>:word32] = esp_88 - 0xC<32>
	Mem110[esp_88 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_88 - 0x50<32>, Mem110[esp_88 - 0x58<32>:(ptr32 charconst )])
	Mem116[esp_88 - 0x58<32>:word32] = esp_88 - 0x50<32>
	Mem118[esp_88 - 4<32>:word32] = 0<32>
	fn004019E0(esp_88 - 0x34<32>, Mem118[esp_88 - 0x58<32>:word32])
	Mem127[esp_88 - 0x58<32>:word32] = 0x999C68<32>
	Mem130[esp_88 - 0x5C<32>:word32] = esp_88 - 0x34<32>
	Mem131[esp_88 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_132
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_88 - 0x34<32>
		defs: esp:esp_132
	int3()
	Mem138[esp_132 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem140[esp_132 - 8<i32>:word32] = 0x82CBC9<32>
	Mem143[esp_132 - 12<i32>:word32] = Mem140[fs:0<32>:word32]
	Mem150[esp_132 - 0x54<32>:word32] = Mem143[0x00A14188<p32>:word32] ^ esp_132 - 0x50<32>
	Mem152[fs:0<32>:word32] = esp_132 - 0xC<32>
	Mem154[esp_132 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_132 - 0x50<32>, Mem154[esp_132 - 0x58<32>:(ptr32 charconst )])
	Mem160[esp_132 - 0x58<32>:word32] = esp_132 - 0x50<32>
	Mem162[esp_132 - 4<32>:word32] = 0<32>
	fn004019E0(esp_132 - 0x34<32>, Mem162[esp_132 - 0x58<32>:word32])
	Mem171[esp_132 - 0x58<32>:word32] = 0x999C68<32>
	Mem174[esp_132 - 0x5C<32>:word32] = esp_132 - 0x34<32>
	Mem175[esp_132 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_176
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_132 - 0x34<32>
		defs: esp:esp_176
	int3()
	Mem182[esp_176 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem184[esp_176 - 8<i32>:word32] = 0x82CBF9<32>
	Mem187[esp_176 - 12<i32>:word32] = Mem184[fs:0<32>:word32]
	Mem194[esp_176 - 0x54<32>:word32] = Mem187[0x00A14188<p32>:word32] ^ esp_176 - 0x50<32>
	Mem196[fs:0<32>:word32] = esp_176 - 0xC<32>
	Mem198[esp_176 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_176 - 0x50<32>, Mem198[esp_176 - 0x58<32>:(ptr32 charconst )])
	Mem204[esp_176 - 0x58<32>:word32] = esp_176 - 0x50<32>
	Mem206[esp_176 - 4<32>:word32] = 0<32>
	fn004019E0(esp_176 - 0x34<32>, Mem206[esp_176 - 0x58<32>:word32])
	Mem215[esp_176 - 0x58<32>:word32] = 0x999C68<32>
	Mem218[esp_176 - 0x5C<32>:word32] = esp_176 - 0x34<32>
	Mem219[esp_176 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_220
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_176 - 0x34<32>
		defs: esp:esp_220
	int3()
	Mem226[esp_220 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem228[esp_220 - 8<i32>:word32] = 0x82CC29<32>
	Mem231[esp_220 - 12<i32>:word32] = Mem228[fs:0<32>:word32]
	Mem238[esp_220 - 0x54<32>:word32] = Mem231[0x00A14188<p32>:word32] ^ esp_220 - 0x50<32>
	Mem240[fs:0<32>:word32] = esp_220 - 0xC<32>
	Mem242[esp_220 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_220 - 0x50<32>, Mem242[esp_220 - 0x58<32>:(ptr32 charconst )])
	Mem248[esp_220 - 0x58<32>:word32] = esp_220 - 0x50<32>
	Mem250[esp_220 - 4<32>:word32] = 0<32>
	fn004019E0(esp_220 - 0x34<32>, Mem250[esp_220 - 0x58<32>:word32])
	Mem259[esp_220 - 0x58<32>:word32] = 0x999C68<32>
	Mem262[esp_220 - 0x5C<32>:word32] = esp_220 - 0x34<32>
	Mem263[esp_220 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_264
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_220 - 0x34<32>
		defs: esp:esp_264
	int3()
	Mem270[esp_264 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem272[esp_264 - 8<i32>:word32] = 0x82CC59<32>
	Mem275[esp_264 - 12<i32>:word32] = Mem272[fs:0<32>:word32]
	Mem282[esp_264 - 0x54<32>:word32] = Mem275[0x00A14188<p32>:word32] ^ esp_264 - 0x50<32>
	Mem284[fs:0<32>:word32] = esp_264 - 0xC<32>
	Mem286[esp_264 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_264 - 0x50<32>, Mem286[esp_264 - 0x58<32>:(ptr32 charconst )])
	Mem292[esp_264 - 0x58<32>:word32] = esp_264 - 0x50<32>
	Mem294[esp_264 - 4<32>:word32] = 0<32>
	fn004019E0(esp_264 - 0x34<32>, Mem294[esp_264 - 0x58<32>:word32])
	Mem303[esp_264 - 0x58<32>:word32] = 0x999C68<32>
	Mem306[esp_264 - 0x5C<32>:word32] = esp_264 - 0x34<32>
	Mem307[esp_264 - 0x34<32>:word32] = 0x990030<32>
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_264 - 0x34<32>
	int3()
l0040DCBF_thunk_fn0040DCC0:
	word32 ecx_314
	word32 edx_346
	fn0040DCC0(dwArg04, out ecx_314, out edx_346)
	return ecx_314
fn0040DA20_exit:


word32 fn0040DAE0(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00411D40
// MayUse:  fs:[0..15] Stack +0004:[0..31]
// LiveOut: ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn0040DAE0_entry:
l0040DAE0:
	Mem20[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(fp - 0x50<32>, 0x8A6998<32>)
	fn004019E0(fp - 0x34<32>, fp - 0x50<32>)
	word32 esp_44
	call CxxThrowException (retsize: 4;)
		uses: ecx:fp - 0x34<32>,Stack +0004:fp - 0x34<32>,Stack +0008:0x999C68<32>,Stack +002C:0x990030<32>
		defs: esp:esp_44
	int3()
	Mem50[esp_44 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem52[esp_44 - 8<i32>:word32] = 0x82CBC9<32>
	Mem55[esp_44 - 12<i32>:word32] = Mem52[fs:0<32>:word32]
	Mem62[esp_44 - 0x54<32>:word32] = Mem55[0x00A14188<p32>:word32] ^ esp_44 - 0x50<32>
	Mem64[fs:0<32>:word32] = esp_44 - 0xC<32>
	Mem66[esp_44 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_44 - 0x50<32>, Mem66[esp_44 - 0x58<32>:(ptr32 charconst )])
	Mem72[esp_44 - 0x58<32>:word32] = esp_44 - 0x50<32>
	Mem74[esp_44 - 4<32>:word32] = 0<32>
	fn004019E0(esp_44 - 0x34<32>, Mem74[esp_44 - 0x58<32>:word32])
	Mem83[esp_44 - 0x58<32>:word32] = 0x999C68<32>
	Mem86[esp_44 - 0x5C<32>:word32] = esp_44 - 0x34<32>
	Mem87[esp_44 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_88
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_44 - 0x34<32>
		defs: esp:esp_88
	int3()
	Mem94[esp_88 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem96[esp_88 - 8<i32>:word32] = 0x82CBF9<32>
	Mem99[esp_88 - 12<i32>:word32] = Mem96[fs:0<32>:word32]
	Mem106[esp_88 - 0x54<32>:word32] = Mem99[0x00A14188<p32>:word32] ^ esp_88 - 0x50<32>
	Mem108[fs:0<32>:word32] = esp_88 - 0xC<32>
	Mem110[esp_88 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_88 - 0x50<32>, Mem110[esp_88 - 0x58<32>:(ptr32 charconst )])
	Mem116[esp_88 - 0x58<32>:word32] = esp_88 - 0x50<32>
	Mem118[esp_88 - 4<32>:word32] = 0<32>
	fn004019E0(esp_88 - 0x34<32>, Mem118[esp_88 - 0x58<32>:word32])
	Mem127[esp_88 - 0x58<32>:word32] = 0x999C68<32>
	Mem130[esp_88 - 0x5C<32>:word32] = esp_88 - 0x34<32>
	Mem131[esp_88 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_132
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_88 - 0x34<32>
		defs: esp:esp_132
	int3()
	Mem138[esp_132 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem140[esp_132 - 8<i32>:word32] = 0x82CC29<32>
	Mem143[esp_132 - 12<i32>:word32] = Mem140[fs:0<32>:word32]
	Mem150[esp_132 - 0x54<32>:word32] = Mem143[0x00A14188<p32>:word32] ^ esp_132 - 0x50<32>
	Mem152[fs:0<32>:word32] = esp_132 - 0xC<32>
	Mem154[esp_132 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_132 - 0x50<32>, Mem154[esp_132 - 0x58<32>:(ptr32 charconst )])
	Mem160[esp_132 - 0x58<32>:word32] = esp_132 - 0x50<32>
	Mem162[esp_132 - 4<32>:word32] = 0<32>
	fn004019E0(esp_132 - 0x34<32>, Mem162[esp_132 - 0x58<32>:word32])
	Mem171[esp_132 - 0x58<32>:word32] = 0x999C68<32>
	Mem174[esp_132 - 0x5C<32>:word32] = esp_132 - 0x34<32>
	Mem175[esp_132 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_176
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_132 - 0x34<32>
		defs: esp:esp_176
	int3()
	Mem182[esp_176 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem184[esp_176 - 8<i32>:word32] = 0x82CC59<32>
	Mem187[esp_176 - 12<i32>:word32] = Mem184[fs:0<32>:word32]
	Mem194[esp_176 - 0x54<32>:word32] = Mem187[0x00A14188<p32>:word32] ^ esp_176 - 0x50<32>
	Mem196[fs:0<32>:word32] = esp_176 - 0xC<32>
	Mem198[esp_176 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_176 - 0x50<32>, Mem198[esp_176 - 0x58<32>:(ptr32 charconst )])
	Mem204[esp_176 - 0x58<32>:word32] = esp_176 - 0x50<32>
	Mem206[esp_176 - 4<32>:word32] = 0<32>
	fn004019E0(esp_176 - 0x34<32>, Mem206[esp_176 - 0x58<32>:word32])
	Mem215[esp_176 - 0x58<32>:word32] = 0x999C68<32>
	Mem218[esp_176 - 0x5C<32>:word32] = esp_176 - 0x34<32>
	Mem219[esp_176 - 0x34<32>:word32] = 0x990030<32>
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_176 - 0x34<32>
	int3()
l0040DCBF_thunk_fn0040DCC0:
	word32 ecx_226
	word32 edx_254
	fn0040DCC0(dwArg04, out ecx_226, out edx_254)
	return ecx_226
fn0040DAE0_exit:


word32 fn0040DCC0(word32 dwArg04, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040DA20
//      fn0040DAE0
//      fn00411F00
// MayUse:  fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax ecx edx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn0040DCC0_entry:
l0040DCC0:
	Mem20[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(fp - 0x50<32>, 0x8A7778<32>)
	fn004019E0(fp - 0x34<32>, fp - 0x50<32>)
	word32 esp_44
	call CxxThrowException (retsize: 4;)
		uses: ecx:fp - 0x34<32>,Stack +0004:fp - 0x34<32>,Stack +0008:0x999C68<32>,Stack +002C:0x990030<32>
		defs: esp:esp_44
	int3()
	Mem50[esp_44 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem52[esp_44 - 8<i32>:word32] = 0x82CCB9<32>
	Mem55[esp_44 - 12<i32>:word32] = Mem52[fs:0<32>:word32]
	Mem62[esp_44 - 0x54<32>:word32] = Mem55[0x00A14188<p32>:word32] ^ esp_44 - 0x50<32>
	Mem64[fs:0<32>:word32] = esp_44 - 0xC<32>
	Mem66[esp_44 - 0x58<32>:word32] = 0x8A778C<32>
	basic_string(esp_44 - 0x50<32>, Mem66[esp_44 - 0x58<32>:(ptr32 charconst )])
	Mem72[esp_44 - 0x58<32>:word32] = esp_44 - 0x50<32>
	Mem74[esp_44 - 4<32>:word32] = 0<32>
	fn004019E0(esp_44 - 0x34<32>, Mem74[esp_44 - 0x58<32>:word32])
	Mem83[esp_44 - 0x58<32>:word32] = 0x999C68<32>
	Mem86[esp_44 - 0x5C<32>:word32] = esp_44 - 0x34<32>
	Mem87[esp_44 - 0x34<32>:word32] = 0x990030<32>
	word32 esp_88
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_44 - 0x34<32>
		defs: esp:esp_88
	int3()
	Mem94[esp_88 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem96[esp_88 - 8<i32>:word32] = 0x82CCE9<32>
	Mem99[esp_88 - 12<i32>:word32] = Mem96[fs:0<32>:word32]
	Mem106[esp_88 - 0x54<32>:word32] = Mem99[0x00A14188<p32>:word32] ^ esp_88 - 0x50<32>
	Mem108[fs:0<32>:word32] = esp_88 - 0xC<32>
	Mem110[esp_88 - 0x58<32>:word32] = 0x8A6998<32>
	basic_string(esp_88 - 0x50<32>, Mem110[esp_88 - 0x58<32>:(ptr32 charconst )])
	Mem116[esp_88 - 0x58<32>:word32] = esp_88 - 0x50<32>
	Mem118[esp_88 - 4<32>:word32] = 0<32>
	fn004019E0(esp_88 - 0x34<32>, Mem118[esp_88 - 0x58<32>:word32])
	Mem127[esp_88 - 0x58<32>:word32] = 0x999C68<32>
	Mem130[esp_88 - 0x5C<32>:word32] = esp_88 - 0x34<32>
	Mem131[esp_88 - 0x34<32>:word32] = 0x990030<32>
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_88 - 0x34<32>
	int3()
l0040DDDF_thunk_fn0040DDE0:
	word32 ecx_138
	word32 edx_139
	word32 eax_137 = fn0040DDE0(dwArg04, out ecx_138, out edx_139)
	ecxOut = ecx_138
	edxOut = edx_139
	return eax_137
fn0040DCC0_exit:


word32 fn0040DDE0(word32 dwArg04, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401EC0
//      fn00403950
//      fn0040D9C0
//      fn0040DCC0
//      fn00621680
// MayUse:  Stack +0004:[0..31]
// LiveOut: eax ecx edx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn0040DDE0_entry:
l0040DDE0:
	word32 ecx_46 = dwArg04
	branch dwArg04 >u 0<32> l0040DE07
l0040DE07:
	branch CONVERT(0xFFFFFFFF<64> /u dwArg04, word32, uint32) >=u 0x1C<32> l0040DDED
l0040DE13:
	call CxxThrowException (retsize: 4;)
		uses: eax:exception(fp - 0xC<32>, fp + 4<32>),ecx:fp - 0xC<32>,Stack +0004:fp - 0xC<32>,Stack +0008:0x999D08<32>,Stack +000C:0x990018<32>,Stack +001C:0<32>
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 edx_41 = Mem32[0x00A53FD0<p32>:word32]
	Mem42[0<32>:word32] = Mem32[0x00A53FCC<p32>:word32]
	word32 ecx_43 = Mem42[0x00A53FD4<p32>:word32]
	Mem44[4<32>:word32] = edx_41
	Mem45[8<32>:word32] = ecx_43
	ecxOut = ecx_43
	edxOut = edx_41
	return 0<32>
l0040DDEB:
	ecx_46 = 0<32>
l0040DDED:
	word32 edx_51 = ecx_46 * 8<32> - ecx_46
	word32 eax_57 = operator new(edx_51 * 4<32>)
	ecxOut = ecx_46
	edxOut = edx_51 * 4<32>
	return eax_57
fn0040DDE0_exit:


void fn0040DF60(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00411D40
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx FPU -1 Top
// Preserved: esp FPU -1
fn0040DF60_entry:
l0040DF60:
	word32 eax_15 = dwArg04
	branch dwArg04 == dwArg08 l0040DF7C
l0040DF6C:
l0040DF70:
	eax_15 = eax_15 + 4<32>
	Mem19[eax_15 - 4<32>:real32] = Mem13[dwArg0C:real32]
	branch eax_15 != dwArg08 l0040DF70
l0040DF7C:
	return
fn0040DF60_exit:


void fn0040DFB0(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040E060
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn0040DFB0_entry:
l0040DFB0:
	word32 eax_24 = dwArg0C
	branch dwArg08 == dwArg0C l0040DFE2
l0040DFE2:
	Mem14[dwArg04:word32] = dwArg10
	return
l0040DFBD:
	word32 edx_17 = dwArg10
l0040DFC3:
	eax_24 = eax_24 - 0x40<32>
	edx_17 = edx_17 - 0x40<32>
	word32 ecx_30 = 0x10<32>
	word32 esi_31 = eax_24
	word32 edi_32 = edx_17
l0040DFD4:
	branch ecx_30 == 0<32> l0040DFD6
l0040DFD6:
	branch eax_24 != dwArg08 l0040DFC3
l0040DFD8:
	Mem43[dwArg04:word32] = edx_17
	return
fn0040DFB0_exit:
l0040DFD4_1:
	Mem49[edi_32:word32] = Mem36[esi_31:word32]
	esi_31 = esi_31 + 4<i32>
	edi_32 = edi_32 + 4<i32>
	ecx_30 = ecx_30 - 1<32>


void fn0040E060(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00411F00
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn0040E060_entry:
l0040E060:
	fn0040DFB0(dwArg04, dwArg08, dwArg0C, dwArg10)
	return
fn0040E060_exit:


void fn0040E370(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413A20
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0040E370_entry:
l0040E370:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	word32 eax_26 = Mem24[0x00A14188<p32>:word32] ^ fp - 0x48<32>
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	word32 ecx_37 = Mem36[ecx:word32]
	word32 edx_38 = Mem36[ecx + 4<32>:word32]
	word32 eax_41 = Mem36[Mem36[ecx_37:word32] + 0xC<32>:word32]
	word32 esp_47
	word32 ecx_49
	call eax_41 (retsize: 4;)
		uses: eax:eax_41,ecx:ecx_37,edx:edx_38,Stack +0004:dwArg04,Stack +0008:edx_38,Stack +000C:eax_26,Stack +0020:0<32>,Stack +004C:eax_9,Stack +0050:0x82CE09<32>,Stack +0054:0<32>,Stack +005C:dwArg04
		defs: ecx:ecx_49,esp:esp_47
	Mem55[esp_47 + 0x48<32>:word32] = 0<32>
	Mem56[esp_47 + 0x14<32>:word32] = 1<32>
	word32 ebx_126 = 1<32>
	branch Mem46[dwArg04:word32] != 0<32> l0040E4E1
l0040E4E1:
l0040E3CA:
	word32 esi_158
	Mem60[esp_47 - 4<i32>:word32] = 0x40<32>
	word32 eax_61 = operator new(Mem60[esp_47 - 4<i32>:uint32])
	Mem64[esp_47 + 0x18<32>:word32] = eax_61
	Mem66[esp_47 + 0x48<32>:word32] = 1<32>
	word32 esp_157 = esp_47
	branch eax_61 == 0<32> l0040E458
l0040E458:
	esi_158 = 0<32>
l0040E3E2:
	word32 eax_100
	Mem72[esp_47 - 4<i32>:word32] = 0x14<32>
	word32 eax_73 = operator new(Mem72[esp_47 - 4<i32>:uint32])
	Mem75[esp_47 + 0x1C<32>:word32] = eax_73
	Mem77[esp_47 + 0x48<32>:byte] = 2<8>
	branch eax_73 == 0<32> l0040E40D
l0040E40D:
	eax_100 = 0<32>
l0040E3F9:
	Mem83[esp_47 - 4<i32>:word32] = ecx_49
	Mem85[esp_47 + 0x20<32>:word32] = esp_47 - 4<i32>
	Mem87[esp_47 - 8<i32>:word32] = 0<32>
	Mem88[esp_47 - 4<i32>:word32] = 0<32>
	Mem90[esp_47 - 12<i32>:word32] = 0<32>
	eax_100 = fn0041A830(eax_73, Mem90[esp_47 - 12<i32>:word32], Mem90[esp_47 - 8<i32>:word32], Mem90[esp_47 - 4<i32>:word32])
l0040E40F:
	word32 ecx_105 = Mem104[ecx:word32]
	Mem108[esp_47 - 4<i32>:word32] = ecx_105
	Mem110[esp_47 + 0x20<32>:word32] = esp_47 - 4<i32>
	Mem111[esp_47 - 4<i32>:word32] = eax_100
	branch eax_100 == 0<32> l0040E422
l0040E41E:
	Mem114[eax_100 + 4<32>:word32] = Mem111[eax_100 + 4<32>:word32] + 1<32>
l0040E422:
	word32 edx_121 = Mem117[Mem117[ecx_105:word32] + 0x10<32>:word32]
	Mem124[esp_47 - 8<i32>:word32] = Mem117[ecx + 4<32>:word32]
	Mem128[esp_47 - 12<i32>:word32] = esp_47 + 0x24<32>
	Mem130[esp_47 + 0x48<32>:byte] = 3<8>
	word32 esp_138
	word32 eax_139
	call edx_121 (retsize: 4;)
		uses: eax:esp_47 + 0x24<32>,ecx:ecx_105,edx:edx_121,Stack +0008:dwArg04
		defs: eax:eax_139,esp:esp_138
	Mem144[esp_138 + 0x4C<32>:byte] = 4<8>
	Mem145[esp_138 + 0x18<32>:word32] = 3<32>
	Mem147[esp_138 - 4<i32>:word32] = eax_139
	Mem149[esp_138 + 0x4C<32>:word32] = 5<32>
	ebx_126 = 3<32>
	esp_157 = esp_138 + 4<32>
	esi_158 = fn0041AC20(eax_61, Mem149[esp_138 - 4<i32>:word32], Mem149[esp_138:word32])
l0040E45A:
	Mem163[esp_157 + 0x20<32>:word32] = esi_158
	byte bl_252 = SLICE(ebx_126, byte, 0)
	branch esi_158 == 0<32> l0040E469
l0040E462:
	fn00401AD0(esi_158)
l0040E469:
	word32 eax_172 = Mem163[esp_157 + 0x50<32>:word32]
	word32 edi_173 = Mem163[eax_172:word32]
	Mem176[esp_157 + 0x48<32>:word32] = 7<32>
	branch edi_173 == esi_158 l0040E4A2
l0040E47B:
	Mem180[eax_172:word32] = esi_158
	branch esi_158 == 0<32> l0040E488
l0040E481:
	fn00401AD0(esi_158)
l0040E488:
	branch edi_173 == 0<32> l0040E4A2
l0040E48C:
	branch fn00401AE0(edi_173) != 1<32> l0040E4A2
l0040E498:
	word32 eax_200 = Mem180[edi_173:word32]
	word32 edx_201 = Mem180[eax_200:word32]
	Mem204[esp_157 - 4<i32>:word32] = 1<32>
	call edx_201 (retsize: 4;)
		uses: eax:eax_200,ecx:edi_173,Stack +0008:dwArg04
		defs: esp:esp_216
l0040E4A2:
	Mem226[esp_157 + 0x48<32>:byte] = 6<8>
	branch esi_158 == 0<32> l0040E4C1
l0040E4AB:
	branch fn00401AE0(esi_158) != 1<32> l0040E4C1
l0040E4B7:
	word32 eax_236 = Mem226[esi_158:word32]
	word32 edx_237 = Mem226[eax_236:word32]
	Mem239[esp_157 - 4<i32>:word32] = 1<32>
	call edx_237 (retsize: 4;)
		uses: eax:eax_236,ecx:esi_159,Stack +0008:dwArg04
		defs: esp:esp_245
l0040E4C1:
	Mem257[esp_157 + 0x48<32>:word32] = 0<32>
	branch (bl_252 & 2<8>) == 0<8> l0040E4DB
l0040E4CA:
	Mem266[esp_157 + 0x14<32>:word32] = ebx_126 & 0xFFFFFFFD<32>
	~basic_string(esp_157 + 0x24<32>)
l0040E4DB:
l0040E4E3:
	Mem276[fs:0x00000000<p32>:word32] = eax_9
	return
fn0040E370_exit:


void fn0040E500(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413A20
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn0040E500_entry:
l0040E500:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem29[fs:0<32>:word32] = fp - 0xC<32>
	word32 esi_32 = Mem31[ecx:word32]
	Mem34[ecx + 4<32>:word32] = Mem31[ecx + 4<32>:word32] + 1<32>
	word32 esp_26 = fp - 32<i32>
	branch esi_32 == 0<32> l0040E53F
l0040E538:
	fn00401AD0(esi_32)
l0040E53F:
	word32 edi_45 = Mem34[ecx + 4<32>:word32]
	branch esi_32 == 0<32> l0040E566
l0040E549:
	fn00401AD0(esi_32)
	branch fn00401AE0(esi_32) != 1<32> l0040E566
l0040E55C:
	word32 eax_64 = Mem34[esi_32:word32]
	word32 edx_76
	call Mem34[eax_64:word32] (retsize: 4;)
		uses: eax:eax_64,ecx:esi_32,edx:edx_76,Stack +0004:1<32>
		defs: edx:edx_76,esp:esp_73
l0040E566:
	word32 ebx_84 = Mem83[esp_26 + 0x24<32>:word32]
	Mem85[ebx_84:word32] = esi_32
	branch esi_32 == 0<32> l0040E577
l0040E570:
	fn00401AD0(esi_32)
l0040E577:
	Mem95[ebx_84 + 4<32>:word32] = edi_45 - 1<32>
	Mem100[esp_26 + 0x1C<32>:word32] = 0<32>
	Mem101[esp_26 + 0x10<32>:word32] = 1<32>
	branch esi_32 == 0<32> l0040E5A4
l0040E58E:
	branch fn00401AE0(esi_32) != 1<32> l0040E5A4
l0040E59A:
	word32 eax_111 = Mem101[esi_32:word32]
	word32 edx_112 = Mem101[eax_111:word32]
	Mem114[esp_26 - 4<i32>:word32] = 1<32>
	word32 edx_123
	call edx_112 (retsize: 4;)
		uses: eax:eax_111,ecx:esi_32,edx:edx_123
		defs: edx:edx_123
l0040E5A4:
	Mem132[fs:0x00000000<p32>:word32] = eax_9
	return
fn0040E500_exit:


word32 fn0040E780(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402A20
//      fn00404190
//      fn0040E780
//      fn0040EEA0
//      fn0040EF50
//      fn0040FF40
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0040E780_entry:
l0040E780:
	word32 eax_410
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	word32 ebx_115 = 0<32>
	branch Mem34[dwArg08 + 0x14<32>:word32] != 0<32> l0040E7CE
l0040E7CE:
	word32 esi_181
	word32 eax_45 = find_first_of(dwArg08, 0x8A6A50<32>, 0<32>)
	branch eax_45 < 0<32> l0040E93A
l0040E7F2:
	branch eax_45 >= size(dwArg08) l0040E93A
l0040E93A:
	word32 edx_58 = Mem44[Mem44[ecx:word32] + 0x1C<32>:word32]
	word32 eax_72
	word32 esp_119
	call edx_58 (retsize: 4;)
		uses: eax:fp - 0x2C<32>,ecx:ecx,edx:edx_58,Stack +0004:fp - 0x2C<32>,Stack +0008:dwArg08,Stack +0054:dwArg04,Stack +0058:0<32>
		defs: eax:eax_72,edx:edx_74,esp:esp_71
	word32 eax_77 = Mem65[eax_72:word32]
	branch eax_77 == 0<32> l0040E960
l0040E94F:
	Mem84[esp_119 + 0x4C<32>:word32] = eax_77
	ebx_115 = eax_77
	branch eax_77 == 0<32> l0040E960
l0040E959:
	fn00401AD0(eax_77)
l0040E960:
	word32 ecx_93 = Mem92[esp_119 + 0x18<32>:word32]
	Mem96[esp_119 + 0x40<32>:byte] = 1<8>
	byte bl_131 = SLICE(ebx_115, byte, 0)
	branch ecx_93 == 0<32> l0040E987
l0040E96D:
	branch fn00401AE0(ecx_93) != 1<32> l0040E987
l0040E979:
	branch ecx_93 == 0<32> l0040E987
l0040E97D:
	word32 eax_109 = Mem96[ecx_93:word32]
	word32 edx_110 = Mem96[eax_109:word32]
	Mem112[esp_119 - 4<i32>:word32] = 1<32>
	call edx_110 (retsize: 4;)
		uses: eax:eax_109,ecx:ecx_93,edx:edx_122,Stack +0008:dwArg04,Stack +000C:0<32>
		defs: edx:edx_122,esp:esp_119
l0040E987:
	branch ebx_115 != 0<32> l0040E9C1
l0040E98B:
	branch Mem130[esp_119 + 0x50<32>:byte] == bl_131 l0040E9C1
l0040E991:
	word32 eax_135 = Mem130[ecx:word32]
	word32 edx_136 = Mem130[eax_135 + 0x14<32>:word32]
	word32 esp_137 = esp_119 - 4<i32>
	Mem139[esp_137:word32] = dwArg08
	Mem142[esp_137 - 4<i32>:word32] = esp_137 + 0x54<32>
	word32 esp_148
	word32 eax_149
	call edx_136 (retsize: 4;)
		uses: eax:eax_135,ecx:ecx,edx:edx_170,Stack +0008:dwArg04,Stack +000C:0<32>
		defs: eax:eax_149,esp:esp_148
	Mem155[esp_148 - 4<i32>:word32] = eax_149
	Mem157[esp_148 + 0x40<32>:byte] = 8<8>
	fn005CF0C0(esp_148 + 0x4C<32>, Mem157[esp_148 - 4<i32>:word32])
	Mem167[esp_148 + 0x40<32>:byte] = 1<8>
	edx = fn0041C0B0(esp_148 + 0x50<32>)
	esp_119 = esp_148
	ebx_115 = Mem167[esp_148 + 0x4C<32>:word32]
l0040E9C1:
	esi_181 = Mem180[esp_119 + 0x48<32>:word32]
	Mem182[esi_181:word32] = ebx_115
	branch ebx_115 == 0<32> l0040E9D2
l0040E9CB:
	fn00401AD0(ebx_115)
l0040E9D2:
	Mem193[esp_119 + 0x14<32>:word32] = 1<32>
	Mem194[esp_119 + 0x40<32>:byte] = 0<8>
	branch ebx_115 == 0<32> l0040E9F9
l0040E9E3:
	branch fn00401AE0(ebx_115) != 1<32> l0040E9F9
l0040E9EF:
	word32 eax_204 = Mem194[ebx_115:word32]
	word32 edx_205 = Mem194[eax_204:word32]
	Mem207[esp_119 - 4<i32>:word32] = 1<32>
	call edx_205 (retsize: 4;)
		uses: eax:eax_204,ecx:ebx_176,edx:edx_221,Stack +0008:dwArg04,Stack +000C:0<32>
		defs: edx:edx_221
l0040E802:
	byte al_232 = CONVERT(substr(dwArg08, fp - 0x28<32>, 0<32>), basic_string, uint8)
	word32 edx_235 = Mem230[Mem230[ecx:word32] + 0x1C<32>:word32]
	word32 esp_248
	word32 eax_249
	call edx_235 (retsize: 4;)
		uses: eax:fp - 0x30<32>,ecx:ecx,edx:edx_235,Stack +0004:fp - 0x30<32>,Stack +0008:SEQ(SLICE(fp - 0x28<32>, word24, 8), al_232),Stack +000C:eax_45,Stack +004C:2<8>,Stack +0058:dwArg04,Stack +005C:0<32>
		defs: eax:eax_249,esp:esp_248
	Mem255[esp_248 - 4<i32>:word32] = eax_249
	Mem257[esp_248 + 0x40<32>:byte] = 3<8>
	fn005CF0C0(esp_248 + 0x4C<32>, Mem257[esp_248 - 4<i32>:word32])
	Mem267[esp_248 + 0x40<32>:byte] = 2<8>
	fn0041C0B0(esp_248 + 0x18<32>)
	Mem276[esp_248 + 0x40<32>:byte] = 1<8>
	~basic_string(esp_248 + 0x1C<32>)
	word32 ebx_277 = Mem276[esp_248 + 0x4C<32>:word32]
	word32 esp_265 = esp_248
	byte bl_281 = SLICE(ebx_277, byte, 0)
	branch ebx_277 != 0<32> l0040E8E0
l0040E85E:
	branch Mem276[esp_248 + 0x50<32>:byte] == bl_281 l0040E8BB
l0040E864:
	Mem285[esp_248 - 4<i32>:word32] = eax_45
	Mem287[esp_248 - 8<i32>:word32] = ebx_277
	Mem290[esp_248 - 12<i32>:word32] = esp_248 + 0x1C<32>
	byte al_292 = CONVERT(substr(dwArg08, Mem290[esp_248 - 12<i32>:uint32], Mem290[esp_248 - 8<i32>:uint32]), basic_string, uint8)
	word32 edx_295 = Mem290[Mem290[ecx:word32] + 0x14<32>:word32]
	Mem299[esp_248 - 8<32>:word32] = SEQ(SLICE(esp_248 + 0x1C<32>, word24, 8), al_292)
	Mem303[esp_248 - 0xC<32>:word32] = esp_248 + 0x14<32>
	Mem305[esp_248 + 0x3C<32>:byte] = 4<8>
	word32 esp_308
	word32 eax_309
	call edx_295 (retsize: 4;)
		uses: eax:esp_248 + 0x14<32>,ecx:ecx,edx:edx_295,Stack +0008:dwArg04,Stack +000C:0<32>
		defs: eax:eax_309,esp:esp_308
	Mem315[esp_308 - 4<i32>:word32] = eax_309
	Mem317[esp_308 + 0x40<32>:byte] = 5<8>
	fn005CF0C0(esp_308 + 0x4C<32>, Mem317[esp_308 - 4<i32>:word32])
	Mem327[esp_308 + 0x40<32>:byte] = 4<8>
	fn0041C0B0(esp_308 + 0x18<32>)
	Mem336[esp_308 + 0x40<32>:byte] = 1<8>
	~basic_string(esp_308 + 0x1C<32>)
	esp_265 = esp_308
	ebx_277 = Mem336[esp_308 + 0x4C<32>:word32]
	branch ebx_277 != 0<32> l0040E8E0
l0040E8E0:
	word32 eax_343 = &npos
	word32 esp_347 = esp_265 - 4<i32>
	Mem348[esp_347:word32] = Mem344[eax_343:word32]
	Mem353[esp_347 - 4<i32>:word32] = eax_45 + 1<32>
	Mem356[esp_347 - 8<i32>:word32] = esp_347 + 0x20<32>
	byte al_359 = CONVERT(substr(dwArg08, Mem356[esp_347 - 8<i32>:uint32], Mem356[esp_347 - 4<i32>:uint32]), basic_string, uint8)
	esi_181 = Mem356[esp_347 + 0x48<32>:word32]
	Mem364[esp_347 - 4<i32>:word32] = Mem356[esp_347 + 0x50<32>:word32]
	Mem368[esp_347 - 8<i32>:word32] = SEQ(SLICE(eax_343, word24, 8), al_359)
	Mem370[esp_347 - 12<i32>:word32] = esi_181
	Mem373[esp_347 + 0x40<32>:byte] = 6<8>
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 edx_567
	fn0040E780(ebx_277, stackArg4, dwArg04, out edx_567)
	Mem384[esp_347 + 0x14<32>:word32] = 1<32>
	Mem385[esp_347 + 0x40<32>:byte] = 1<8>
	~basic_string(esp_347 + 0x1C<32>)
	Mem387[esp_347 + 0x40<32>:byte] = 0<8>
	edx = fn0041C0B0(esp_347 + 0x4C<32>)
l0040E8BB:
	esi_181 = Mem396[esp_265 + 0x48<32>:word32]
	Mem399[esi_181:word32] = 0<32>
	Mem400[esp_265 + 0x14<32>:word32] = 1<32>
	Mem401[esp_265 + 0x40<32>:byte] = 0<8>
	edx = fn0041C0B0(esp_265 + 0x4C<32>)
l0040E9F9:
	eax_410 = esi_181
l0040E7B8:
	Mem413[dwArg04:word32] = ecx
	branch ecx == 0<32> l0040E7C7
l0040E7C2:
	fn00401AD0(ecx)
l0040E7C7:
	eax_410 = dwArg04
l0040E9FB:
	Mem432[fs:0x00000000<p32>:word32] = eax_9
	edxOut = edx
	return eax_410
fn0040E780_exit:


word32 fn0040ED30(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413A20
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn0040ED30_entry:
l0040ED30:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem26[fs:0<32>:word32] = fp - 0xC<32>
	word32 esp_23 = fp - 28<i32>
	branch ecx == 0<32> l0040ED83
l0040ED61:
	fn00401AD0(ecx)
	fn00401AD0(ecx)
	branch fn00401AE0(ecx) != 1<32> l0040ED83
l0040ED79:
	word32 eax_49 = Mem30[ecx:word32]
	word32 edx_57
	call Mem30[eax_49:word32] (retsize: 4;)
		uses: eax:eax_49,ecx:ecx,edx:edx_57,Stack +0004:1<32>
		defs: edx:edx_57,esp:esp_54
l0040ED83:
	word32 edi_65 = Mem64[esp_23 + 0x20<32>:word32]
	Mem66[edi_65:word32] = ecx
	branch ecx == 0<32> l0040ED94
l0040ED8D:
	fn00401AD0(ecx)
l0040ED94:
	Mem74[edi_65 + 4<32>:word32] = 0<32>
	Mem79[esp_23 + 0x18<32>:word32] = 0<32>
	Mem80[esp_23 + 0xC<32>:word32] = 1<32>
	branch ecx == 0<32> l0040EDC5
l0040EDAF:
	branch fn00401AE0(ecx) != 1<32> l0040EDC5
l0040EDBB:
	word32 eax_90 = Mem80[ecx:word32]
	word32 edx_91 = Mem80[eax_90:word32]
	Mem93[esp_23 - 4<i32>:word32] = 1<32>
	word32 edx_102
	call edx_91 (retsize: 4;)
		uses: eax:eax_90,ecx:ecx,edx:edx_102
		defs: edx:edx_102
l0040EDC5:
	Mem111[fs:0x00000000<p32>:word32] = eax_9
	return edi_65
fn0040ED30_exit:


word32 fn0040EDE0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413A20
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp edi esi esp
fn0040EDE0_entry:
l0040EDE0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem27[fs:0<32>:word32] = fp - 0xC<32>
	branch ecx == 0<32> l0040EE1D
l0040EE18:
	fn00401AD0(ecx)
l0040EE1D:
	word32 eax_41 = Mem33[ecx:word32]
	word32 eax_51
	word32 esp_50
	call Mem33[eax_41 + 4<32>:word32] (retsize: 4;)
		uses: eax:eax_41,ecx:ecx,Stack +0024:1<32>
		defs: eax:eax_51,esp:esp_50
	Mem58[esp_50 + 0x20<32>:byte] = 0<8>
	fn00401AD0(ecx)
	branch fn00401AE0(ecx) != 1<32> l0040EE52
l0040EE48:
	word32 eax_71 = Mem58[ecx:word32]
	word32 edx_72 = Mem58[eax_71:word32]
	Mem74[esp_50 - 4<i32>:word32] = 1<32>
	call edx_72 (retsize: 4;)
		uses: eax:eax_71,ecx:ecx
		defs: esp:esp_76
l0040EE52:
	word32 edi_84 = Mem83[esp_50 + 0x28<32>:word32]
	Mem87[edi_84:word32] = ecx
	fn00401AD0(ecx)
	Mem93[edi_84 + 4<32>:word32] = eax_51
	Mem95[esp_50 + 0x20<32>:word32] = 0<32>
	Mem96[esp_50 + 0x10<32>:word32] = 1<32>
	branch fn00401AE0(ecx) != 1<32> l0040EE88
l0040EE7E:
	word32 eax_104 = Mem96[ecx:word32]
	word32 edx_105 = Mem96[eax_104:word32]
	Mem107[esp_50 - 4<i32>:word32] = 1<32>
	call edx_105 (retsize: 4;)
		uses: eax:eax_104,ecx:ecx
l0040EE88:
	Mem123[fs:0x00000000<p32>:word32] = eax_9
	return edi_84
fn0040EDE0_exit:


byte fn0040EEA0(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B310
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx esi esp
fn0040EEA0_entry:
	byte bArg08 = SLICE(dwArg08, byte, 0)
	word24 nArg09 = SLICE(dwArg08, word24, 8)
l0040EEA0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem25[fs:0<32>:word32] = fp - 0xC<32>
	word32 edx_168
	fn0040E780(ecx, fp + 4<32>, dwArg04, out edx_168)
	branch dwArg04 == 0<32> l0040EF30
l0040EF30:
	Mem50[fs:0x00000000<p32>:word32] = eax_9
	return bArg08
l0040EEE3:
	word32 eax_61 = Mem46[Mem46[dwArg04:word32] + 0x44<32>:word32]
	word32 esp_64
	word32 eax_65
	call eax_61 (retsize: 4;)
		uses: eax:eax_61,ecx:dwArg04,edx:dwArg08,Stack +0004:dwArg08,Stack +0024:dwArg04,Stack +0028:bArg08,Stack +0029:nArg09
		defs: eax:eax_65,esp:esp_64
	word32 ecx_70 = Mem63[esp_64 + 0x1C<32>:word32]
	Mem75[esp_64 + 0x14<32>:word32] = 0xFFFFFFFF<32>
	byte al_73 = SLICE(eax_65, byte, 0)
	branch ecx_70 == 0<32> l0040EF1A
l0040EF01:
	word32 eax_78 = fn00401AE0(ecx_70)
	branch eax_78 != 1<32> l0040EF1A
l0040EF0D:
	branch ecx_70 == 0<32> l0040EF1A
l0040EF11:
	word32 edx_88 = Mem75[ecx_70:word32]
	Mem90[esp_64 - 4<i32>:word32] = eax_78
	call Mem90[edx_88:word32] (retsize: 4;)
		uses: ecx:ecx_70,edx:edx_88,Stack +0008:dwArg04,Stack +000C:bArg08,Stack +000D:nArg09
l0040EF1A:
	Mem107[fs:0x00000000<p32>:word32] = eax_9
	return al_73
fn0040EEA0_exit:


word32 fn0040EF50(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402B60
//      fn0042B310
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn0040EF50_entry:
l0040EF50:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem25[fs:0<32>:word32] = fp - 0xC<32>
	word32 edx_153
	fn0040E780(ecx, fp + 4<32>, dwArg04, out edx_153)
	branch dwArg04 == 0<32> l0040EFE0
l0040EFE0:
	Mem50[fs:0x00000000<p32>:word32] = eax_9
	return dwArg08
l0040EF93:
	word32 eax_61 = Mem46[Mem46[dwArg04:word32] + 0x48<32>:word32]
	word32 esp_64
	word32 eax_65
	call eax_61 (retsize: 4;)
		uses: eax:eax_61,ecx:dwArg04,edx:dwArg08,Stack +0004:dwArg08,Stack +0024:dwArg04,Stack +0028:dwArg08
		defs: eax:eax_65,esp:esp_64
	word32 ecx_70 = Mem63[esp_64 + 0x1C<32>:word32]
	Mem74[esp_64 + 0x14<32>:word32] = 0xFFFFFFFF<32>
	branch ecx_70 == 0<32> l0040EFCA
l0040EFB1:
	word32 eax_77 = fn00401AE0(ecx_70)
	branch eax_77 != 1<32> l0040EFCA
l0040EFBD:
	branch ecx_70 == 0<32> l0040EFCA
l0040EFC1:
	word32 edx_87 = Mem74[ecx_70:word32]
	Mem89[esp_64 - 4<i32>:word32] = eax_77
	call Mem89[edx_87:word32] (retsize: 4;)
		uses: ecx:ecx_70,edx:edx_87,Stack +0008:dwArg04,Stack +000C:dwArg08
l0040EFCA:
	Mem104[fs:0x00000000<p32>:word32] = eax_9
	return eax_65
fn0040EF50_exit:


word32 fn0040FF40(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413A20
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ebx ecx edx Top
// Preserved: ebp edi esi esp
fn0040FF40_entry:
l0040FF40:
	word32 eax_175
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	word32 ebp_111 = 0<32>
	word32 eax_46 = find_last_of(dwArg08, 0x8A6A50<32>, Mem35[&npos:word32])
	branch eax_46 < 0<32> l004100B0
l0040FF9E:
	word32 eax_53 = size(dwArg08)
	word24 eax_24_8_91 = SLICE(eax_53, word24, 8)
	branch eax_46 > eax_53 l004100B0
l004100B0:
	operator =(dwArg0C, dwArg08)
	Mem68[dwArg04:word32] = ecx
	branch ecx == 0<32> l004100CC
l004100C5:
	fn00401AD0(ecx)
l004100CC:
	eax_175 = dwArg04
l0040FFAE:
	word32 esp_106 = fp - 0x48<32>
	word32 edx_322
	word32 eax_107 = Mem98[fn0040E780(ecx, fp + 4<32>, SEQ(eax_24_8_91, CONVERT(substr(dwArg08, fp - 0x28<32>, 0<32>), basic_string, uint8)), out edx_322):word32]
	branch eax_107 == 0<32> l0040FFEB
l0040FFDA:
	ebp_111 = eax_107
	branch eax_107 == 0<32> l0040FFEB
l0040FFE4:
	fn00401AD0(eax_107)
l0040FFEB:
	branch dwArg04 == 0<32> l00410012
l0040FFF8:
	branch fn00401AE0(dwArg04) != 1<32> l00410012
l00410004:
	branch dwArg04 == 0<32> l00410012
l00410008:
	word32 eax_139 = Mem126[dwArg04:word32]
	word32 edx_152
	call Mem126[eax_139:word32] (retsize: 4;)
		uses: eax:eax_139,ecx:dwArg04,edx:edx_152,Stack +0004:1<32>,Stack +0054:dwArg04,Stack +0058:dwArg08,Stack +005C:dwArg0C
		defs: edx:edx_152,esp:esp_149
l00410012:
	Mem157[esp_106 + 0x4C<32>:word32] = 0<32>
	Mem158[esp_106 + 0x40<32>:byte] = 1<8>
	~basic_string(esp_106 + 0x1C<32>)
	branch ebp_111 == 0<32> l0041008C
l0041008C:
	word32 esi_163 = Mem158[esp_106 + 0x48<32>:word32]
	Mem165[esi_163:word32] = 0<32>
	Mem166[esp_106 + 0x18<32>:word32] = 1<32>
	Mem167[esp_106 + 0x40<32>:byte] = 0<8>
	edx = fn0041C0B0(esp_106 + 0x14<32>)
	eax_175 = esi_163
l0041002D:
	word32 eax_179 = &npos
	word32 esp_181 = esp_106 - 4<i32>
	Mem182[esp_181:word32] = Mem158[eax_179:word32]
	Mem187[esp_181 - 4<i32>:word32] = eax_46 + 1<32>
	Mem190[esp_181 - 8<i32>:word32] = esp_181 + 0x20<32>
	byte al_193 = CONVERT(substr(dwArg08, Mem190[esp_181 - 8<i32>:uint32], Mem190[esp_181 - 4<i32>:uint32]), basic_string, uint8)
	word32 ecx_195 = Mem190[esp_181 + 0x50<32>:word32]
	Mem199[esp_181 - 4<i32>:word32] = SEQ(SLICE(eax_179, word24, 8), al_193)
	Mem200[esp_181 + 0x40<32>:byte] = 4<8>
	operator =(ecx_195, Mem200[esp_181 - 4<i32>:(ptr32 basic_string)])
	Mem204[esp_181 + 0x40<32>:byte] = 1<8>
	~basic_string(esp_181 + 0x1C<32>)
	word32 esi_205 = Mem204[esp_181 + 0x48<32>:word32]
	Mem207[esi_205:word32] = ebp_111
	fn00401AD0(ebp_111)
	Mem213[esp_181 + 0x18<32>:word32] = 1<32>
	Mem214[esp_181 + 0x40<32>:byte] = 0<8>
	edx = fn0041C0B0(esp_181 + 0x14<32>)
	eax_175 = esi_205
l004100CE:
	Mem232[fs:0x00000000<p32>:word32] = eax_9
	edxOut = edx
	return eax_175
fn0040FF40_exit:


void fn004100F0(selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, byte bArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn007B2D10
// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..7]
// LiveOut:
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004100F0_entry:
l004100F0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	branch Mem31[dwArg0C + 0xC<32>:word32] <= 0<32> l00410159
l00410132:
	word32 ecx_280 = Mem35[dwArg0C + 8<32>:word32]
	byte al_279 = Mem35[ecx_280:byte]
	branch al_279 == 0<8> l00410159
l0041013B:
l00410140:
	branch al_279 == 0x20<8> l00410150
l00410144:
	branch al_279 == 9<8> l00410150
l00410148:
	branch al_279 == 0xD<8> l00410150
l0041014C:
	branch al_279 != 0xA<8> l00410194
l00410194:
	byte cl_53 = Mem35[ecx_280:byte]
	branch cl_53 == 0<8> l00410159
l0041019A:
	branch cl_53 != 0x3C<8> l00410159
l0041019F:
	branch bArg10 != 0<8> l0041020C
l004101A6:
	word32 eax_71
	word32 eax_64 = operator new(0x14<32>)
	branch eax_64 == 0<32> l004101DB
l004101DB:
	eax_71 = 0<32>
l004101BD:
	eax_71 = fn0041A830(eax_64, Mem79[dwArg0C + 8<32>:word32], Mem79[dwArg0C + 0xC<32>:word32], 0<32>)
l004101DD:
	branch eax_71 == 0<32> l004101E8
l004101E5:
	Mem107[eax_71 + 4<32>:word32] = Mem102[eax_71 + 4<32>:word32] + 1<32>
l004101E8:
	fn00529B70(fp + 0xC<32>, fp - 0x18<32>)
	fn00634DD0(fp - 0x18<32>)
l0041020C:
	branch dwArg0C == 0<32> l0041021C
l00410219:
	Mem151[dwArg0C + 4<32>:word32] = Mem144[dwArg0C + 4<32>:word32] + 1<32>
l0041021C:
	fn00418D40(es, ds, fp - 0x14<32>, dwArg0C)
	Mem204[dwArg04:word32] = dwLoc14
	branch dwLoc14 == 0<32> l00410241
l0041023C:
	fn00401AD0(dwLoc14)
l00410241:
	fn0041C0B0(fp - 0x14<32>)
	branch dwArg0C == 0<32> l00410266
l00410257:
	word32 v23_228 = Mem226[dwArg0C + 4<32>:word32] + 0xFFFFFFFF<32>
	Mem229[dwArg0C + 4<32>:word32] = v23_228
	branch v23_228 != 0<32> l00410266
l0041025D:
	word32 eax_232 = Mem229[dwArg0C:word32]
	call Mem229[eax_232:word32] (retsize: 4;)
		uses: eax:eax_232,ecx:dwArg0C,Stack +0004:1<32>,Stack +001C:dwLoc20,Stack +0028:dwLoc14,Stack +0040:dwArg04,Stack +0044:dwArg08,Stack +0048:dwArg0C,Stack +004C:bArg10
l00410266:
	Mem263[fs:0x00000000<p32>:word32] = eax_9
	return
l00410150:
	al_279 = Mem35[ecx_280 + 1<32>:byte]
	ecx_280 = ecx_280 + 1<32>
	branch al_279 != 0<8> l00410140
l00410159:
	Mem299[dwArg0C + 4<32>:word32] = Mem296[dwArg0C + 4<32>:word32] + 1<32>
	fn0041EA60(fp - 0x20<32>, dwArg08, dwArg0C)
	word32 ecx_317 = dwLoc20
	branch dwLoc20 == 0<32> l0041027C
l0041027C:
	word32 eax_331
	word32 eax_324 = operator new(0x40<32>)
	branch eax_324 == 0<32> l004102A9
l004102A9:
	eax_331 = 0<32>
l00410293:
	Mem340[dwArg0C + 4<32>:word32] = Mem338[dwArg0C + 4<32>:word32] + 1<32>
	dwLoc14 = fp - 0x38<32>
	eax_331 = fn0041AC20(eax_324, dwArg08, dwArg0C)
l004102AB:
	Mem359[dwArg04:word32] = eax_331
	branch eax_331 == 0<32> l004102BD
l004102B6:
	ecx_317 = eax_331
l00410188:
	Mem363[dwArg04:word32] = dwLoc20
l004102B8:
	fn00401AD0(ecx_317)
l004102BD:
	word32 esp_369 = fp - 0x34<32>
	branch dwLoc20 == 0<32> l004102E5
l004102CD:
	branch fn00401AE0(dwLoc20) != 1<32> l004102E5
l004102D8:
	branch dwLoc20 == 0<32> l004102E5
l004102DC:
	word32 edx_399 = Mem386[dwLoc20:word32]
	call Mem386[edx_399:word32] (retsize: 4;)
		uses: ecx:dwLoc20,edx:edx_399,Stack +0004:1<32>,Stack +001C:dwLoc20,Stack +0028:dwLoc14_731,Stack +0040:dwArg04,Stack +0044:dwArg08,Stack +0048:dwArg0C,Stack +004C:bArg10
		defs: esp:esp_417
l004102E5:
	Mem424[esp_369 + 0x14<32>:word32] = 0<32>
	word32 v22_426 = Mem424[dwArg0C + 4<32>:word32] + 0xFFFFFFFF<32>
	Mem427[dwArg0C + 4<32>:word32] = v22_426
	Mem429[esp_369 + 0x30<32>:byte] = 0<8>
	branch v22_426 != 0<32> l00410301
l004102F8:
	word32 edx_431 = Mem429[dwArg0C:word32]
	word32 eax_432 = Mem429[edx_431:word32]
	Mem435[esp_369 - 4<i32>:word32] = 1<32>
	call eax_432 (retsize: 4;)
		uses: ecx:dwArg0C,edx:edx_431,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0010:dwArg0C,Stack +0014:bArg10,Stack +FFFFFFE4:dwLoc20,Stack +FFFFFFF0:dwLoc14_731
l00410301:
	Mem456[fs:0x00000000<p32>:word32] = eax_9
	return
fn004100F0_exit:


