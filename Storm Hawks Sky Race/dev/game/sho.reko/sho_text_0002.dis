void fn00421080(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B310
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: esi esp
fn00421080_entry:
l00421080:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem23[fs:0<32>:word32] = fp - 0xC<32>
	basic_string(fp - 0x28<32>, dwArg04)
	fn0041F1A0(ecx, fp - 0x28<32>)
	~basic_string(fp - 0x28<32>)
	Mem47[ecx:word32] = 0x8A89B0<32>
	Mem50[fs:0x00000000<p32>:word32] = eax_9
	return
fn00421080_exit:


byte fn00421E80(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut, ptr32 & xmm0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042DF20
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax ebp edi esi xmm0
// Trashed: SCZO eax ebp ecx edi edx esi Top xmm0 xmm1 xmm2
// Preserved: DP ebx esp
fn00421E80_entry:
l00421E80:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem21[fs:0<32>:word32] = fp - 0xC<32>
	word32 eax_23 = Mem21[dwArg04 + 4<32>:word32]
	byte bLoc29_289 = 1<8>
	branch eax_23 >u 0xB7<32> l00421FA0
l00421EBE:
	word32 edi_142
	word32 esi_144
	word32 ebp_140
	word32 ebx_141
	word32 eax_28 = CONVERT(Mem26[eax_23 + 0x421FC1<32>:byte], byte, word32)
	switch (eax_28) { l00421F5F l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421F26 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421ECC l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421FA0 l00421EF3 }
l00421EF3:
	word32 eax_30 = basic_string(fp - 0x28<32>)
	word32 ebx_45
	word128 xmm0_372
	word32 edx_371
	fn005A74F0(ebx, ebp, esi, edi, es, ds, out edx_371, out ebx_45, out ebp, out esi, out edi, out xmm0_372)
	xmm0 = fn005A7E10(ebx_45, ebp, esi, edi, es, ds, eax_30)
	~basic_string(fp - 0x28<32>)
l00421ECC:
	branch (SLICE(Mem26[dwArg04 + 8<32>:word32] >>u 2<32>, byte, 0) & 1<8>) == 0<8> l00421FA5
l00421EDB:
	PostMessageA(Mem26[ecx + 0x4E8<32>:word32], 0x10<32>, 0<32>, 0<32>)
l00421F26:
	branch Mem26[0x00A69758<p32>:byte] != 0<8> l00421F38
l00421F2F:
	branch Mem26[0x00A697D8<p32>:byte] == 0<8> l00421FA0
l00421F38:
	word32 ebx_107
	word32 edx_373
	word32 eax_104 = fn005A74F0(ebx, ebp, esi, edi, es, ds, out edx_373, out ebx_107, out ebp, out esi, out edi, out xmm0)
	branch Mem26[eax_104 + 0xA8<32>:word32] == 0<32> l00421FA5
l00421F46:
	word32 ebp_123
	word32 ebx_124
	word32 edi_125
	word32 esi_127
	word128 xmm0_377
	word32 edx_376
	word128 xmm0_375
	word32 edx_374
	fn005A74F0(SEQ(SLICE(ebx_124, word24, 8), Mem26[fn005A74F0(ebx_107, ebp, esi, edi, es, ds, out edx_374, out ebx_124, out ebp_123, out esi_127, out edi_125, out xmm0_375) + 0x6C<32>:byte]), ebp_123, esi_127, edi_125, es, ds, out edx_376, out ebx_141, out ebp_140, out esi_144, out edi_142, out xmm0_377)
l00421F5F:
	branch (SLICE(Mem26[dwArg04 + 8<32>:word32] >>u 2<32>, byte, 0) & 1<8>) == 0<8> l00421FA0
l00421FA0:
	bLoc29_289 = 0<8>
l00421F6A:
	word32 ebx_177
	word32 edx_379
	word32 eax_174 = fn005A74F0(ebx, ebp, esi, edi, es, ds, out edx_379, out ebx_177, out ebp, out esi, out edi, out xmm0)
	branch Mem26[eax_174 + 0xA8<32>:word32] == 0<32> l00421FA5
l00421F78:
	word32 ebx_193
	word32 edx_380
	word32 eax_190 = fn005A74F0(ebx_177, ebp, esi, edi, es, ds, out edx_380, out ebx_193, out ebp, out esi, out edi, out xmm0)
	branch Mem26[eax_190 + 0x6C<32>:byte] != 0<8> l00421FA5
l00421F83:
	word32 edx_381
	word128 xmm0_382
	fn005A74F0(ebx_193, ebp, esi, edi, es, ds, out edx_381, out ebx_141, out ebp_140, out esi_144, out edi_142, out xmm0_382)
l00421F8E:
	word32 ebx_245
	word32 edx_247
	word128 xmm0_378
	eax_24_8_335 = SLICE(CONVERT(fn005A7560(fn005A74F0(ebx_141, ebp_140, esi_144, edi_142, es, ds, out edx_247, out ebx_245, out ebp, out esi, out edi, out xmm0_378), edx_247, ebx_245, ebp, esi, edi, es, ds, 0<8>, out xmm0), byte, uint32), word24, 8) (alias)
l00421FA5:
	Mem276[fs:0x00000000<p32>:word32] = eax_9
	ebpOut = ebp
	esiOut = esi
	ediOut = edi
	xmm0Out = xmm0
	return bLoc29_289
fn00421E80_exit:


word32 fn00422220(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004295F0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn00422220_entry:
l00422220:
	word32 eax_19 = dwArg04
	branch dwArg04 == dwArg08 l0042224A
l0042222C:
l00422233:
	word32 edi_20 = eax_19
	eax_19 = eax_19 + 0x14C<32>
	word32 ecx_24 = 0x53<32>
	word32 esi_26 = dwArg0C
l00422243:
	branch ecx_24 == 0<32> l00422245
l00422245:
	branch eax_19 != dwArg08 l00422233
l00422247:
l0042224A:
	edxOut = dwArg08
	return eax_19
fn00422220_exit:
l00422243_1:
	Mem40[edi_20:word32] = Mem30[esi_26:word32]
	esi_26 = esi_26 + 4<i32>
	edi_20 = edi_20 + 4<i32>
	ecx_24 = ecx_24 - 1<32>


word32 fn00422320(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428ED0
//      fn004295F0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax edx Top
// Preserved: ebx ecx edi esi esp
fn00422320_entry:
l00422320:
	word32 edx_24 = dwArg04
	word32 eax_19 = dwArg0C
	branch dwArg04 == dwArg08 l00422353
l00422331:
l00422333:
	branch eax_19 == 0<32> l00422342
l00422337:
	word32 ecx_23 = 0x53<32>
	word32 esi_25 = edx_24
	word32 edi_26 = eax_19
l00422340:
	branch ecx_23 == 0<32> l00422342
l00422342:
	edx_24 = edx_24 + 0x14C<32>
	eax_19 = eax_19 + 0x14C<32>
	branch edx_24 != dwArg08 l00422333
l00422351:
l00422353:
	edxOut = edx_24
	return eax_19
fn00422320_exit:
l00422340_1:
	Mem56[edi_26:word32] = Mem43[esi_25:word32]
	esi_25 = esi_25 + 4<i32>
	edi_26 = edi_26 + 4<i32>
	ecx_23 = ecx_23 - 1<32>


byte fn00422980(word32 ecx, word32 esi, word32 edi, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042CFC0
// MayUse:  ecx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx FPUF Top
// Preserved: edi esi esp
fn00422980_entry:
l00422980:
	Mem15[ecx + 4<32>:word32] = 0<32>
	Mem16[ecx + 8<32>:word32] = 0<32>
	Mem17[ecx + 0xC<32>:word32] = 0<32>
	branch dwArg04 != 0<32> l0042299E
l0042299E:
	branch dwArg04 <=u 0x4924924<32> l004229AB
l004229A6:
	fn00420860(edi, esi)
l004229AB:
	word32 esi_43
	word32 eax_40 = fn00420B90(ecx, dwArg04, out esi_43)
	Mem53[esi_43 + 4<32>:word32] = eax_40
	Mem54[esi_43 + 8<32>:word32] = eax_40
	Mem57[esi_43 + 0xC<32>:word32] = eax_40 + (dwArg04 * 8<32> - dwArg04) * 8<32>
	return 1<8>
l00422997:
	return 0<8>
fn00422980_exit:


void fn004229E0(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, byte bArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00424A20
// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..7]
// LiveOut:
// Trashed: SCZO ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004229E0_entry:
l004229E0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem31[fs:0<32>:word32] = fp - 0x10<32>
	word32 eax_35 = operator new(0x30<32>)
	branch eax_35 == 0<32> l00422A5C
l00422A2C:
	Mem48[eax_35:word32] = dwArg04
	Mem50[eax_35 + 4<32>:word32] = dwArg08
	Mem51[eax_35 + 8<32>:word32] = dwArg0C
	Mem55[eax_35 + 0xC<32>:word32] = Mem51[dwArg10:word32]
	basic_string(eax_35 + 0x10<32>, dwArg10 + 4<32>)
	Mem62[eax_35 + 0x2C<32>:byte] = bArg14
	Mem63[eax_35 + 0x2D<32>:byte] = 0<8>
l00422A5C:
	Mem70[fs:0x00000000<p32>:word32] = eax_13
	return
fn004229E0_exit:


void fn00422A90(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00407CD0
//      fn0042F170
//      fn00621380
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: eax ecx Top
// Preserved: esp
fn00422A90_entry:
l00422A90:
	Mem9[dwArg04:word32] = 0<32>
	return
fn00422A90_exit:


void fn00422AE0(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004295F0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn00422AE0_entry:
l00422AE0:
	word32 edx_19 = dwArg08
	word32 eax_21 = dwArg0C
	branch dwArg04 == dwArg08 l00422B0F
l00422AF1:
l00422AF3:
	edx_19 = edx_19 - 0x14C<32>
	eax_21 = eax_21 - 0x14C<32>
	word32 ecx_25 = 0x53<32>
	word32 esi_26 = edx_19
	word32 edi_27 = eax_21
l00422B09:
	branch ecx_25 == 0<32> l00422B0B
l00422B0B:
	branch edx_19 != dwArg04 l00422AF3
l00422B0D:
l00422B0F:
	return
fn00422AE0_exit:
l00422B09_1:
	Mem43[edi_27:word32] = Mem31[esi_26:word32]
	esi_26 = esi_26 + 4<i32>
	edi_27 = edi_27 + 4<i32>
	ecx_25 = ecx_25 - 1<32>


void fn00422B20(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00426470
//      fn0042B1F0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax edx Top
// Preserved: ebx ecx edi esi esp
fn00422B20_entry:
l00422B20:
	word32 edx_32 = dwArg08
	branch dwArg08 <=u 0<32> l00422B51
l00422B28:
	word32 eax_10 = dwArg04
l00422B33:
	branch eax_10 == 0<32> l00422B42
l00422B37:
	word32 ecx_25 = 0x53<32>
	word32 esi_27 = dwArg0C
	word32 edi_28 = eax_10
l00422B40:
	branch ecx_25 == 0<32> l00422B42
l00422B42:
	edx_32 = edx_32 - 1<32>
	eax_10 = eax_10 + 0x14C<32>
	branch edx_32 >u 0<32> l00422B33
l00422B4E:
l00422B51:
	return
fn00422B20_exit:
l00422B40_1:
	Mem56[edi_28:word32] = Mem45[esi_27:word32]
	esi_27 = esi_27 + 4<i32>
	edi_28 = edi_28 + 4<i32>
	ecx_25 = ecx_25 - 1<32>


word32 fn00422DB0(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042DF20
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn00422DB0_entry:
l00422DB0:
	word32 ecx_7 = Mem6[ecx:word32]
	Mem12[dwArg04:word32] = ecx_7
	branch ecx_7 == 0<32> l00422DC8
l00422DC4:
	Mem15[ecx_7 + 4<32>:word32] = Mem12[ecx_7 + 4<32>:word32] + 1<32>
l00422DC8:
	return dwArg04
fn00422DB0_exit:


void fn00422E10(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B310
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn00422E10_entry:
l00422E10:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem26[fs:0<32>:word32] = fp - 0xC<32>
	word32 ecx_29 = Mem28[ecx + 8<32>:word32]
	branch ecx_29 == 0<32> l00422E54
l00422E46:
	word32 v12_34 = Mem32[ecx_29 + 4<32>:word32] + 0xFFFFFFFF<32>
	Mem35[ecx_29 + 4<32>:word32] = v12_34
	branch v12_34 != 0<32> l00422E54
l00422E4C:
	word32 eax_38 = Mem35[ecx_29:word32]
	word32 edx_45
	call Mem35[eax_38:word32] (retsize: 4;)
		uses: eax:eax_38,ecx:ecx_29,edx:edx_45,Stack +0004:1<32>
		defs: edx:edx_45
l00422E54:
	Mem50[ecx + 8<32>:word32] = 0<32>
	Mem51[ecx:word32] = 0x8A6D78<32>
	Mem55[fs:0x00000000<p32>:word32] = eax_9
	return
fn00422E10_exit:


word32 fn00424930(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00429930
// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn00424930_entry:
l00424930:
	word32 edx_24 = Mem6[ecx + 4<32>:word32]
	word32 eax_19 = Mem6[edx_24 + 4<32>:word32]
	branch Mem6[eax_19 + 0x2D<32>:byte] != 0<8> l0042495A
l00424942:
	word32 esi_18 = Mem17[dwArg08:word32]
l00424945:
	branch Mem17[eax_19 + 0xC<32>:word32] >= esi_18 l0042494F
l0042494F:
	edx_24 = eax_19
	eax_19 = Mem17[eax_19:word32]
l0042494A:
	eax_19 = Mem17[eax_19 + 8<32>:word32]
l00424953:
	branch Mem17[eax_19 + 0x2D<32>:byte] == 0<8> l00424945
l00424959:
l0042495A:
	word32 eax_39 = Mem38[ecx + 4<32>:word32]
	branch edx_24 == eax_39 l0042497D
l00424965:
	branch Mem45[dwArg08:word32] < Mem45[edx_24 + 0xC<32>:word32] l0042497D
l0042497D:
	Mem59[dwArg04:word32] = eax_39
	return eax_39
l0042496C:
	Mem67[dwArg04:word32] = edx_24
	return edx_24
fn00424930_exit:


word32 fn00424A20(word32 ecx, word32 dwArg04, byte bArg08, word32 dwArg0C, word32 dwArg10, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004263B0
//      fn00428880
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..7] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00424A20_entry:
l00424A20:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	branch Mem30[ecx + 8<32>:word32] <u 0x7FFFFFE<32> l00424A8E
l00424A52:
	basic_string(fp - 0x50<32>, 0x8A6D80<32>)
	fn004019E0(fp - 0x34<32>, fp - 0x50<32>)
	call CxxThrowException (retsize: 4;)
		uses: ecx:fp - 0x34<32>,Stack +0004:fp - 0x34<32>,Stack +0008:0x999C68<32>,Stack +003C:0x990030<32>
l00424A8E:
	word32 eax_68 = Mem65[ecx + 4<32>:word32]
	fn004229E0(eax_68, dwArg0C, eax_68, dwArg10, 0<8>)
	word32 eax_89 = Mem79[ecx + 4<32>:word32]
	Mem92[ecx + 8<32>:word32] = Mem79[ecx + 8<32>:word32] + 1<32>
	branch dwArg0C != eax_89 l00424AC5
l00424AC5:
	branch bArg08 == 0<8> l00424AD9
l00424AD9:
	Mem97[dwArg0C + 8<32>:word32] = eax_68
	word32 eax_98 = Mem97[ecx + 4<32>:word32]
	branch dwArg0C != Mem97[eax_98 + 8<32>:word32] l00424AE7
l00424AE4:
	Mem101[eax_98 + 8<32>:word32] = eax_68
l00424ACC:
	Mem102[dwArg0C:word32] = eax_68
	word32 eax_103 = Mem102[ecx + 4<32>:word32]
	branch dwArg0C != Mem102[eax_103:word32] l00424AE7
l00424AD5:
	Mem106[eax_103:word32] = eax_68
l00424AB5:
	Mem107[eax_89 + 4<32>:word32] = eax_68
	Mem109[Mem107[ecx + 4<32>:word32]:word32] = eax_68
	Mem111[Mem109[ecx + 4<32>:word32] + 8<32>:word32] = eax_68
l00424AE7:
	word32 eax_116 = eax_68 + 4<32>
	word32 esi_117 = eax_68
	branch Mem113[Mem113[eax_68 + 4<32>:word32] + 0x2C<32>:byte] != 0<8> l00424BE5
l00424AF9:
l00424B00:
	word32 ecx_123 = Mem122[eax_116:word32]
	word32 edx_124 = Mem122[ecx_123 + 4<32>:word32]
	branch ecx_123 != Mem122[edx_124:word32] l00424B5A
l00424B5A:
	word32 edx_127 = Mem122[edx_124:word32]
	branch Mem122[edx_127 + 0x2C<32>:byte] != 0<8> l00424B78
l00424B78:
	branch esi_117 != Mem122[ecx_123:word32] l00424B86
l00424B7C:
	fn00420740(ecx, ecx_123)
	esi_117 = ecx_123
l00424B86:
	Mem152[Mem148[esi_117 + 4<32>:word32] + 0x2C<32>:byte] = 1<8>
	Mem155[Mem152[Mem152[esi_117 + 4<32>:word32] + 4<32>:word32] + 0x2C<32>:byte] = 0<8>
	word32 eax_157 = Mem155[Mem155[esi_117 + 4<32>:word32] + 4<32>:word32]
	word32 ecx_158 = Mem155[eax_157 + 8<32>:word32]
	Mem160[eax_157 + 8<32>:word32] = Mem155[ecx_158:word32]
	word32 edx_161 = Mem160[ecx_158:word32]
	branch Mem160[edx_161 + 0x2D<32>:byte] != 0<8> l00424BAF
l00424BAC:
	Mem164[edx_161 + 4<32>:word32] = eax_157
l00424BAF:
	Mem169[ecx_158 + 4<32>:word32] = Mem166[eax_157 + 4<32>:word32]
	word32 edx_172 = Mem169[ecx + 4<32>:word32]
	branch eax_157 != Mem169[edx_172 + 4<32>:word32] l00424BC2
l00424BC2:
	word32 edx_175 = Mem169[eax_157 + 4<32>:word32]
	branch eax_157 != Mem169[edx_175:word32] l00424BCD
l00424BCD:
	Mem178[edx_175 + 8<32>:word32] = ecx_158
l00424BC9:
	Mem179[edx_175:word32] = ecx_158
l00424BBD:
	Mem180[edx_172 + 4<32>:word32] = ecx_158
l00424BD0:
	Mem183[ecx_158:word32] = eax_157
	Mem184[eax_157 + 4<32>:word32] = ecx_158
l00424B62:
	Mem185[ecx_123 + 0x2C<32>:byte] = 1<8>
	Mem186[edx_127 + 0x2C<32>:byte] = 1<8>
	Mem189[Mem186[Mem186[eax_116:word32] + 4<32>:word32] + 0x2C<32>:byte] = 0<8>
	esi_117 = Mem189[Mem189[eax_116:word32] + 4<32>:word32]
l00424B09:
	word32 edx_192 = Mem122[edx_124 + 8<32>:word32]
	branch Mem122[edx_192 + 0x2C<32>:byte] != 0<8> l00424B2B
l00424B2B:
	branch esi_117 != Mem122[ecx_123 + 8<32>:word32] l00424B3A
l00424B30:
	fn004E2250(ecx, ecx_123)
	esi_117 = ecx_123
l00424B3A:
	Mem213[Mem210[esi_117 + 4<32>:word32] + 0x2C<32>:byte] = 1<8>
	Mem216[Mem213[Mem213[esi_117 + 4<32>:word32] + 4<32>:word32] + 0x2C<32>:byte] = 0<8>
	fn00420740(ecx, Mem216[Mem216[esi_117 + 4<32>:word32] + 4<32>:word32])
l00424B12:
	Mem232[ecx_123 + 0x2C<32>:byte] = 1<8>
	Mem233[edx_192 + 0x2C<32>:byte] = 1<8>
	Mem236[Mem233[Mem233[eax_116:word32] + 4<32>:word32] + 0x2C<32>:byte] = 0<8>
	esi_117 = Mem236[Mem236[eax_116:word32] + 4<32>:word32]
l00424BD5:
	eax_116 = esi_117 + 4<32>
	branch Mem242[Mem242[esi_117 + 4<32>:word32] + 0x2C<32>:byte] == 0<8> l00424B00
l00424BE5:
	word32 edx_252 = Mem251[ecx + 4<32>:word32]
	Mem260[Mem251[edx_252 + 4<32>:word32] + 0x2C<32>:byte] = 1<8>
	Mem274[dwArg04:word32] = eax_68
	Mem284[fs:0x00000000<p32>:word32] = eax_9
	edxOut = edx_252
	return dwArg04
fn00424A20_exit:


void fn00424E30(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428EA0
//      fn004292A0
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn00424E30_entry:
l00424E30:
	Mem12[ecx:word32] = Mem8[dwArg04:word32]
	Mem14[ecx + 4<32>:word32] = Mem12[dwArg04 + 4<32>:word32]
	Mem16[ecx + 8<32>:word32] = Mem14[dwArg04 + 8<32>:word32]
	Mem18[ecx + 0xC<32>:word32] = Mem16[dwArg04 + 0xC<32>:word32]
	Mem20[ecx + 0x10<32>:word32] = Mem18[dwArg04 + 0x10<32>:word32]
	Mem22[ecx + 0x14<32>:word32] = Mem20[dwArg04 + 0x14<32>:word32]
	Mem24[ecx + 0x18<32>:word32] = Mem22[dwArg04 + 0x18<32>:word32]
	Mem26[ecx + 0x1C<32>:word32] = Mem24[dwArg04 + 0x1C<32>:word32]
	Mem28[ecx + 0x20<32>:word32] = Mem26[dwArg04 + 0x20<32>:word32]
	Mem30[ecx + 0x24<32>:word32] = Mem28[dwArg04 + 0x24<32>:word32]
	Mem32[ecx + 0x28<32>:word32] = Mem30[dwArg04 + 0x28<32>:word32]
	Mem34[ecx + 0x2C<32>:word32] = Mem32[dwArg04 + 0x2C<32>:word32]
	Mem36[ecx + 0x30<32>:byte] = Mem34[dwArg04 + 0x30<32>:byte]
	word32 eax_37 = Mem36[dwArg04 + 0x34<32>:word32]
	word32 edi_41 = Mem40[ecx + 0x34<32>:word32]
	branch edi_41 == eax_37 l00424EB5
l00424E8E:
	Mem46[ecx + 0x34<32>:word32] = eax_37
	branch eax_37 == 0<32> l00424E9C
l00424E95:
	fn00401AD0(eax_37)
l00424E9C:
	branch edi_41 == 0<32> l00424EB5
l00424EA0:
	word32 eax_58 = fn00401AE0(edi_41)
	branch eax_58 != 1<32> l00424EB5
l00424EAC:
	word32 edx_66 = Mem46[edi_41:word32]
	call Mem69[edx_66:word32] (retsize: 4;)
		uses: ecx:edi_41,edx:edx_66,Stack +0004:eax_58,Stack +0014:dwArg04
l00424EB5:
	return
fn00424E30_exit:


void fn00424EC0(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004298F0
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn00424EC0_entry:
l00424EC0:
	Mem12[ecx:word32] = Mem8[dwArg04:word32]
	Mem14[ecx + 4<32>:word32] = Mem12[dwArg04 + 4<32>:word32]
	Mem16[ecx + 8<32>:word32] = Mem14[dwArg04 + 8<32>:word32]
	Mem18[ecx + 0xC<32>:word32] = Mem16[dwArg04 + 0xC<32>:word32]
	Mem20[ecx + 0x10<32>:word32] = Mem18[dwArg04 + 0x10<32>:word32]
	Mem22[ecx + 0x14<32>:word32] = Mem20[dwArg04 + 0x14<32>:word32]
	Mem24[ecx + 0x18<32>:word32] = Mem22[dwArg04 + 0x18<32>:word32]
	Mem26[ecx + 0x1C<32>:word32] = Mem24[dwArg04 + 0x1C<32>:word32]
	Mem28[ecx + 0x20<32>:word32] = Mem26[dwArg04 + 0x20<32>:word32]
	Mem30[ecx + 0x24<32>:word32] = Mem28[dwArg04 + 0x24<32>:word32]
	Mem32[ecx + 0x28<32>:word32] = Mem30[dwArg04 + 0x28<32>:word32]
	Mem34[ecx + 0x2C<32>:word32] = Mem32[dwArg04 + 0x2C<32>:word32]
	Mem36[ecx + 0x30<32>:byte] = Mem34[dwArg04 + 0x30<32>:byte]
	word32 eax_37 = Mem36[dwArg04 + 0x34<32>:word32]
	Mem40[ecx + 0x34<32>:word32] = eax_37
	branch eax_37 == 0<32> l00424F24
l00424F1D:
	fn00401AD0(eax_37)
l00424F24:
	return
fn00424EC0_exit:


void fn00424FD0(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B310
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: esi esp
fn00424FD0_entry:
l00424FD0:
	word32 ecx_7 = Mem6[ecx:word32]
	Mem15[dwArg04:word32] = ecx_7
	branch ecx_7 == 0<32> l00424FEB
l00424FE6:
	fn00401AD0(ecx_7)
l00424FEB:
	return
fn00424FD0_exit:


word32 fn00426100(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428A30
//      fn00429930
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00426100_entry:
l00426100:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	word32 eax_33 = dwArg08
	branch Mem30[dwArg08 + 0x2D<32>:byte] == 0<8> l0042616F
l00426133:
	basic_string(fp - 0x50<32>, 0x8A6D94<32>)
	fn004019E0(fp - 0x34<32>, fp - 0x50<32>)
	call CxxThrowException (retsize: 4;)
		uses: ecx:fp - 0x34<32>,Stack +0004:fp - 0x34<32>,Stack +0008:0x99A88C<32>,Stack +0040:0x99003C<32>,Stack +007C:dwArg08
		defs: eax:eax_60
l0042616F:
	word32 esi_104
	word32 edi_129
	word32 edx_305 = fn005B0EC0(fp + 8<32>)
	word32 eax_76 = Mem69[eax_33:word32]
	branch Mem69[eax_76 + 0x2D<32>:byte] == 0<8> l0042618B
l0042618B:
	edx_305 = Mem69[eax_33 + 8<32>:word32]
	branch Mem69[edx_305 + 0x2D<32>:byte] == 0<8> l00426198
l00426198:
	edi_129 = Mem69[dwArg08 + 8<32>:word32]
	branch dwArg08 != eax_33 l0042620E
l0042620E:
	Mem86[eax_76 + 4<32>:word32] = dwArg08
	word32 edx_87 = Mem86[eax_33:word32]
	Mem88[dwArg08:word32] = edx_87
	word24 edx_24_8_497 = SLICE(edx_87, word24, 8)
	branch dwArg08 != Mem88[eax_33 + 8<32>:word32] l0042621E
l0042621E:
	esi_104 = Mem88[dwArg08 + 4<32>:word32]
	branch Mem88[edi_129 + 0x2D<32>:byte] != 0<8> l0042622A
l00426227:
	Mem94[edi_129 + 4<32>:word32] = esi_104
l0042622A:
	Mem97[esi_104:word32] = edi_129
	Mem101[dwArg08 + 8<32>:word32] = Mem97[eax_33 + 8<32>:word32]
	word32 edx_102 = Mem101[eax_33 + 8<32>:word32]
	Mem103[edx_102 + 4<32>:word32] = dwArg08
	edx_24_8_497 = SLICE(edx_102, word24, 8) (alias)
l0042621A:
	esi_104 = dwArg08
l00426238:
	word32 eax_109 = Mem108[ecx + 4<32>:word32]
	branch Mem108[eax_109 + 4<32>:word32] != eax_33 l00426245
l00426245:
	word32 eax_113 = Mem108[eax_33 + 4<32>:word32]
	branch Mem108[eax_113:word32] != eax_33 l00426250
l00426250:
	Mem117[eax_113 + 8<32>:word32] = dwArg08
l0042624C:
	Mem118[eax_113:word32] = dwArg08
l00426240:
	Mem119[eax_109 + 4<32>:word32] = dwArg08
l00426253:
	Mem124[dwArg08 + 4<32>:word32] = Mem121[eax_33 + 4<32>:word32]
	byte dl_125 = Mem124[eax_33 + 0x2C<32>:byte]
	byte al_126 = Mem124[dwArg08 + 0x2C<32>:byte]
	Mem127[dwArg08 + 0x2C<32>:byte] = dl_125
	Mem128[eax_33 + 0x2C<32>:byte] = al_126
	edx_305 = SEQ(edx_24_8_497, dl_125) (alias)
l00426194:
	edi_129 = eax_76
l00426186:
	edi_129 = Mem69[eax_33 + 8<32>:word32]
l004261A3:
	esi_104 = Mem69[eax_33 + 4<32>:word32]
	branch Mem69[edi_129 + 0x2D<32>:byte] != 0<8> l004261AF
l004261AC:
	Mem137[edi_129 + 4<32>:word32] = esi_104
l004261AF:
	word32 eax_141 = Mem140[ecx + 4<32>:word32]
	branch Mem140[eax_141 + 4<32>:word32] != eax_33 l004261BC
l004261BC:
	branch Mem140[esi_104:word32] != eax_33 l004261C4
l004261C4:
	Mem149[esi_104 + 8<32>:word32] = edi_129
l004261C0:
	Mem150[esi_104:word32] = edi_129
l004261B7:
	Mem151[eax_141 + 4<32>:word32] = edi_129
l004261C7:
	word32 ebx_154 = Mem153[ecx + 4<32>:word32]
	branch Mem153[ebx_154:word32] != eax_33 l004261E7
l004261D2:
	word32 eax_166
	branch Mem153[edi_129 + 0x2D<32>:byte] == 0<8> l004261DC
l004261DC:
	eax_166 = fn00406ED0(edi_129)
l004261D8:
	eax_166 = esi_104
l004261E5:
	Mem178[ebx_154:word32] = eax_166
l004261E7:
	word32 ebx_182 = Mem181[ecx + 4<32>:word32]
	branch Mem181[ebx_182 + 8<32>:word32] != eax_33 l00426265
l004261F3:
	branch Mem181[edi_129 + 0x2D<32>:byte] == 0<8> l00426200
l00426200:
	Mem202[ebx_182 + 8<32>:word32] = fn004E6960(edi_129)
l004261F9:
	Mem206[ebx_182 + 8<32>:word32] = esi_104
l00426265:
	branch Mem211[eax_33 + 0x2C<32>:byte] != 1<8> l00426366
l00426274:
	branch edi_129 == Mem211[Mem211[ecx + 4<32>:word32] + 4<32>:word32] l00426363
l00426280:
	branch Mem225[edi_129 + 0x2C<32>:byte] != 1<8> l00426363
l00426289:
	word32 eax_230 = Mem225[esi_740:word32]
	branch edi_129 != eax_230 l004262F2
l004262F2:
	branch Mem225[eax_230 + 0x2C<32>:byte] != 0<8> l00426309
l004262F8:
	Mem235[eax_230 + 0x2C<32>:byte] = 1<8>
	Mem241[esi_740 + 0x2C<32>:byte] = 0<8>
	fn00420740(ecx, esi_740)
	eax_230 = Mem241[esi_740:word32]
l00426309:
	branch Mem252[eax_230 + 0x2D<32>:byte] != 0<8> l00426322
l0042630F:
	word32 edx_255 = Mem252[eax_230 + 8<32>:word32]
	branch Mem252[edx_255 + 0x2C<32>:byte] != 1<8> l00426335
l00426317:
	branch Mem252[Mem252[eax_230:word32] + 0x2C<32>:byte] != 1<8> l00426335
l00426335:
	branch Mem252[Mem252[eax_230:word32] + 0x2C<32>:byte] != 1<8> l0042634D
l0042633C:
	Mem269[edx_255 + 0x2C<32>:byte] = 1<8>
	Mem277[eax_230 + 0x2C<32>:byte] = 0<8>
	fn004E2250(ecx, eax_230)
	eax_230 = Mem277[esi_740:word32]
l0042634D:
	Mem293[eax_230 + 0x2C<32>:byte] = Mem290[esi_740 + 0x2C<32>:byte]
	Mem295[esi_740 + 0x2C<32>:byte] = 1<8>
	Mem302[Mem295[eax_230:word32] + 0x2C<32>:byte] = 1<8>
	edx_305 = fn00420740(ecx, esi_740)
l0042628F:
	eax_230 = Mem225[esi_740 + 8<32>:word32]
	branch Mem225[eax_230 + 0x2C<32>:byte] != 0<8> l004262AA
l00426298:
	Mem314[eax_230 + 0x2C<32>:byte] = 1<8>
	Mem318[esi_740 + 0x2C<32>:byte] = 0<8>
	fn004E2250(ecx, esi_740)
	eax_230 = Mem318[esi_740 + 8<32>:word32]
l004262AA:
	branch Mem329[eax_230 + 0x2D<32>:byte] != 0<8> l00426322
l004262B0:
	word32 edx_332 = Mem329[eax_230:word32]
	branch Mem329[edx_332 + 0x2C<32>:byte] != 1<8> l004262BF
l004262B7:
	branch Mem329[Mem329[eax_230 + 8<32>:word32] + 0x2C<32>:byte] == 1<8> l0042631E
l0042631E:
	Mem340[eax_230 + 0x2C<32>:byte] = 0<8>
l00426322:
	edx_305 = Mem344[ecx + 4<32>:word32]
	edi_129 = esi_740
	esi_104 = Mem344[esi_740 + 4<32>:word32]
	esi_740 = esi_104
	branch esi_740 != Mem344[edx_305 + 4<32>:word32] l00426280
l00426333:
l004262BF:
	branch Mem329[Mem329[eax_230 + 8<32>:word32] + 0x2C<32>:byte] != 1<8> l004262D9
l004262C7:
	Mem360[edx_332 + 0x2C<32>:byte] = 1<8>
	Mem367[eax_230 + 0x2C<32>:byte] = 0<8>
	fn00420740(ecx, eax_230)
	eax_230 = Mem367[esi_740 + 8<32>:word32]
l004262D9:
	Mem382[eax_230 + 0x2C<32>:byte] = Mem379[esi_740 + 0x2C<32>:byte]
	Mem384[esi_740 + 0x2C<32>:byte] = 1<8>
	Mem391[Mem384[eax_230 + 8<32>:word32] + 0x2C<32>:byte] = 1<8>
	edx_305 = fn004E2250(ecx, esi_740)
l00426363:
	Mem410[edi_129 + 0x2C<32>:byte] = 1<8>
l00426366:
	~basic_string(eax_33 + 0x10<32>)
	operator delete(eax_33)
	word32 eax_423 = Mem420[ecx + 8<32>:word32]
	branch eax_423 <=u 0<32> l0042638D
l00426387:
	Mem431[ecx + 8<32>:word32] = eax_423 + 0xFFFFFFFF<32>
l0042638D:
	Mem436[dwArg04:word32] = dwArg08
	Mem460[fs:0x00000000<p32>:word32] = eax_9
	return edx_305
fn00426100_exit:


word32 fn004263B0(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428880
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp edi esi esp
fn004263B0_entry:
l004263B0:
	word32 esi_18 = Mem16[ecx + 4<32>:word32]
	word24 nLoc03_184 = SLICE(ecx, word24, 8)
	word32 eax_19 = Mem16[esi_18 + 4<32>:word32]
	byte cl_21 = 1<8>
	word32 dwLoc04_183 = SEQ(nLoc03_184, 1<8>)
	branch Mem16[eax_19 + 0x2D<32>:byte] != 0<8> l004263ED
l004263CC:
	word32 edx_24 = Mem22[dwArg08:word32]
l004263D0:
	cl_21 = CONVERT(edx_24 < Mem27[eax_19 + 0xC<32>:word32], bool, int8)
	esi_18 = eax_19
	dwLoc04_183 = SEQ(nLoc03_184, cl_21) (alias)
	branch cl_21 == 0<8> l004263E4
l004263E4:
	eax_19 = Mem35[eax_19 + 8<32>:word32]
l004263E0:
	eax_19 = Mem35[eax_19:word32]
l004263E7:
	branch Mem35[eax_19 + 0x2D<32>:byte] == 0<8> l004263D0
l004263ED:
	branch cl_21 == 0<8> l0042642A
l004263F7:
	branch esi_18 != Mem52[Mem52[ecx + 4<32>:word32]:word32] l00426421
l00426421:
	fn005F58C0(fp + 8<32>)
l0042642A:
	branch Mem52[esi_18 + 0xC<32>:word32] >= Mem52[dwArg08:word32] l00426458
l00426458:
	Mem83[dwArg04 + 4<32>:byte] = 0<8>
	Mem84[dwArg04:word32] = esi_18
	edxOut = esi_18
	return <invalid>
l00426432:
	word32 edx_109
	Mem121[dwArg04:word32] = Mem99[fn00424A20(ecx, fp + 8<32>, SLICE(dwLoc04_183, byte, 0), esi_18, dwArg08, out edx_109):word32]
	Mem122[dwArg04 + 4<32>:byte] = 1<8>
	edxOut = edx_109
	return <invalid>
l00426402:
	word32 edx_221
	word32 edx_144 = Mem134[fn00424A20(ecx, fp + 8<32>, 1<8>, esi_18, dwArg08, out edx_221):word32]
	Mem150[dwArg04 + 4<32>:byte] = 1<8>
	Mem151[dwArg04:word32] = edx_144
	edxOut = edx_144
	return <invalid>
fn004263B0_exit:


word32 fn00426470(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004295F0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn00426470_entry:
l00426470:
	fn00422B20(dwArg04, dwArg08, dwArg0C)
	return dwArg08 *s 0x14C<32> + dwArg04
fn00426470_exit:


word32 fn004264B0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00426500
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn004264B0_entry:
l004264B0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem20[fs:0<32>:word32] = fp - 0xC<32>
	Mem23[ecx:word32] = 0<32>
	Mem24[ecx + 4<32>:byte] = 1<8>
	Mem25[ecx + 0xC<32>:word32] = 0<32>
	Mem26[ecx + 0x10<32>:word32] = 0<32>
	Mem27[ecx + 0x14<32>:word32] = 0<32>
	Mem28[ecx + 0x1C<32>:word32] = 0<32>
	Mem29[ecx + 0x20<32>:word32] = 0<32>
	Mem30[ecx + 0x24<32>:word32] = 0<32>
	Mem32[fs:0x00000000<p32>:word32] = eax_9
	return ecx
fn004264B0_exit:


word32 fn00426500()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0061FAC0
//      fn0061FB20
// MayUse:  fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn00426500_entry:
l00426500:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem20[fs:0<32>:word32] = fp - 0xC<32>
	word32 eax_21 = Mem20[0x00A67C98<p32>:word32]
	branch eax_21 != 0<32> l00426567
l0042652A:
	word32 eax_27 = operator new(0x28<32>)
	branch eax_27 == 0<32> l00426560
l00426560:
	Mem37[0x00A67C98<p32>:word32] = 0<32>
	eax_21 = 0<32>
l00426567:
	Mem42[fs:0x00000000<p32>:word32] = eax_9
	return eax_21
l00426544:
	word32 eax_48 = fn004264B0(eax_27)
	Mem54[0x00A67C98<p32>:word32] = eax_48
	Mem56[fs:0x00000000<p32>:word32] = eax_9
	return eax_48
fn00426500_exit:


void fn00428850(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042CFC0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn00428850_entry:
l00428850:
	word32 esi_15 = dwArg04
	branch dwArg04 == dwArg08 l0042886E
l0042885E:
l00428860:
	fn005B87B0(esi_15)
	esi_15 = esi_15 + 0x38<32>
	branch esi_15 != dwArg08 l00428860
l0042886E:
	return
fn00428850_exit:


word32 fn00428880(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428F30
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00428880_entry:
l00428880:
	branch Mem10[ecx + 8<32>:word32] != 0<32> l004288AE
l004288AE:
	word32 eax_15 = Mem10[ecx + 4<32>:word32]
	branch dwArg08 != Mem19[eax_15:word32] l004288E4
l004288E4:
	branch dwArg08 != eax_15 l00428912
l00428912:
	word32 ebp_28 = Mem24[dwArg0C:word32]
	bool v19_309 = Mem24[dwArg08 + 0xC<32>:word32] >= ebp_28
	branch Mem24[dwArg08 + 0xC<32>:word32] <= ebp_28 l0042896C
l00428919:
	fn005F58C0(fp + 0xC<32>)
	branch Mem32[dwArg08 + 0xC<32>:word32] >= ebp_28 l00428969
l00428969:
	v19_309 = Mem32[dwArg08 + 0xC<32>:word32] >= ebp_28
l0042896C:
	branch v19_309 l004289C3
l0042896E:
	fn005B0EC0(fp + 0xC<32>)
	branch dwArg08 == Mem49[ecx + 4<32>:word32] l00428989
l00428984:
	branch ebp_28 >= Mem49[dwArg08 + 0xC<32>:word32] l004289C3
l00428989:
	branch Mem49[Mem49[dwArg08 + 8<32>:word32] + 0x2D<32>:byte] == 0<8> l004289AE
l004289AE:
	word32 edx_88
	fn00424A20(ecx, dwArg04, 1<8>, dwArg08, dwArg0C, out edx_88)
	edxOut = edx_88
	return <invalid>
l00428999:
	word32 edx_113
	fn00424A20(ecx, dwArg04, 0<8>, dwArg08, dwArg0C, out edx_113)
	edxOut = edx_113
	return <invalid>
l0042892F:
	branch Mem32[Mem32[dwArg08 + 8<32>:word32] + 0x2D<32>:byte] == 0<8> l00428954
l00428954:
	word32 edx_145
	fn00424A20(ecx, dwArg04, 1<8>, dwArg08, dwArg0C, out edx_145)
	edxOut = edx_145
	return <invalid>
l0042893F:
	word32 edx_170
	fn00424A20(ecx, dwArg04, 0<8>, dwArg08, dwArg0C, out edx_170)
	edxOut = edx_170
	return <invalid>
l004288E8:
	word32 eax_187 = Mem24[eax_15 + 8<32>:word32]
	branch Mem24[eax_187 + 0xC<32>:word32] >= Mem24[dwArg0C:word32] l004289C3
l004288F6:
	word32 edx_203
	fn00424A20(ecx, dwArg04, 0<8>, eax_187, dwArg0C, out edx_203)
	edxOut = edx_203
	return <invalid>
l004288BF:
	branch Mem24[dwArg0C:word32] >= Mem24[dwArg08 + 0xC<32>:word32] l004289C3
l004289C3:
	word32 edx_235
	Mem249[dwArg04:word32] = Mem229[fn004263B0(ecx, fp - 8<32>, dwArg0C, out edx_235):word32]
	edxOut = edx_235
	return <invalid>
l004288CA:
	word32 edx_265
	fn00424A20(ecx, dwArg04, 1<8>, dwArg08, dwArg0C, out edx_265)
	edxOut = edx_265
	return <invalid>
l0042888D:
	word32 edx_296
	fn00424A20(ecx, dwArg04, 1<8>, Mem10[ecx + 4<32>:word32], dwArg0C, out edx_296)
	edxOut = edx_296
	return <invalid>
fn00428880_exit:


void fn00428A30(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A250
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn00428A30_entry:
l00428A30:
	word32 esi_108 = dwArg08
	word32 eax_17 = Mem14[ecx + 4<32>:word32]
	branch dwArg08 != Mem14[eax_17:word32] l00428A7A
l00428A44:
	branch dwArg0C != eax_17 l00428A7A
l00428A7A:
	branch dwArg08 == dwArg0C l00428AD8
l00428A7E:
l00428A80:
	branch Mem29[esi_108 + 0x2D<32>:byte] != 0<8> l00428AC7
l00428A88:
	word32 eax_33 = Mem29[esi_108 + 8<32>:word32]
	branch Mem29[eax_33 + 0x2D<32>:byte] != 0<8> l00428AAC
l00428AAC:
	word32 eax_36 = Mem29[esi_108 + 4<32>:word32]
	esi_39 = esi_108
	branch Mem29[eax_36 + 0x2D<32>:byte] != 0<8> l00428AC5
l00428AB5:
	word32 esi_39
	branch esi_39 != Mem29[eax_36 + 8<32>:word32] l00428AC5
l00428ABA:
	esi_39 = eax_36
	eax_36 = Mem29[eax_36 + 4<32>:word32]
	branch Mem29[eax_36 + 0x2D<32>:byte] == 0<8> l00428AB5
l00428AC5:
	esi_108 = eax_36
l00428A91:
	esi_108 = eax_33
	word32 eax_51 = Mem29[eax_33:word32]
	branch Mem29[eax_51 + 0x2D<32>:byte] != 0<8> l00428AC7
l00428A9B:
l00428AA0:
	esi_108 = eax_51
	eax_51 = Mem29[eax_51:word32]
	branch Mem29[eax_51 + 0x2D<32>:byte] == 0<8> l00428AA0
l00428AAA:
l00428AC7:
	fn00426100(ecx, fp + 8<32>, esi_108)
	branch esi_108 != dwArg0C l00428A80
l00428AD8:
	Mem109[dwArg04:word32] = esi_108
	return
l00428A48:
	fn004064E0(Mem14[eax_17 + 4<32>:word32])
	word32 eax_124 = Mem116[ecx + 4<32>:word32]
	Mem125[eax_124 + 4<32>:word32] = eax_124
	word32 eax_126 = Mem125[ecx + 4<32>:word32]
	Mem127[ecx + 8<32>:word32] = 0<32>
	Mem128[eax_126:word32] = eax_126
	word32 eax_129 = Mem128[ecx + 4<32>:word32]
	Mem130[eax_129 + 8<32>:word32] = eax_129
	Mem138[dwArg04:word32] = Mem130[Mem130[ecx + 4<32>:word32]:word32]
	return
fn00428A30_exit:


word32 fn00428EA0(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042CFC0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn00428EA0_entry:
l00428EA0:
	word32 esi_11 = dwArg04
	word32 edi_16 = dwArg0C
	branch dwArg04 == dwArg08 l00428EC5
l00428EB3:
	fn00424E30(edi_16, esi_11)
	esi_11 = esi_11 + 0x38<32>
	edi_16 = edi_16 + 0x38<32>
	branch esi_11 != dwArg08 l00428EB3
l00428EC5:
	return edi_16
fn00428EA0_exit:


word32 fn00428ED0(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004295F0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00428ED0_entry:
l00428ED0:
	word32 edx_50
	return fn00422320(dwArg04, dwArg08, dwArg0C, out edx_50)
fn00428ED0_exit:


word32 fn00428F30(word32 ecx, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00429930
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp edi esi esp
fn00428F30_entry:
l00428F30:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem27[fs:0<32>:word32] = fp - 0xC<32>
	word32 ecx_30 = Mem27[ecx + 4<32>:word32]
	word32 eax_31 = Mem27[ecx_30 + 4<32>:word32]
	word32 esi_105 = ecx_30
	branch Mem27[eax_31 + 0x2D<32>:byte] != 0<8> l00428F84
l00428F6A:
	word32 ecx_36 = Mem27[dwArg04:word32]
l00428F70:
	branch Mem27[eax_31 + 0xC<32>:word32] >= ecx_36 l00428F7A
l00428F7A:
	esi_105 = eax_31
	eax_31 = Mem27[eax_31:word32]
l00428F75:
	eax_31 = Mem27[eax_31 + 8<32>:word32]
l00428F7E:
	branch Mem27[eax_31 + 0x2D<32>:byte] == 0<8> l00428F70
l00428F84:
	branch esi_105 == Mem27[ecx + 4<32>:word32] l00428F91
l00428F89:
	branch Mem27[dwArg04:word32] >= Mem27[esi_105 + 0xC<32>:word32] l00428FEF
l00428F91:
	basic_string(fp - 0x28<32>, basic_string(fp - 0x48<32>))
	esi_105 = Mem92[fn00428880(ecx, fp + 4<32>, esi_105, fp - 0x2C<32>, out edx):word32]
	~basic_string(fp - 0x28<32>)
	~basic_string(fp - 0x48<32>)
l00428FEF:
	Mem116[fs:0x00000000<p32>:word32] = eax_9
	edxOut = edx
	return esi_105 + 0x10<32>
fn00428F30_exit:


void fn004292A0(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042CFC0
// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004292A0_entry:
l004292A0:
	word32 edi_10 = dwArg0C
	branch dwArg08 == dwArg0C l004292F7
l004292B0:
	word32 ebx_19 = Mem18[ecx + 8<32>:word32]
	word32 esi_24 = dwArg08
	branch dwArg0C == ebx_19 l004292D6
l004292BB:
l004292C0:
	fn00424E30(esi_24, edi_10)
	edi_10 = edi_10 + 0x38<32>
	esi_24 = esi_24 + 0x38<32>
	branch edi_10 != ebx_19 l004292C0
l004292D2:
l004292D6:
	word32 ebx_49 = Mem48[ecx + 8<32>:word32]
	word32 edi_52 = esi_24
	branch esi_24 == ebx_49 l004292F2
l004292DF:
l004292E0:
	fn005B87B0(edi_52)
	edi_52 = edi_52 + 0x38<32>
	branch edi_52 != ebx_49 l004292E0
l004292EE:
l004292F2:
	Mem75[ecx + 8<32>:word32] = esi_24
l004292F7:
	Mem89[dwArg04:word32] = dwArg08
	return
fn004292A0_exit:


word32 fn004295F0(word32 ecx, word32 edx, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A0A0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: edi esi
// Trashed: SCZDOP eax ebx ecx edi edx esi FPUF Top
// Preserved: ebp esp
fn004295F0_entry:
l004295F0:
	word32 eax_14 = Mem12[fs:0<32>:word32]
	word32 eax_19 = Mem16[0x00A14188<p32>:word32] ^ fp - 0x154<32>
	Mem35[fs:0<32>:word32] = fp - 0x160<32>
	word32 esp_215 = fp - 0x17C<32>
	word32 eax_208 = fp - 0x160<32>
	word32 esi_37 = dwArg0C
	word32 ecx_40 = 0x53<32>
	word32 edi_41 = fp - 0x154<32>
l0042963C:
	branch ecx_40 == 0<32> l0042963E
l0042963E:
	word32 esi_139
	word32 ecx_101 = Mem44[ecx + 4<32>:word32]
	branch ecx_101 != 0<32> l00429649
l00429649:
	word32 edx_50 = Mem44[ecx + 0xC<32>:word32] - ecx_101
	word32 edx_53 = SLICE(edx_50 *s64 0x3159721F<32>, word32, 32)
	eax_208 = SLICE(edx_50 *s64 0x3159721F<32>, word32, 0) (alias)
	edx = edx_53 >> 6<32>
	esi_139 = (edx_53 >> 6<32> >>u 0x1F<32>) + (edx_53 >> 6<32>)
l00429645:
	esi_139 = 0<32>
l0042965F:
	branch dwArg08 == 0<32> l0042988B
l0042966D:
	word32 eax_82
	branch ecx_101 != 0<32> l00429675
l00429675:
	word32 edx_78 = SLICE((Mem44[ecx + 8<32>:word32] - ecx_101) *s64 0x3159721F<32>, word32, 32)
	eax_82 = (edx_78 >> 6<32> >>u 0x1F<32>) + (edx_78 >> 6<32>)
l00429671:
	eax_82 = 0<32>
l0042968B:
	branch 0xC565C8<32> - eax_82 >=u dwArg08 l0042969B
l00429696:
	ecx_101 = fn00420AA0(eax_19, edi)
l0042969B:
	word32 eax_127
	branch ecx_101 != 0<32> l004296A3
l004296A3:
	word32 edx_123 = SLICE((Mem44[ecx + 8<32>:word32] - ecx_101) *s64 0x3159721F<32>, word32, 32)
	eax_127 = (edx_123 >> 6<32> >>u 0x1F<32>) + (edx_123 >> 6<32>)
l0042969F:
	eax_127 = 0<32>
l004296B9:
	branch esi_139 >=u eax_127 + dwArg08 l004297CE
l004297CE:
	word32 ecx_144 = Mem44[ecx + 8<32>:word32]
	word32 edx_153 = SLICE((ecx_144 - dwArg04) *s64 0x3159721F<32>, word32, 32)
	branch (edx_153 >> 6<32> >>u 0x1F<32>) + (edx_153 >> 6<32>) >=u dwArg08 l00429853
l00429853:
	word32 eax_167 = ecx_144 - dwArg08 *s 0x14C<32>
	Mem184[ecx + 8<32>:word32] = fn00428ED0(eax_167, ecx_144, ecx_144)
	fn00422AE0(dwArg04, eax_167, ecx_144)
	eax_208 = fn00422220(dwArg04, dwArg08 *s 0x14C<32> + dwArg04, fp - 0x154<32>, out edx)
	esp_215 = fp - 0x17C<32>
l004297F3:
	fn00428ED0(dwArg04, ecx_144, dwArg08 *s 0x14C<32> + dwArg04)
	word32 ecx_237 = Mem227[ecx + 8<32>:word32]
	word32 edx_245 = SLICE((ecx_237 - dwArg04) *s64 0x3159721F<32>, word32, 32)
	fn00426470(ecx_237, dwArg08 - (((edx_245 >> 6<32>) >>u 0x1F<32>) + (edx_245 >> 6<32>)), fp - 0x154<32>)
	Mem268[ecx + 8<32>:word32] = Mem257[ecx + 8<32>:word32] + dwArg08 *s 0x14C<32>
	eax_208 = fn00422220(dwArg04, Mem268[ecx + 8<32>:word32] - dwArg08 *s 0x14C<32>, fp - 0x154<32>, out edx)
	esp_215 = fp - 0x17C<32>
l004296C3:
	word32 esi_294
	word32 eax_289 = esi_139 >>u 1<32>
	branch 0xC565C8<32> - eax_289 >=u esi_139 l004296D6
l004296D6:
	esi_294 = esi_139 + eax_289
l004296D2:
	esi_294 = 0<32>
l004296D8:
	word32 eax_314
	branch ecx_101 != 0<32> l004296E0
l004296E0:
	word32 edx_310 = SLICE((Mem44[ecx + 8<32>:word32] - ecx_101) *s64 0x3159721F<32>, word32, 32)
	eax_314 = (edx_310 >> 6<32> >>u 0x1F<32>) + (edx_310 >> 6<32>)
l004296DC:
	eax_314 = 0<32>
l004296F6:
	branch esi_294 >=u eax_314 + dwArg08 l00429707
l004296FC:
	esi_294 = fn00420840(ecx) + dwArg08
l00429707:
	word32 eax_445
	word32 esi_355
	word32 eax_352 = fn00420C00(esi_294, esi_294, out esi_355)
	word32 esp_356 = <invalid>
	word32 ecx_362 = Mem346[ecx + 4<32>:word32]
	word32 dwLoc0168_648 = SEQ(nLoc0167, 0<8>)
	Mem369[esp_356 - 4<i32>:word32] = dwLoc0168_648
	Mem372[esp_356 - 8<i32>:word32] = dwLoc0168_648
	Mem374[esp_356 - 12<i32>:word32] = ecx
	Mem376[esp_356 - 16<i32>:word32] = eax_352
	Mem380[esp_356 - 20<i32>:word32] = dwArg04
	Mem382[esp_356 - 24<i32>:word32] = ecx_362
	word32 edx_719
	word32 eax_384 = fn00422320(Mem383[esp_356 - 24<i32>:word32], Mem383[esp_356 - 20<i32>:word32], Mem383[esp_356 - 16<i32>:word32], out edx_719)
	Mem394[esp_356 + 4<32>:word32] = fp - 0x154<32>
	Mem397[esp_356:word32] = dwArg08
	Mem399[esp_356 - 4<i32>:word32] = eax_384
	word32 eax_401 = fn00426470(Mem399[esp_356 - 4<i32>:word32], Mem399[esp_356:word32], Mem399[esp_356 + 4<i32>:word32])
	word32 ecx_409 = Mem399[ecx + 8<32>:word32]
	Mem413[esp_356 + 4<32>:word32] = dwLoc0168_648
	Mem416[esp_356:word32] = dwLoc0168_648
	Mem418[esp_356 - 4<i32>:word32] = ecx
	Mem420[esp_356 - 8<i32>:word32] = eax_401
	Mem423[esp_356 - 12<i32>:word32] = ecx_409
	Mem425[esp_356 - 16<i32>:word32] = dwArg04
	fn00422320(Mem425[esp_356 - 16<i32>:word32], Mem425[esp_356 - 12<i32>:word32], Mem425[esp_356 - 8<i32>:word32], out edx)
	word32 ecx_432 = Mem425[ecx + 4<32>:word32]
	branch ecx_432 != 0<32> l00429773
l00429773:
	word32 edx_441 = SLICE((Mem425[ecx + 8<32>:word32] - ecx_432) *s64 0x3159721F<32>, word32, 32)
	edx = edx_441 >> 6<32>
	eax_445 = (edx_441 >> 6<32> >>u 0x1F<32>) + (edx_441 >> 6<32>)
l0042976F:
	eax_445 = 0<32>
l00429789:
	word32 edi_452 = dwArg08 + eax_445
	branch ecx_432 == 0<32> l00429798
l0042978F:
	Mem459[esp_356 + 4<32>:word32] = ecx_432
	operator delete(Mem459[esp_356 + 4<32>:(ptr32 void)])
l00429798:
	Mem477[ecx + 0xC<32>:word32] = esi_355 *s 0x14C<32> + eax_352
	Mem478[ecx + 8<32>:word32] = edi_452 *s 0x14C<32> + eax_352
	Mem479[ecx + 4<32>:word32] = eax_352
	esp_215 = esp_356 + 8<32>
	eax_208 = eax_352
l0042988B:
	Mem486[fs:0x00000000<p32>:word32] = eax_14
	word32 esp_490 = esp_215 + 4<i32>
	word32 edi_491 = Mem486[esp_490:word32]
	word32 esi_493 = Mem486[esp_490 + 4<i32>:word32]
	word32 ecx_718
	fn00694B8E(eax_208, eax_19 ^ fp - 0x154<32>, edx, Mem486[esp_490 + 8<i32>:word32], fp - 0x154<32>, esi_493, edi_491, es, ds, Mem486[esp_490 + 8<i32>:word32], out ecx_718)
	ediOut = edi_491
	return esi_493
fn004295F0_exit:
l0042963C_1:
	Mem581[edi_41:word32] = Mem44[esi_37:word32]
	esi_37 = esi_37 + 4<i32>
	edi_41 = edi_41 + 4<i32>
	ecx_40 = ecx_40 - 1<32>


word32 fn004298F0(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn005AF380
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: ebx ecx edi edx esi esp
fn004298F0_entry:
l004298F0:
	word32 esi_11 = dwArg04
	branch dwArg04 == dwArg08 l0042991F
l0042991F:
	return dwArg0C
l004298FE:
	word32 edi_22 = dwArg0C
l00429903:
	branch edi_22 == 0<32> l0042990F
l00429907:
	fn00424EC0(edi_22, esi_11)
l0042990F:
	esi_11 = esi_11 + 0x38<32>
	edi_22 = edi_22 + 0x38<32>
	branch esi_11 != dwArg08 l00429903
l00429919:
	return edi_22
fn004298F0_exit:


void fn00429930(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042ACF0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebx edi esi esp
fn00429930_entry:
l00429930:
	word32 edx_121
	word32 eax_9 = Mem7[fs:0<32>:word32]
	word32 eax_14 = Mem11[0x00A14188<p32>:word32] ^ fp - 0x30<32>
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	branch Mem30[dwArg08 + 0x14<32>:word32] != 0<32> l004299A1
l004299A1:
	operator =(fn00428F30(ecx + 0x51C<32>, fp + 4<32>, out edx_121), dwArg08)
l0042996D:
	edx_121 = fn00424930(ecx + 0x51C<32>, fp - 0x30<32>, fp + 4<32>)
	branch dwLoc30 == Mem59[ecx + 0x520<32>:word32] l004299BA
l00429992:
	edx_121 = fn00426100(ecx + 0x51C<32>, fp - 0x30<32>, dwLoc30)
l004299BA:
	basic_string(fp - 0x2C<32>, Mem87[0x00A0D00C<p32>:word32])
	branch Mem91[ecx + 0x524<32>:word32] == 0<32> l00429A71
l004299E0:
	word32 eax_99 = Mem97[ecx + 0x520<32>:word32]
	word32 esi_100 = Mem97[eax_99:word32]
	word32 ebx_101 = 0<32>
	branch esi_100 == eax_99 l00429A62
l004299EE:
l004299F0:
	word32 eax_108 = 0x8AA2D0<32>
	branch ebx_101 != 0<32> l004299FE
l004299F9:
	eax_108 = 0x8AA2CC<32>
l004299FE:
	operator +=(fp - 0x2C<32>, eax_108)
	edx_121 = esi_100 + 0x10<32>
	operator +=(fp - 0x2C<32>, edx_121)
	branch Mem123[esi_100 + 0x2D<32>:byte] != 0<8> l00429A57
l00429A1D:
	word32 eax_129 = Mem123[esi_100 + 8<32>:word32]
	branch Mem123[eax_129 + 0x2D<32>:byte] != 0<8> l00429A3C
l00429A3C:
	word32 eax_132 = Mem123[esi_100 + 4<32>:word32]
	branch Mem123[eax_132 + 0x2D<32>:byte] != 0<8> l00429A55
l00429A45:
	branch esi_100 != Mem123[eax_132 + 8<32>:word32] l00429A55
l00429A4A:
	esi_100 = eax_132
	eax_132 = Mem123[eax_132 + 4<32>:word32]
	branch Mem123[eax_132 + 0x2D<32>:byte] == 0<8> l00429A45
l00429A55:
	esi_100 = eax_132
l00429A26:
	esi_100 = eax_129
	word32 eax_147 = Mem123[eax_129:word32]
	branch Mem123[eax_147 + 0x2D<32>:byte] != 0<8> l00429A57
l00429A30:
	esi_100 = eax_147
	eax_147 = Mem123[eax_147:word32]
	branch Mem123[eax_147 + 0x2D<32>:byte] == 0<8> l00429A30
l00429A3A:
l00429A57:
	ebx_101 = ebx_101 + 1<32>
	branch esi_100 != Mem123[ecx + 0x520<32>:word32] l004299F0
l00429A62:
	operator +=(fp - 0x2C<32>, 0x8AA2C8<32>)
l00429A71:
	word32 eax_193 = SetWindowTextA(Mem187[ecx + 0x4E8<32>:word32], c_str(fp - 0x2C<32>))
	~basic_string(fp - 0x2C<32>)
	Mem207[fs:0x00000000<p32>:word32] = eax_9
	word32 ecx_388
	fn00694B8E(eax_193, eax_14 ^ fp - 0x30<32>, edx_121, ebx, ebp, esi, edi, es, ds, ebx, out ecx_388)
	return
fn00429930_exit:


void fn0042A0A0(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B1F0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZDOP eax ecx edx FPUF Top
// Preserved: ebx edi esi esp
fn0042A0A0_entry:
l0042A0A0:
	word32 esi_16 = Mem13[ecx + 4<32>:word32]
	branch esi_16 == 0<32> l0042A0C8
l0042A0B0:
	word32 edx_24 = SLICE((Mem13[ecx + 8<32>:word32] - esi_16) *s64 0x3159721F<32>, word32, 32)
	edx = edx_24 >> 6<32>
	branch (edx_24 >> 6<32> >>u 0x1F<32>) + (edx_24 >> 6<32>) != 0<32> l0042A0CC
l0042A0CC:
	edx = SLICE((dwArg08 - esi_16) *s64 0x3159721F<32>, word32, 32) >> 6<32>
l0042A0C8:
l0042A0E1:
	word32 edi_84
	Mem102[dwArg04:word32] = fn004295F0(ecx, edx, ecx, es, ds, dwArg08, 1<32>, dwArg0C, out edi_84) *s 0x14C<32> + Mem56[edi_84 + 4<32>:word32]
	return
fn0042A0A0_exit:


word32 fn0042A250(word32 ecx, word32 ebp, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004014B0
// MayUse:  ebp:[0..31] ecx:[0..31] edi:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ecx edi edx Top
// Preserved: ebx esi esp
fn0042A250_entry:
l0042A250:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem26[fs:0<32>:word32] = fp - 0xC<32>
	Mem29[ecx:word32] = 0x8AA2E4<32>
	fn00401730(0<8>)
	word32 edi_47
	word32 ebx_46
	word32 esi_49
	word32 ebp_131
	branch Mem35[fn006233B0(0<32>, ebp, ecx, edi, out ebx_46, out ebp_131, out esi_49, out edi_47) + 0x48<32>:byte] == SLICE(ebx_46, byte, 0) l0042A2A6
l0042A298:
	word32 edi_147
	word32 eax_57 = fn006233B0(ebx_46, ebp_131, esi_49, edi_47, out ebx_46, out ebp_131, out esi_49, out edi_147)
	word32 edx_68 = Mem35[eax_57:word32]
	call Mem35[edx_68 + 4<32>:word32] (retsize: 4;)
		uses: ecx:eax_57,edx:edx_68
l0042A2A6:
	Mem78[0x00A53FE8<p32>:word32] = ebx_46
	word32 eax_80 = Mem78[esi_49 + 0x520<32>:word32]
	word32 esi_82 = esi_49 + 0x51C<32>
	fn00428A30(esi_82, fp - 0x10<32>, Mem78[eax_80:word32], eax_80)
	operator delete(Mem93[esi_82 + 4<32>:word32])
	Mem107[esi_82 + 4<32>:word32] = ebx_46
	Mem108[esi_82 + 8<32>:word32] = ebx_46
	Mem110[fs:0x00000000<p32>:word32] = eax_9
	return ebp_131
fn0042A250_exit:


word32 fn0042A300(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn005A6DD0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: ecx
// Trashed: SCZO eax ecx edi edx Top
// Preserved: ebx esi esp
fn0042A300_entry:
l0042A300:
	word32 ecx_15
	word32 edx_9 = Mem6[ecx + 4<32>:word32]
	branch edx_9 != 0<32> l0042A30E
l0042A30E:
	ecx_15 = Mem6[ecx + 8<32>:word32] - edx_9 >> 6<32>
l0042A30A:
	ecx_15 = 0<32>
l0042A316:
	word32 eax_22 = Mem6[ecx + 0x10<32>:word32]
	branch ecx_15 >u eax_22 l0042A348
l0042A348:
	word32 esi_31 = dwArg04
	word32 ecx_40 = 0x10<32>
	word32 edi_41 = (eax_22 << 6<32>) + edx_9
l0042A35A:
	branch ecx_40 == 0<32> l0042A35C
l0042A35C:
	Mem46[ecx + 0x10<32>:word32] = Mem44[ecx + 0x10<32>:word32] + 1<32>
	return ecx_40
l0042A35A_1:
	Mem58[edi_41:word32] = Mem44[esi_31:word32]
	esi_31 = esi_31 + 4<i32>
	edi_41 = edi_41 + 4<i32>
	ecx_40 = ecx_40 - 1<32>
l0042A31D:
	fn00412EF0(ecx, dwArg04)
	word32 ecx_77 = Mem64[ecx + 4<32>:word32]
	branch ecx_77 != 0<32> l0042A339
l0042A339:
	Mem85[ecx + 0x10<32>:word32] = Mem64[ecx + 8<32>:word32] - ecx_77 >> 6<32>
	return ecx_77
l0042A330:
	Mem91[ecx + 0x10<32>:word32] = 0<32>
	return ecx_77
fn0042A300_exit:


byte fn0042ACF0(word32 ecx, word32 ebx, word32 edi, selector es, selector ds, word128 xmm0, byte bArg04, ptr32 & xmm0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004014B0
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..7] xmm0:[0..127]
// LiveOut: eax xmm0
// Trashed: SCZDOP eax ecx edx FPU -1 FPUF Top xmm0 xmm1 xmm2
// Preserved: ebp ebx edi esi esp
fn0042ACF0_entry:
l0042ACF0:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem32[fs:0<32>:word32] = fp - 0xC<32>
	word32 ebp_37
	fn00621250(fn0041F120(out ebp_37))
	basic_string(fp - 0x28<32>, 0x8AA45C<32>)
	fn00620BE0(fn00620E60(ebp_37), fp - 0x28<32>)
	~basic_string(fp - 0x28<32>)
	word32 ebx_86
	word32 edi_87
	word32 esi_88
	word128 xmm0_89
	word32 ebp_101
	word32 ebx_102
	word32 edi_103
	word32 esi_104
	word128 xmm0_105
	word32 ebp_724
	word32 ecx_119 = CONVERT(CONVERT(Mem81[fn0081DDF0(SEQ(SLICE(ebx_86, word24, 8), CONVERT(Mem81[fn0081DDF0(ebx, ecx, edi, xmm0, out ebx_86, out ebp_724, out esi_88, out edi_87, out xmm0_89):word32] == 1<32>, bool, int8)), esi_88, edi_87, xmm0_89, out ebx_102, out ebp_101, out esi_104, out edi_103, out xmm0_105):word32] == 2<32>, bool, int8), int8, uint32) * 2<32> | CONVERT(SLICE(ebx_102, byte, 0), byte, word32)
	branch ecx_119 == Mem81[0x00A555DC<p32>:word32] l0042ADE0
l0042AD8B:
	Mem126[0x00A555DC<p32>:word32] = ecx_119
	basic_string(fp - 0x28<32>, Mem128[fp - 0x28<32> + ecx_119 * 4<32>:word32])
	fn00429930(esi_104, ebx_102, ebp_101, esi_104, edi_103, es, ds, fp - 0x28<32>)
	~basic_string(fp - 0x28<32>)
l0042ADE0:
	word32 eax_606
	word128 xmm0_167
	word32 ebp_164 = fn00420510(esi_104, xmm0_105, out xmm0_167)
	word24 eax_24_8_607 = SLICE(eax_163, word24, 8)
	branch Mem178[esi_104 + 0x4F0<32>:real32] <= 0.0 l0042AFE0
l0042ADFA:
	word32 esp_239
	word32 esi_220
	basic_string(fp - 0x28<32>, 0x8AA438<32>)
	branch bArg04 == 0<8> l0042AEC1
l0042AEC1:
	fn00620BE0(fn00620E60(ebp_164), fp - 0x28<32>)
	~basic_string(fp - 0x28<32>)
	word32 ebx_725
	word32 ebp_726
	word32 edi_727
	word32 eax_214 = fn006233B0(ebx_102, ebp_164, esi_104, edi_103, out ebx_725, out ebp_726, out esi_220, out edi_727)
	word32 edx_227 = Mem211[eax_214:word32]
	call Mem231[edx_227 + 0x10<32>:word32] (retsize: 4;)
		uses: ecx:eax_214,edx:edx_227,Stack +0004:Mem211[esi_220 + 0x4F0<32>:real32],Stack +004C:bArg04
		defs: esp:esp_239
l0042AE14:
	word32 eax_257 = fn00620BE0(fn00620E60(ebp_164), fp - 0x28<32>)
	~basic_string(fp - 0x28<32>)
	word32 ebp_270
	word32 ebx_271
	word32 edi_272
	word32 esi_274
	word32 eax_268 = fn006233B0(ebx_102, ebp_164, esi_104, eax_257, out ebx_271, out ebp_270, out esi_274, out edi_272)
	word32 edx_281 = Mem267[eax_268:word32]
	word32 esp_288
	call Mem285[edx_281 + 8<32>:word32] (retsize: 4;)
		uses: ecx:eax_268,edx:edx_281,Stack +0004:Mem267[esi_274 + 0x4F0<32>:real32],Stack +004C:bArg04
		defs: esp:esp_288
	fn00419D20(edi_272)
	word32 ebp_299
	word32 ebx_300
	word128 xmm0_730
	word32 edi_729
	word32 edx_728
	word32 eax_297 = fn005A74F0(ebx_271, ebp_270, esi_274, edi_272, es, ds, out edx_728, out ebx_300, out ebp_299, out esi_220, out edi_729, out xmm0_730)
	Mem312[esp_288 - 4<i32>:word32] = 0<32>
	esp_239 = esp_288
	branch SLICE(CONVERT(fn005A79D0(eax_297, ebx_300, es, ds, Mem312[esp_288 - 4<i32>:word32], out xmm0_167), byte, uint32), byte, 0) == 0<8> l0042AF00
l0042AE72:
	Mem332[esp_288 - 4<i32>:word32] = 0x8AA434<32>
	basic_string(esp_288 + 0x18<32>, Mem332[esp_288 - 4<i32>:(ptr32 charconst )])
	Mem338[esp_288 - 4<i32>:word32] = esp_288 + 0x18<32>
	Mem339[esp_288 + 0x3C<32>:word32] = 3<32>
	word32 eax_348 = fn00620BE0(fn00620E60(ebp_299), Mem339[esp_288 - 4<i32>:word32])
	Mem358[esp_288 + 0x3C<32>:word32] = ebp_299
	~basic_string(esp_288 + 0x18<32>)
	word32 edi_363
	word32 ebx_731
	word32 ebp_732
	word32 eax_359 = fn006233B0(ebx_300, ebp_299, esi_220, eax_348, out ebx_731, out ebp_732, out esi_220, out edi_363)
	word32 edx_370 = Mem358[eax_359:word32]
	call Mem358[edx_370 + 0xC<32>:word32] (retsize: 4;)
		uses: ecx:eax_359,edx:edx_370,Stack +0008:bArg04
		defs: esp:esp_373
	fn00419D20(edi_363)
l0042AF00:
	word64 edx_eax_382 = __rdtsc()
	word32 edx_383 = SLICE(edx_eax_382, word32, 32)
	word32 eax_390 = SLICE(edx_eax_382, word32, 0)
	word32 edx_387 = Mem386[esi_220 + 0x50C<32>:word32]
	word32 eax_392 = Mem386[esi_220 + 0x508<32>:word32]
	branch edx_387 >u 0<32> l0042AF1A
l0042AF16:
	branch eax_392 <=u 0<32> l0042AF7F
l0042AF1A:
	ui64 eax_ecx_550 = SEQ(eax_405, Mem386[esi_220 + 0x500<32>:word32]) + SEQ(edx_387, eax_392)
	word32 ecx_403 = SLICE(eax_ecx_550, word32, 0)
	word32 eax_408 = SLICE(eax_ecx_550, word32, 32)
	word32 eax_405 = Mem386[esi_220 + 0x504<32>:word32]
	branch edx_383 >u eax_408 l0042AF7F
l0042AF2E:
	branch edx_383 <u eax_408 l0042AF34
l0042AF30:
	branch eax_390 >=u ecx_403 l0042AF7F
l0042AF34:
	word32 edx_417
	word32 eax_416 = fn00626B20(out edx_417)
	ui64 edx_ecx_555 = Mem386[esi_220 + 1280<i32>:ui64] - edx_eax_382 + Mem386[esi_220 + 0x508<32>:ui64]
	word32 esp_440 = esp_239 - 4<i32>
	Mem441[esp_440:word32] = 0<32>
	Mem446[esp_440 - 4<i32>:word32] = 0x3E8<32>
	Mem448[esp_440 - 8<i32>:word32] = SLICE(edx_ecx_555, word32, 32)
	Mem450[esp_440 - 12<i32>:word32] = SLICE(edx_ecx_555, word32, 0)
	Mem451[esp_440 + 0x48<32>:word32] = edx_417
	word32 edx_454
	word32 eax_452 = fn00694FE0(Mem451[esp_440 - 12<i32>:word32], Mem451[esp_440 - 8<i32>:word32], Mem451[esp_440 - 4<i32>:word32], Mem451[esp_440:word32], out edx_454)
	Mem462[esp_440:word32] = Mem451[esp_440 + 0x48<32>:word32]
	Mem464[esp_440 - 4<i32>:word32] = eax_416
	Mem466[esp_440 - 8<i32>:word32] = edx_454
	Mem468[esp_440 - 12<i32>:word32] = eax_452
	word32 edx_733
	Mem478[esp_440:word32] = fn006951B0(Mem468[esp_440 - 12<i32>:word32], Mem468[esp_440 - 8<i32>:word32], Mem468[esp_440 - 4<i32>:word32], Mem468[esp_440:word32], out edx_733)
	Sleep(Mem478[esp_440:DWORD])
l0042AF7F:
	word64 edx_eax_480 = __rdtsc()
	word32 ecx_483 = Mem482[esp_239 + 0x14<32>:word32]
	Mem486[esi_220 + 0x500<32>:word32] = SLICE(edx_eax_480, word32, 0)
	Mem488[esi_220 + 0x504<32>:word32] = SLICE(edx_eax_480, word32, 32)
	fn00419D20(ecx_483)
	eax_24_8_607 = SLICE(eax_489, word24, 8) (alias)
	word32 ecx_491 = Mem488[0x00A0D154<p32>:word32]
	branch ecx_491 <= 0<32> l0042AFE0
l0042AFE0:
	eax_606 = SEQ(eax_24_8_607, 1<8>) (alias)
l0042AFA0:
	Mem507[0x00A0D154<p32>:word32] = ecx_491 - 1<32>
	word32 edx_498 = SLICE((ecx_491 - 1<32>) *s64 0x51EB851F<32>, word32, 32)
	word32 ecx_495 = ecx_491 - 1<32>
	branch ecx_491 - 1<32> - (((edx_498 >> 5<32>) >>u 0x1F<32>) + (edx_498 >> 5<32>)) *s 0x64<32> != 0<32> l0042AFD7
l0042AFC3:
	word32 esp_509 = esp_239 - 4<i32>
	Mem510[esp_509:word32] = ecx_491 - 1<32>
	Mem512[esp_509 - 4<i32>:word32] = 0x8AA41C<32>
	fn00520C80()
	ecx_495 = Mem512[0x00A0D154<p32>:word32]
l0042AFD7:
	eax_606 = CONVERT(CONVERT(ecx_495 > 0<32>, bool, int8), int8, uint32) (alias)
l0042AFE2:
	Mem535[fs:0x00000000<p32>:word32] = eax_9
	xmm0Out = xmm0_167
	return SLICE(eax_606, byte, 0)
fn0042ACF0_exit:


void fn0042B1F0(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042D270
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx FPUF Top
// Preserved: DP edi esi esp
fn0042B1F0_entry:
l0042B1F0:
	word32 ecx_26
	word32 edi_14 = Mem13[ecx + 4<32>:word32]
	branch edi_14 != 0<32> l0042B200
l0042B200:
	word32 edx_22 = SLICE((Mem13[ecx + 8<32>:word32] - edi_14) *s64 0x3159721F<32>, word32, 32)
	ecx_26 = (edx_22 >> 6<32> >>u 0x1F<32>) + (edx_22 >> 6<32>)
l0042B1FC:
	ecx_26 = 0<32>
l0042B216:
	branch edi_14 == 0<32> l0042B266
l0042B21A:
	word32 edx_41 = SLICE((Mem13[ecx + 0xC<32>:word32] - edi_14) *s64 0x3159721F<32>, word32, 32)
	branch ecx_26 >=u ((edx_41 >> 6<32>) >>u 0x1F<32>) + (edx_41 >> 6<32>) l0042B266
l0042B266:
	fn0042A0A0(ecx, fp + 4<32>, es, ds, fp + 4<32>, Mem13[ecx + 8<32>:word32], dwArg04)
	return
l0042B234:
	word32 edi_101 = Mem13[ecx + 8<32>:word32]
	fn00422B20(edi_101, 1<32>, dwArg04)
	Mem125[ecx + 8<32>:word32] = edi_101 + 0x14C<32>
	return
fn0042B1F0_exit:


word32 fn0042B310(word32 ecx, word32 ebp, selector es, selector ds, word128 xmm0, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut, ptr32 & xmm0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004014B0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: ebp ebx edi esi esp xmm0
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp FPU -1 FPUF xmm0 xmm1 xmm2
// Preserved:
fn0042B310_entry:
l0042B310:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 0xC<32>
	Mem39[ecx + 0x4F0<32>:real32] = 0.0F
	Mem45[ecx + 0x510<32>:real64] = 0.0
	Mem47[ecx:word32] = 0x8AA2E4<32>
	real64 rLoc1_756 = CONVERT(Mem47[0x008AA5B8<p32>:real32], real32, real64)
	Mem50[ecx + 0x4E8<32>:word32] = 0<32>
	Mem51[ecx + 0x518<32>:real32] = CONVERT(rLoc1_756, real64, real32)
	Mem53[ecx + 0x4F8<32>:word32] = 0<32>
	Mem54[ecx + 0x4FC<32>:word32] = 0<32>
	Mem55[ecx + 0x500<32>:word32] = 0<32>
	Mem56[ecx + 0x504<32>:word32] = 0<32>
	Mem57[ecx + 0x508<32>:word32] = 0<32>
	Mem58[ecx + 0x50C<32>:word32] = 0<32>
	word32 eax_59 = fn00811B80()
	Mem65[ecx + 0x520<32>:word32] = eax_59
	Mem66[eax_59 + 0x2D<32>:byte] = 1<8>
	word32 eax_67 = Mem66[ecx + 0x520<32>:word32]
	Mem68[eax_67 + 4<32>:word32] = eax_67
	word32 eax_69 = Mem68[ecx + 0x520<32>:word32]
	Mem70[eax_69:word32] = eax_69
	word32 eax_71 = Mem70[ecx + 0x520<32>:word32]
	Mem72[eax_71 + 8<32>:word32] = eax_71
	Mem73[ecx + 0x524<32>:word32] = 0<32>
	Mem78[ecx + 0x528<32>:byte] = 0<8>
	Mem79[ecx + 0x52C<32>:word32] = 0<32>
	timeBeginPeriod(1<32>)
	Mem83[ecx + 0x4F8<32>:word32] = timeGetTime()
	Mem89[ecx + 0x4FC<32>:word32] = 0<32>
	Mem92[0x00A53FE8<p32>:word32] = ecx
	memset(ecx + 4<32>, 0<32>, 0x4E4<32>)
	word32 esi_128 = ecx
	word32 edi_126 = ecx + 0x51C<32>
	word32 esp_117 = fp - 0x64<32>
	word32 ebp_103
	word128 xmm0_108
	branch SLICE(CONVERT(fn007B2D10(ebp, ecx + 0x51C<32>, es, ds, xmm0, 0xA540FC<32>, out ebp_103, out xmm0_108), uint8, uint32), byte, 0) != 0<8> l0042B42D
l0042B403:
	esi_128 = fn00420190(0<32>, es, ds, 0x8AA560<32>, out edi_126)
	fn00421080(fp - 0x34<32>, 0x8AA53C<32>)
	call CxxThrowException (retsize: 4;)
		uses: ecx:fp - 0x34<32>,Stack +0004:fp - 0x34<32>,Stack +0008:0x99FB00<32>
		defs: esp:esp_152
l0042B42D:
	word32 ebx_172
	word32 edx_918
	word32 ebp_919
	word32 edi_920
	fn004048C0(0<32>, ebp_103, esi_128, edi_126, es, ds, out edx_918, out ebx_172, out ebp_919, out edi_920)
	word32 esp_179 = esp_117 - 4<i32>
	Mem180[esp_179:word32] = ebx_172
	Mem183[esp_179 - 4<i32>:word32] = 0xA54120<32>
	Mem185[esp_179 - 8<i32>:word32] = esp_179 + 0x18<32>
	word32 edx_921
	word32 edi_193 = Mem185[fn00402A20(Mem185[esp_179 - 8<i32>:word32], Mem185[esp_179 - 4<i32>:word32], Mem185[esp_179:word32], out edx_921):word32]
	Mem196[esp_179 + 0x20<32>:word32] = edi_193
	word32 esp_194 = esp_179 + 4<32>
	branch edi_193 == ebx_172 l0042B456
l0042B44F:
	fn00401AD0(edi_193)
l0042B456:
	word32 ecx_205 = Mem196[esp_179 + 0x18<32>:word32]
	Mem208[esp_179 + 0x64<32>:byte] = 1<8>
	branch ecx_205 == ebx_172 l0042B47E
l0042B463:
	branch fn00401AE0(ecx_205) != 1<32> l0042B47E
l0042B46F:
	branch ecx_205 == ebx_172 l0042B47E
l0042B473:
	word32 eax_220 = Mem208[ecx_205:word32]
	word32 edx_221 = Mem208[eax_220:word32]
	Mem223[esp_179:word32] = 1<32>
	call edx_221 (retsize: 4;)
		uses: eax:eax_220,ecx:ecx_205
		defs: ecx:ecx_239,esp:esp_237
l0042B47E:
	word32 esp_247 = esp_194 - 4<i32>
	Mem249[esp_247:word32] = ecx_205
	Mem251[esp_247 + 0x18<32>:word32] = ebx_172
	Mem252[esp_247 + 0x1C<32>:word32] = esp_247
	Mem253[esp_247:word32] = edi_193
	branch edi_193 == ebx_172 l0042B496
l0042B48F:
	fn00401AD0(edi_193)
l0042B496:
	Mem261[esp_247 + 0x64<32>:byte] = 2<8>
	word32 ebp_269
	word32 ebx_270
	word32 esi_273
	word32 edi_272
	word32 eax_268 = fn0046E360(ebx_172, esi_128, edi_193, out ebx_270, out ebp_269, out esi_273, out edi_272)
	Mem279[esp_247 + 0x64<32>:byte] = 1<8>
	byte bl_289 = SLICE(ebx_270, byte, 0)
	branch SLICE(CONVERT(fn0046E280(eax_268, Mem279[esp_247:word32]), uint8, uint32), byte, 0) == bl_289 l0042B4CB
l0042B4CB:
	fn007B1F20(esp_247 + 0x28<32>)
	edi_272 = Mem279[esp_247 + 0x6C<32>:word32]
	Mem301[esp_247:word32] = ebx_270
	Mem303[esp_247 - 4<i32>:word32] = edi_272
	Mem305[esp_247 + 0x64<32>:byte] = 3<8>
	word32 ecx_317
	branch fn007B22E0(esp_247 + 0x28<32>, es, ds, Mem305[esp_247 - 4<i32>:word32], Mem305[esp_247:word32], out ecx_317) != 0<32> l0042B6A5
l0042B4F0:
	Mem330[esp_247:word32] = ecx_317
	Mem332[esp_247 + 0x6C<32>:word32] = esp_247
	Mem334[esp_247 - 4<i32>:word32] = esp_247
	word32 esi_339 = fn007B1F60(esp_247 + 0x28<32>, esi_273, Mem334[esp_247 - 4<i32>:word32])
	Mem345[esp_247 + 0x64<32>:byte] = 4<8>
	word32 eax_346 = fn0046E360(ebx_270, esi_339, edi_272, out ebx_270, out ebp_269, out esi_273, out edi_272)
	Mem357[esp_247 + 0x64<32>:byte] = 3<8>
	branch SLICE(CONVERT(fn0046E280(eax_346, Mem357[esp_247:word32]), uint8, uint32), byte, 0) == SLICE(ebx_270, byte, 0) l0042B6A5
l0042B6A5:
	word32 esp_374 = esp_194 - 4<i32>
	Mem375[esp_374:word32] = c_str(edi_272)
	Mem377[esp_374 - 4<i32>:word32] = 0x8AA47C<32>
	word32 edi_387
	word32 esi_389 = fn00420190(ebx_270, es, ds, Mem377[esp_374 - 4<i32>:word32], out edi_387)
	Mem399[esp_374:word32] = 0x8AA460<32>
	fn00421080(esp_374 + 0x34<32>, Mem399[esp_374:word32])
	Mem409[esp_374:word32] = 0x99FB00<32>
	Mem412[esp_374 - 4<i32>:word32] = esp_374 + 0x34<32>
	word32 esp_420
	word32 ecx_422
	call CxxThrowException (retsize: 4;)
		uses: ecx:esp_374 + 0x34<32>
		defs: ecx:ecx_422,esp:esp_420
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	Mem427[esp_420 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem429[esp_420 - 8<i32>:word32] = 0x831079<32>
	Mem432[esp_420 - 12<i32>:word32] = Mem429[fs:0<32>:word32]
	Mem434[esp_420 - 16<i32>:word32] = ecx_422
	Mem436[esp_420 - 20<i32>:word32] = esi_389
	Mem438[esp_420 - 24<i32>:word32] = edi_387
	Mem442[esp_420 - 28<i32>:word32] = Mem438[0x00A14188<p32>:word32] ^ esp_420 - 24<i32>
	Mem444[fs:0<32>:word32] = esp_420 - 0xC<32>
	Mem446[esp_420 - 0x10<32>:word32] = ecx_422
	word32 edi_447 = Mem446[esp_420 + 4<32>:word32]
	Mem449[esp_420 - 32<i32>:word32] = edi_447
	exception(ecx_422, Mem449[esp_420 - 32<i32>:(ptr32 exception)])
	Mem454[esp_420 - 0x20<32>:word32] = edi_447 + 0xC<32>
	Mem456[esp_420 - 4<32>:word32] = 0<32>
	Mem457[ecx_422:word32] = 0x8A8634<32>
	basic_string(ecx_422 + 0xC<32>, Mem457[esp_420 - 0x20<32>:(ptr32 basic_string)])
	Mem462[fs:0x00000000<p32>:word32] = Mem457[esp_420 - 0xC<32>:word32]
	word32 edi_465 = Mem462[esp_420 - 0x18<32>:word32]
	word32 esi_467 = Mem462[esp_420 - 0x14<32>:word32]
	ebpOut = ebp_269
	esiOut = esi_467
	ediOut = edi_465
	xmm0Out = <invalid>
	return ebx_270
l0042B51F:
	Mem472[esp_247:word32] = edi_272
	Mem474[0x00A53FED<p32>:byte] = 1<8>
	operator =(0xA5423C<32>, Mem474[esp_247:(ptr32 basic_string)])
	Mem478[esp_247:word32] = 0x8AA4D8<32>
	fn00520C80()
	Mem482[esp_247 + 0x64<32>:byte] = 1<8>
	fn00422E10(esp_247 + 0x28<32>)
l0042B4B0:
	Mem491[esp_247:word32] = 0xA54120<32>
	Mem493[0x00A53FED<p32>:byte] = bl_289
	operator =(0xA5423C<32>, Mem493[esp_247:(ptr32 basic_string)])
l0042B54D:
	word32 edx_555
	word32 eax_554
	word32 esp_498 = esp_194 - 4<i32>
	Mem499[esp_498:word32] = esp_194 + 0x18<32>
	word32 edi_923
	word32 ebp_922
	word32 ebx_506
	word32 esi_509
	fn00424FD0(fn0046E360(ebx_270, esi_273, edi_272, out ebx_506, out ebp_922, out esi_509, out edi_923), Mem499[esp_498:word32])
	Mem522[esp_498 + 0x64<32>:byte] = 5<8>
	word64 edx_eax_523 = __rdtsc()
	Mem525[esp_498:word32] = 0x8AA4C0<32>
	Mem528[esi_509 + 0x500<32>:word32] = SLICE(edx_eax_523, word32, 0)
	Mem530[esi_509 + 0x504<32>:word32] = SLICE(edx_eax_523, word32, 32)
	basic_string(esp_498 + 0x34<32>, Mem530[esp_498:(ptr32 charconst )])
	word32 edi_533 = Mem530[esp_498 + 0x1C<32>:word32]
	Mem535[esp_498:word32] = ebx_506
	Mem538[esp_498 - 4<i32>:word32] = esp_498 + 0x34<32>
	Mem540[esp_498 + 0x64<32>:byte] = 6<8>
	word32 eax_541 = fn0040EF50(edi_533, Mem540[esp_498 - 4<i32>:word32], Mem540[esp_498:word32])
	Mem551[esp_498 + 0x64<32>:byte] = 5<8>
	~basic_string(esp_498 + 0x34<32>)
	byte bl_694 = SLICE(ebx_506, byte, 0)
	branch eax_541 == ebx_506 l0042B5CA
l0042B5CA:
	eax_554 = 0<32>
	edx_555 = 0<32>
l0042B5AB:
	word32 edx_559
	word32 eax_558 = fn00626B20(out edx_559)
	Mem567[esp_498 + 0x6C<32>:word32] = edx_559
	word64 edx_eax_569 = CONVERT(eax_541, word32, int64)
	Mem572[esp_498:word32] = SLICE(edx_eax_569, word32, 32)
	Mem575[esp_498 - 4<i32>:word32] = SLICE(edx_eax_569, word32, 0)
	Mem578[esp_498 - 8<i32>:word32] = Mem575[esp_498 + 0x6C<32>:word32]
	Mem580[esp_498 - 12<i32>:word32] = eax_558
	eax_554 = fn006951B0(Mem580[esp_498 - 12<i32>:word32], Mem580[esp_498 - 8<i32>:word32], Mem580[esp_498 - 4<i32>:word32], Mem580[esp_498:word32], out edx_555)
l0042B5CE:
	word32 esp_590 = esp_194 - 4<i32>
	Mem591[esp_590:word32] = 0x8AA4AC<32>
	Mem595[esi_509 + 0x508<32>:word32] = eax_554
	Mem597[esi_509 + 0x50C<32>:word32] = edx_555
	basic_string(esp_590 + 0x34<32>, Mem597[esp_590:(ptr32 charconst )])
	Mem602[esp_590:word32] = ebx_506
	Mem605[esp_590 - 4<i32>:word32] = esp_590 + 0x34<32>
	Mem608[esp_590 + 0x64<32>:byte] = 7<8>
	Mem619[0x00A0D154<p32>:word32] = fn0040EF50(edi_533, Mem608[esp_590 - 4<i32>:word32], Mem608[esp_590:word32])
	Mem620[esp_590 + 0x64<32>:byte] = 5<8>
	~basic_string(esp_590 + 0x34<32>)
	Mem622[esp_590:word32] = 0x8AA49C<32>
	basic_string(esp_590 + 0x34<32>, Mem622[esp_590:(ptr32 charconst )])
	Mem627[esp_590:word32] = ebx_506
	Mem630[esp_590 - 4<i32>:word32] = esp_590 + 0x34<32>
	Mem632[esp_590 + 0x64<32>:byte] = 8<8>
	Mem642[esp_590 + 0x6C<32>:byte] = SLICE(CONVERT(fn0040EEA0(edi_533, Mem632[esp_590 - 4<i32>:word32], Mem632[esp_590:word32]), uint8, uint32), byte, 0)
	Mem649[fn00419A50():byte] = Mem642[esp_590 + 0x6C<32>:byte]
	Mem651[esp_590 + 0x64<32>:byte] = 5<8>
	~basic_string(esp_590 + 0x34<32>)
	Mem653[esp_590 + 0x64<32>:byte] = 1<8>
	word32 esp_640 = esp_590 + 4<32>
	branch edi_533 == ebx_506 l0042B66C
l0042B657:
	word32 eax_656 = fn00401AE0(edi_533)
	branch eax_656 != 1<32> l0042B66C
l0042B663:
	word32 edx_663 = Mem653[edi_533:word32]
	Mem665[esp_590:word32] = eax_656
	call Mem665[edx_663:word32] (retsize: 4;)
		uses: ecx:edi_533,edx:edx_663
		defs: esp:esp_683
l0042B66C:
	word32 edi_691 = Mem690[esp_640 + 0x1C<32>:word32]
	Mem695[esp_640 + 0x60<32>:byte] = bl_694
	branch edi_691 == ebx_506 l0042B68D
l0042B678:
	word32 eax_698 = fn00401AE0(edi_691)
	branch eax_698 != 1<32> l0042B68D
l0042B684:
	word32 edx_705 = Mem695[edi_691:word32]
	Mem707[esp_640 - 4<i32>:word32] = eax_698
	call Mem707[edx_705:word32] (retsize: 4;)
		uses: ecx:edi_691,edx:edx_705
l0042B68D:
	Mem732[fs:0x00000000<p32>:word32] = eax_9
	ebpOut = ebp
	esiOut = esi
	ediOut = edi
	xmm0Out = <invalid>
	return ebx
fn0042B310_exit:


void fn0042CFC0(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042DC50
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx FPUF Top
// Preserved: ebp ebx edi esi esp
fn0042CFC0_entry:
l0042CFC0:
	branch ecx == dwArg04 l0042D134
l0042CFD0:
	word32 eax_15 = Mem10[dwArg04 + 4<32>:word32]
	branch eax_15 == 0<32> l0042CFF1
l0042CFD7:
	word32 ecx_20 = Mem10[dwArg04 + 8<32>:word32] - eax_15
	word32 edx_24 = SLICE(ecx_20 *s64 0x92492493<32>, word32, 32) + ecx_20
	word32 ecx_28 = (edx_24 >> 5<32> >>u 0x1F<32>) + (edx_24 >> 5<32>)
	branch ecx_28 != 0<32> l0042D00C
l0042D00C:
	word32 eax_50
	word32 edi_37 = Mem36[ecx + 4<32>:word32]
	branch edi_37 != 0<32> l0042D019
l0042D019:
	word32 ebx_42 = Mem36[ecx + 8<32>:word32] - edi_37
	word32 edx_46 = SLICE(ebx_42 *s64 0x92492493<32>, word32, 32) + ebx_42
	eax_50 = (edx_46 >> 5<32> >>u 0x1F<32>) + (edx_46 >> 5<32>)
l0042D015:
	eax_50 = 0<32>
l0042D031:
	branch ecx_28 >u eax_50 l0042D08C
l0042D08C:
	word32 eax_74
	branch edi_37 != 0<32> l0042D094
l0042D094:
	word32 ebx_66 = Mem36[ecx + 0xC<32>:word32] - edi_37
	word32 edx_70 = SLICE(ebx_66 *s64 0x92492493<32>, word32, 32) + ebx_66
	eax_74 = (edx_70 >> 5<32> >>u 0x1F<32>) + (edx_70 >> 5<32>)
l0042D090:
	eax_74 = 0<32>
l0042D0AC:
	branch ecx_28 >u eax_74 l0042D0ED
l0042D0ED:
	branch edi_37 == 0<32> l0042D109
l0042D0F1:
	fn00428850(edi_37, Mem36[ecx + 8<32>:word32])
	operator delete(Mem95[ecx + 4<32>:word32])
l0042D109:
	branch SLICE(CONVERT(fn00422980(ecx, ecx, edi_37, fn005F8790(dwArg04)), uint8, uint32), byte, 0) == 0<8> l0042D132
l0042D11C:
	Mem163[ecx + 8<32>:word32] = fn005AF380(Mem123[dwArg04 + 4<32>:word32], Mem123[dwArg04 + 8<32>:word32], Mem123[ecx + 4<32>:word32])
l0042D132:
l0042D134:
	return
l0042D0B0:
	word32 eax_180 = fn005F8790(ecx)
	word32 eax_190 = Mem36[dwArg04 + 4<32>:word32]
	word32 ebx_191 = eax_190 + (eax_180 * 8<32> - eax_180) * 8<32>
	fn00428EA0(eax_190, ebx_191, edi_37)
	Mem226[ecx + 8<32>:word32] = fn005AF380(ebx_191, Mem197[dwArg04 + 8<32>:word32], Mem197[ecx + 8<32>:word32])
	return
l0042D035:
	fn00428850(fn00428EA0(Mem238[dwArg04 + 4<32>:word32], Mem36[dwArg04 + 8<32>:word32], edi_37), Mem241[ecx + 8<32>:word32])
	word32 eax_265 = Mem255[dwArg04 + 4<32>:word32]
	branch eax_265 == 0<32> l0042D071
l0042D059:
	word32 ecx_270 = Mem255[dwArg04 + 8<32>:word32] - eax_265
	word32 edx_274 = SLICE(ecx_270 *s64 0x92492493<32>, word32, 32) + ecx_270
	eax_265 = (edx_274 >> 5<32> >>u 0x1F<32>) + (edx_274 >> 5<32>)
l0042D071:
	Mem293[ecx + 8<32>:word32] = Mem255[ecx + 4<32>:word32] + (eax_265 * 8<32> - eax_265) * 8<32>
	return
l0042CFF1:
	fn004292A0(ecx, fp + 4<32>, Mem10[ecx + 4<32>:word32], Mem10[ecx + 8<32>:word32])
	return
fn0042CFC0_exit:


void fn0042D270(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042DF20
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx FPUF Top
// Preserved: ebp edi esi esp
fn0042D270_entry:
l0042D270:
	__align(fp - 4<i32>)
	word32 esi_16 = dwArg04
	word32 ecx_21 = 0x52<32>
	word32 edi_22 = fp - 0x14C<32>
l0042D29A:
	branch ecx_21 == 0<32> l0042D29C
l0042D29C:
	fn0042B1F0(ecx + 8<32>, es, ds, fp - 0x150<32>)
	return
fn0042D270_exit:
l0042D29A_1:
	Mem58[edi_22:word32] = Mem55[esi_16:word32]
	esi_16 = esi_16 + 4<i32>
	edi_22 = edi_22 + 4<i32>
	ecx_21 = ecx_21 - 1<32>


void fn0042DC50(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042DE90
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx FPU -1 FPUF
// Preserved: ebx edi esi esp
fn0042DC50_entry:
l0042DC50:
	operator =(ecx, dwArg04)
	Mem21[ecx + 0x1C<32>:word32] = Mem15[dwArg04 + 0x1C<32>:word32]
	Mem23[ecx + 0x20<32>:word32] = Mem21[dwArg04 + 0x20<32>:word32]
	Mem25[ecx + 0x24<32>:word32] = Mem23[dwArg04 + 0x24<32>:word32]
	Mem27[ecx + 0x28<32>:word32] = Mem25[dwArg04 + 0x28<32>:word32]
	Mem29[ecx + 0x2C<32>:word32] = Mem27[dwArg04 + 0x2C<32>:word32]
	Mem31[ecx + 0x30<32>:word32] = Mem29[dwArg04 + 0x30<32>:word32]
	Mem33[ecx + 0x34<32>:word32] = Mem31[dwArg04 + 0x34<32>:word32]
	Mem35[ecx + 0x38<32>:word32] = Mem33[dwArg04 + 0x38<32>:word32]
	Mem37[ecx + 0x3C<32>:word32] = Mem35[dwArg04 + 0x3C<32>:word32]
	Mem39[ecx + 0x40<32>:word32] = Mem37[dwArg04 + 0x40<32>:word32]
	Mem41[ecx + 0x44<32>:word32] = Mem39[dwArg04 + 0x44<32>:word32]
	Mem43[ecx + 0x48<32>:word32] = Mem41[dwArg04 + 0x48<32>:word32]
	Mem46[ecx + 0x4C<32>:real32] = Mem43[dwArg04 + 0x4C<32>:real32]
	Mem50[ecx + 0x50<32>:byte] = Mem46[dwArg04 + 0x50<32>:byte]
	Mem52[ecx + 0x54<32>:word32] = Mem50[dwArg04 + 0x54<32>:word32]
	Mem54[ecx + 0x58<32>:word32] = Mem52[dwArg04 + 0x58<32>:word32]
	Mem56[ecx + 0x5C<32>:word32] = Mem54[dwArg04 + 0x5C<32>:word32]
	Mem59[ecx + 0x60<32>:byte] = Mem56[dwArg04 + 0x60<32>:byte]
	Mem61[ecx + 0x64<32>:word32] = Mem59[dwArg04 + 0x64<32>:word32]
	Mem64[ecx + 0x68<32>:byte] = Mem61[dwArg04 + 0x68<32>:byte]
	Mem67[ecx + 0x69<32>:byte] = Mem64[dwArg04 + 0x69<32>:byte]
	Mem69[ecx + 0x6A<32>:byte] = Mem67[dwArg04 + 0x6A<32>:byte]
	Mem72[ecx + 0x6B<32>:byte] = Mem69[dwArg04 + 0x6B<32>:byte]
	Mem75[ecx + 0x6C<32>:byte] = Mem72[dwArg04 + 0x6C<32>:byte]
	Mem77[ecx + 0x70<32>:word32] = Mem75[dwArg04 + 0x70<32>:word32]
	Mem79[ecx + 0x74<32>:word32] = Mem77[dwArg04 + 0x74<32>:word32]
	Mem82[ecx + 0x78<32>:word32] = Mem79[dwArg04 + 0x78<32>:word32]
	fn0042CFC0(ecx + 0x7C<32>, dwArg04 + 0x7C<32>)
	Mem98[ecx + 0x8C<32>:word32] = Mem84[dwArg04 + 0x8C<32>:word32]
	Mem100[ecx + 0x90<32>:word32] = Mem98[dwArg04 + 0x90<32>:word32]
	Mem102[ecx + 0x94<32>:word32] = Mem100[dwArg04 + 0x94<32>:word32]
	Mem104[ecx + 0x98<32>:word32] = Mem102[dwArg04 + 0x98<32>:word32]
	Mem106[ecx + 0x9C<32>:word32] = Mem104[dwArg04 + 0x9C<32>:word32]
	Mem108[ecx + 0xA0<32>:word32] = Mem106[dwArg04 + 0xA0<32>:word32]
	Mem110[ecx + 0xA4<32>:word32] = Mem108[dwArg04 + 0xA4<32>:word32]
	Mem112[ecx + 0xA8<32>:word32] = Mem110[dwArg04 + 0xA8<32>:word32]
	Mem114[ecx + 0xB0<32>:word32] = Mem112[dwArg04 + 0xB0<32>:word32]
	Mem116[ecx + 0xB4<32>:word32] = Mem114[dwArg04 + 0xB4<32>:word32]
	Mem119[ecx + 0xB8<32>:byte] = Mem116[dwArg04 + 0xB8<32>:byte]
	Mem121[ecx + 0xBC<32>:word32] = Mem119[dwArg04 + 0xBC<32>:word32]
	Mem123[ecx + 0xC0<32>:word32] = Mem121[dwArg04 + 0xC0<32>:word32]
	Mem125[ecx + 0xC4<32>:word32] = Mem123[dwArg04 + 0xC4<32>:word32]
	Mem127[ecx + 0xC8<32>:word32] = Mem125[dwArg04 + 0xC8<32>:word32]
	word32 esp_163 = fp - 0xC<32>
	word32 ecx_128 = Mem127[dwArg04 + 0xCC<32>:word32]
	word32 ebx_129 = Mem127[ecx + 0xCC<32>:word32]
	branch ebx_129 == ecx_128 l0042DE02
l0042DDD9:
	Mem134[ecx + 0xCC<32>:word32] = ecx_128
	branch ecx_128 == 0<32> l0042DDE8
l0042DDE3:
	fn00401AD0(ecx_128)
l0042DDE8:
	branch ebx_129 == 0<32> l0042DE02
l0042DDEC:
	branch fn00401AE0(ebx_129) != 1<32> l0042DE02
l0042DDF8:
	word32 eax_153 = Mem134[ebx_129:word32]
	call Mem134[eax_153:word32] (retsize: 4;)
		uses: eax:eax_153,ecx:ebx_129,Stack +0004:1<32>,Stack +0018:dwArg04
		defs: esp:esp_163
l0042DE02:
	word32 ecx_171 = Mem170[dwArg04 + 0xD0<32>:word32]
	word32 ebx_173 = Mem170[ecx + 0xD0<32>:word32]
	branch ebx_173 == ecx_171 l0042DE3B
l0042DE12:
	Mem178[ecx + 0xD0<32>:word32] = ecx_171
	branch ecx_171 == 0<32> l0042DE21
l0042DE1C:
	fn00401AD0(ecx_171)
l0042DE21:
	branch ebx_173 == 0<32> l0042DE3B
l0042DE25:
	branch fn00401AE0(ebx_173) != 1<32> l0042DE3B
l0042DE31:
	word32 eax_197 = Mem178[ebx_173:word32]
	word32 edx_198 = Mem178[eax_197:word32]
	Mem202[esp_163 - 4<i32>:word32] = 1<32>
	call edx_198 (retsize: 4;)
		uses: eax:eax_197,ecx:ebx_173,Stack +0008:dwArg04
		defs: esp:esp_210
l0042DE3B:
	word32 ecx_218 = Mem217[dwArg04 + 0xD4<32>:word32]
	word32 ebx_220 = Mem217[ecx + 0xD4<32>:word32]
	branch ebx_220 == ecx_218 l0042DE74
l0042DE4B:
	Mem225[ecx + 0xD4<32>:word32] = ecx_218
	branch ecx_218 == 0<32> l0042DE5A
l0042DE55:
	fn00401AD0(ecx_218)
l0042DE5A:
	branch ebx_220 == 0<32> l0042DE74
l0042DE5E:
	branch fn00401AE0(ebx_220) != 1<32> l0042DE74
l0042DE6A:
	word32 eax_244 = Mem225[ebx_220:word32]
	word32 edx_245 = Mem225[eax_244:word32]
	Mem249[esp_163 - 4<i32>:word32] = 1<32>
	call edx_245 (retsize: 4;)
		uses: eax:eax_244,ecx:ebx_220,Stack +0008:dwArg04
l0042DE74:
	Mem267[ecx + 0xD8<32>:byte] = Mem264[dwArg04 + 0xD8<32>:byte]
	return
fn0042DC50_exit:


word128 fn0042DE90(word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042F170
// MayUse:  fs:[0..15] xmm0:[0..127]
// LiveOut: xmm0
// Trashed: SCZO eax ecx edx FPUF Top xmm0
// Preserved: esp
fn0042DE90_entry:
l0042DE90:
	word32 eax_9 = Mem7[fs:0<32>:word32]
	Mem20[fs:0<32>:word32] = fp - 0xC<32>
	operator =(0xA54720<32>, 0x8A6A50<32>)
	word128 xmm0_30
	fn0042DC50(0xA54768<32>, fn005AEDE0(fp - 0xEC<32>, xmm0, out xmm0_30))
	fn005AEED0(fp - 0xEC<32>)
	Mem58[fs:0x00000000<p32>:word32] = eax_9
	return xmm0_30
fn0042DE90_exit:


word32 fn0042DF20(word32 ecx, selector es, selector ds, word128 xmm0, word32 dwArg04, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & xmm0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042DF20
//      fn007B2D10
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] xmm0:[0..127]
// LiveOut: ebp ebx esi esp xmm0
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp FPUF Top xmm0 xmm1 xmm2
// Preserved:
fn0042DF20_entry:
l0042DF20:
	__align(fp - 4<i32>)
	Mem31[fs:0<32>:word32] = fp - 0x10<32>
	word32 ebp_168 = fp - 4<i32>
	word32 esp_141 = fp - 0x188<32>
	word32 edi_206 = ecx
	word32 ebx_169 = dwArg04
	word32 eax_35 = Mem31[dwArg04 + 4<32>:word32]
	branch eax_35 == 0x115<32> l0042DF66
l0042DF61:
	branch eax_35 != 0x3A<32> l0042DFB8
l0042DF66:
	word32 esi_42 = Mem31[dwArg04:word32]
	fn0041F0B0()
	branch Mem56[ecx + 0x528<32>:byte] != 0<8> l0042DF9F
l0042DF91:
	branch Mem62[0x00A69858<p32>:byte] != 1<8> l0042DFB8
l0042DF9A:
	branch esi_42 != 2<32> l0042DFB8
l0042DF9F:
	Mem72[0x00A69858<p32>:byte] = CONVERT(esi_42 == 1<32>, bool, int8)
	word32 esi_1098
	word128 xmm0_1099
	word32 ebp_1097
	fn0042DF20(ecx, es, ds, xmm0, fp - 0x168<32>, out ebp_1097, out esi_1098, out xmm0_1099)
	esp_141 = <invalid>
l0042DFB8:
	Mem99[esp_141 + 0x17<32>:byte] = 0<8>
	Mem100[esp_141 + 0x18<32>:word32] = 0<32>
	word32 esi_109 = 0<32>
	branch Mem96[dwArg04:word32] != 2<32> l0042DFF9
l0042DFC8:
	word32 eax_102 = Mem100[dwArg04 + 4<32>:word32]
	branch Mem100[ecx + 4<32> + eax_102 * 4<32>:word32] != 0<32> l0042DFEB
l0042DFEB:
	word32 ecx_106 = Mem100[ecx + 4<32> + eax_102 * 4<32>:word32]
	Mem107[ecx + 4<32> + eax_102 * 4<32>:word32] = 0<32>
	Mem108[esp_141 + 0x18<32>:word32] = ecx_106
	esi_109 = ecx_106
l0042DFF9:
	branch Mem111[dwArg04:word32] != 1<32> l0042E00C
l0042DFFE:
	branch Mem111[0x00A69858<p32>:byte] == 0<8> l0042E00C
l0042E007:
	Mem117[esp_141 + 0x17<32>:byte] = 0<8>
l0042E00C:
	branch esi_109 == 5<32> l0042DFD1
l0042E011:
	word32 edx_123 = Mem122[0x00A577E0<p32>:word32]
	word32 eax_124 = Mem122[edx_123:word32]
	Mem128[esp_141 - 4<i32>:word32] = dwArg04
	word32 eax_1090
	call eax_124 (retsize: 4;)
		uses: ecx:0xA577E0<32>,edx:edx_123,Stack +0008:dwArg04
		defs: eax:eax_142,esp:esp_141
	byte al_147 = SLICE(eax_1090, byte, 0)
	Mem150[esp_141 + 0x17<32>:byte] = al_147
	branch al_147 == 0<8> l0042E039
l0042E029:
	branch Mem150[dwArg04:word32] != 1<32> l0042E039
l0042E02E:
	Mem155[ecx + 4<32> + Mem150[dwArg04 + 4<32>:word32] * 4<32>:word32] = 1<32>
l0042E039:
	branch esi_109 == 1<32> l0042DFD1
l0042E03E:
	branch al_147 != 0<8> l0042E0D8
l0042E046:
	ebx_169 = fn0045E0B0(dwArg04, esi_109, ecx, out ebp_168)
	Mem181[esp_141 - 4<i32>:word32] = 1<32>
	Mem183[esp_141 - 8<i32>:word32] = 0<32>
	Mem185[esp_141 - 12<i32>:word32] = 0x8AA9BC<32>
	Mem187[esp_141 - 16<i32>:word32] = ebx_169
	word32 esi_191
	Mem199[esp_141 - 0x10<32>:word32] = fn00651DD0(out esi_191)
	Mem201[esp_141 - 0x14<32>:word32] = 0x8A8C64<32>
	Mem203[esp_141 - 0x18<32>:word32] = esi_191
	word32 edx_1100
	Mem215[esp_141 - 0x14<32>:word32] = fn006DF760(Mem203[esp_141 - 0x18<32>:word32], Mem203[esp_141 - 0x14<32>:word32], out edx_1100, out edi_206)
	word32 eax_251 = fn00657140(ebx_169, edi_206, es, ds, Mem215[esp_141 - 0x14<32>:word32], Mem215[esp_141 - 0x10<32>:word32], Mem215[esp_141 - 0xC<32>:word32], Mem215[esp_141 - 8<32>:byte])
	word24 eax_24_8_878 = SLICE(eax_251, word24, 8)
	branch eax_251 == 0<32> l0042E0BC
l0042E07E:
	Mem265[esp_141 - 4<i32>:word32] = 0x8AA998<32>
	Mem268[esp_141 - 8<i32>:word32] = esp_141 + 0x17<32>
	Mem270[esp_141 - 12<i32>:word32] = eax_251
	word32 ecx_272
	word32 eax_271 = fn00656570(ebx_169, ebp_168, eax_251, edi_206, es, ds, Mem270[esp_141 - 12<i32>:word32], Mem270[esp_141 - 8<i32>:word32], Mem270[esp_141 - 4<i32>:word32], out ecx_272, out edi_206)
	word32 v18_282 = Mem270[eax_251:word32] + 0xFFFFFFFF<32>
	Mem283[eax_251:word32] = v18_282
	Mem285[esp_141 + 0x1C<32>:word32] = eax_271
	eax_24_8_878 = SLICE(eax_271, word24, 8) (alias)
	branch v18_282 != 0<32> l0042E0A6
l0042E09A:
	word32 edx_287 = Mem285[eax_251 + 4<32>:word32]
	word32 eax_288 = Mem285[edx_287 + 0x18<32>:word32]
	Mem290[esp_141 - 4<i32>:word32] = eax_251
	word32 esp_292
	word32 eax_293
	call eax_288 (retsize: 4;)
		uses: ecx:ecx_272,edx:edx_287,Stack +0008:dwArg04
		defs: eax:eax_293,esp:esp_292
	eax_24_8_878 = SLICE(eax_293, word24, 8) (alias)
	esp_141 = esp_292 + 4<32>
l0042E0A6:
	branch Mem301[esp_141 + 0x1C<32>:word32] == 0<32> l0042E0BC
l0042E0AD:
	word32 esp_304 = esp_141 - 4<i32>
	Mem305[esp_304:word32] = 0<32>
	word32 esi_1101
	ebx_169 = fn006E8D90(ebx_169, eax_251, edi_206, es, ds, out ebp_168, out esi_1101, out edi_206)
	esp_141 = esp_304 + 4<32>
	word32 ecx_1102
	word32 edx_1103
	eax_24_8_878 = SLICE(fn006E1160(out ecx_1102, out edx_1103), word24, 8) (alias)
l0042E0BC:
	byte al_339 = Mem338[esp_141 + 0x17<32>:byte]
	branch al_339 == 0<8> l0042E0D4
l0042E0C4:
	branch Mem338[ebx_169:word32] != 1<32> l0042E0D4
l0042E0C9:
	Mem348[edi_206 + 4<32> + Mem338[ebx_169 + 4<32>:word32] * 4<32>:word32] = 6<32>
l0042E0D4:
	esi_109 = Mem350[esp_141 + 0x18<32>:word32]
	eax_1090 = SEQ(eax_24_8_878, al_339) (alias)
l0042E0D8:
	byte al_355 = SLICE(eax_1090, byte, 0)
	branch esi_109 == 6<32> l0042DFD1
l0042E0E1:
	word32 eax_1085 = eax_1090
	branch al_355 != 0<8> l0042E14E
l0042E0E5:
	word32 esp_362 = esp_141 - 4<i32>
	Mem363[esp_362:word32] = esp_141 + 0x1C<32>
	word32 ecx_373 = Mem363[fn00422DB0(fn00462790(), Mem363[esp_362:word32]):word32]
	word32 edx_374 = Mem363[ecx_373:word32]
	word32 eax_375 = Mem363[edx_374:word32]
	Mem379[esp_362:word32] = ebx_169
	Mem380[esp_362 + 0x184<32>:word32] = 0<32>
	word32 eax_1092
	call eax_375 (retsize: 4;)
		uses: ecx:ecx_373,edx:edx_374,Stack +0008:dwArg04
		defs: eax:eax_411,esp:esp_410
	word32 ecx_416 = Mem380[esp_141 + 0x1C<32>:word32]
	Mem420[esp_141 + 0x17<32>:byte] = SLICE(eax_1092, byte, 0)
	Mem421[esp_141 + 0x180<32>:word32] = 0xFFFFFFFF<32>
	branch ecx_416 == 0<32> l0042E13A
l0042E121:
	word32 v19_423 = Mem421[ecx_416 + 4<32>:word32] + 0xFFFFFFFF<32>
	Mem424[ecx_416 + 4<32>:word32] = v19_423
	word24 eax_24_8_887 = SLICE(ecx_416 + 4<32>, word24, 8)
	branch v19_423 != 0<32> l0042E136
l0042E12A:
	word32 ecx_428 = Mem424[ecx_416 + 8<32>:word32]
	word32 edx_429 = Mem424[ecx_428 + 0x18<32>:word32]
	Mem431[esp_141 - 4<i32>:word32] = ecx_416 + 4<32>
	word32 esp_432
	word32 eax_433
	word32 edx_435
	call edx_429 (retsize: 4;)
		uses: ecx:ecx_428,edx:edx_435,Stack +0008:dwArg04
		defs: eax:eax_433,edx:edx_435,esp:esp_432
	eax_24_8_887 = SLICE(eax_433, word24, 8) (alias)
	esp_141 = esp_432 + 4<32>
l0042E136:
	eax_1092 = SEQ(eax_24_8_887, Mem441[esp_141 + 0x17<32>:byte]) (alias)
l0042E13A:
	eax_1085 = eax_1092 (alias)
	branch SLICE(eax_1092, byte, 0) == 0<8> l0042E14E
l0042E13E:
	eax_1085 = eax_1092 (alias)
	branch Mem449[ebx_169:word32] != 1<32> l0042E14E
l0042E143:
	Mem455[edi_206 + 4<32> + Mem449[ebx_169 + 4<32>:word32] * 4<32>:word32] = 3<32>
	eax_1085 = eax_1092 (alias)
l0042E14E:
	byte al_461 = SLICE(eax_1085, byte, 0)
	branch esi_109 == 3<32> l0042DFD1
l0042E157:
	word32 eax_1082 = eax_1085
	branch al_461 != 0<8> l0042E180
l0042E15B:
	eax_1082 = eax_1085 (alias)
	branch Mem466[ebx_169:word32] != 1<32> l0042E180
l0042E160:
	word32 esp_472 = esp_141 - 4<i32>
	Mem473[esp_472:word32] = ebx_169
	eax_1082 = CONVERT(fn00421E80(edi_206, ebx_169, ebp_168, esi_109, edi_206, es, ds, Mem473[esp_472:word32], out ebp_168, out esi_109, out edi_206, out xmm0), uint8, uint32)
	byte al_511 = SLICE(eax_1082, byte, 0)
	Mem514[esp_472 + 0x1B<32>:byte] = al_511
	branch al_511 == 0<8> l0042E180
l0042E170:
	branch Mem514[ebx_169:word32] != 1<32> l0042E180
l0042E175:
	Mem519[edi_206 + 4<32> + Mem514[ebx_169 + 4<32>:word32] * 4<32>:word32] = 4<32>
l0042E180:
	byte al_523 = SLICE(eax_1082, byte, 0)
	branch esi_109 == 4<32> l0042DFD1
l0042E189:
	word32 eax_1079 = eax_1082
	branch al_523 != 0<8> l0042E249
l0042E191:
	word128 xmm0_551
	word32 ebp_1104
	word32 ebx_548
	word32 edi_549
	word32 esi_550
	branch Mem556[fn0081DDF0(ebx_169, esi_109, edi_206, xmm0, out ebx_548, out ebp_1104, out esi_550, out edi_549, out xmm0_551):word32] == 2<32> l0042E1DA
l0042E19B:
	branch Mem556[fn0043D330(ebx_548, esi_550, edi_549, out ebx_548, out esi_550, out edi_549) + 0x10<32>:word32] == 0<32> l0042E1DA
l0042E1A6:
	word32 esi_1105
	word32 edi_1106
	fn0043D330(ebx_548, esi_550, edi_549, out ebx_548, out esi_1105, out edi_1106)
	word32 esp_583 = esp_141 - 4<i32>
	Mem584[esp_583:word32] = 0<32>
	Mem586[esp_583 - 4<i32>:word32] = 0x8AA980<32>
	Mem588[esp_583 - 8<i32>:word32] = ebx_548
	word32 esi_592
	Mem600[esp_583 - 8<32>:word32] = fn00651DD0(out esi_592)
	Mem602[esp_583 - 0xC<32>:word32] = 0x8A8C64<32>
	Mem604[esp_583 - 0x10<32>:word32] = esi_592
	word32 edx_1107
	Mem616[esp_583 - 0xC<32>:word32] = fn006DF760(Mem604[esp_583 - 0x10<32>:word32], Mem604[esp_583 - 0xC<32>:word32], out edx_1107, out edi_549)
	fn0041F300(ebx_548, edi_549, es, ds, Mem616[esp_583 - 0xC<32>:word32], Mem616[esp_583 - 8<32>:word32], Mem616[esp_583 - 4<32>:word32], Mem616[esp_583:word32])
	esi_550 = Mem616[esp_583 + 0x1C<32>:word32]
l0042E1DA:
	word32 eax_636 = Mem635[ebx_548:word32]
	branch eax_636 != 1<32> l0042E1EE
l0042E1EE:
	branch eax_636 != 2<32> l0042E203
l0042E1F3:
	Mem643[edi_549 + 4<32> + Mem635[ebx_548 + 4<32>:word32] * 4<32>:word32] = 0<32>
l0042E1E1:
	Mem645[edi_549 + 4<32> + Mem635[ebx_548 + 4<32>:word32] * 4<32>:word32] = 2<32>
l0042E1FE:
	Mem648[esp_141 + 0x17<32>:byte] = 1<8>
l0042E203:
	word32 edi_1108
	word32 eax_662 = fn0081DDF0(ebx_548, esi_550, edi_549, xmm0_551, out ebx_169, out ebp_168, out esi_109, out edi_1108, out xmm0)
	word24 eax_24_8_895 = SLICE(eax_662, word24, 8)
	branch Mem673[eax_662:word32] != 1<32> l0042E245
l0042E20D:
	word32 edx_677 = Mem673[ebx_169:word32]
	word32 eax_678 = Mem673[ebx_169 + 4<32>:word32]
	Mem680[esp_141 + 0x34<32>:word32] = Mem673[ebx_169 + 8<32>:word32]
	Mem681[esp_141 + 0x2C<32>:word32] = edx_677
	Mem682[esp_141 + 0x30<32>:word32] = eax_678
	word32 ecx_683 = 0x4E<32>
	word32 esi_684 = 0xA69720<32>
	word32 edi_685 = esp_141 + 0x38<32>
l0042E22F:
	branch ecx_683 == 0<32> l0042E231
l0042E231:
	word32 esp_689 = esp_141 - 4<i32>
	Mem690[esp_689:word32] = esp_141 + 0x2C<32>
	Mem695[edi_685:byte] = Mem690[esi_684:byte]
	fn0042D270(0xA0D1B8<32>, es, ds, Mem695[esp_689:word32])
	eax_24_8_895 = SLICE(eax_704, word24, 8) (alias)
	esi_109 = Mem695[esp_689 + 0x1C<32>:word32]
l0042E245:
	eax_1079 = SEQ(eax_24_8_895, Mem716[esp_141 + 0x17<32>:byte]) (alias)
l0042E249:
	byte al_723 = SLICE(eax_1079, byte, 0)
	branch esi_109 == 0<32> l0042E267
l0042E24D:
	branch al_723 != 0<8> l0042E267
l0042E251:
	word32 eax_731 = Mem730[ebx_169 + 4<32>:word32]
	word32 esp_733 = esp_141 - 4<i32>
	Mem734[esp_733:word32] = esi_109
	Mem736[esp_733 - 4<i32>:word32] = eax_731
	Mem738[esp_733 - 8<i32>:word32] = 0x8AA950<32>
	fn00520C80()
l0042E267:
	Mem748[fs:0x00000000<p32>:word32] = Mem743[esp_141 + 0x178<32>:word32]
	word32 esp_750 = esp_141 + 4<i32>
	word32 esi_753 = Mem748[esp_750 + 4<i32>:word32]
	word32 ebx_755 = Mem748[esp_750 + 8<i32>:word32]
	ebpOut = Mem748[ebp_168:word32]
	esiOut = esi_753
	xmm0Out = xmm0
	return ebx_755
l0042E22F_1:
	Mem766[edi_685:word32] = Mem764[esi_684:word32]
	esi_684 = esi_684 + 4<i32>
	edi_685 = edi_685 + 4<i32>
	ecx_683 = ecx_683 - 1<32>
l0042DFD1:
	Mem775[fs:0x00000000<p32>:word32] = Mem772[esp_141 + 0x178<32>:word32]
	word32 esp_777 = esp_141 + 4<i32>
	word32 esi_780 = Mem775[esp_777 + 4<i32>:word32]
	word32 ebx_782 = Mem775[esp_777 + 8<i32>:word32]
	ebpOut = Mem775[ebp_168:word32]
	esiOut = esi_780
	xmm0Out = xmm0
	return ebx_782
fn0042DF20_exit:


byte fn0042F170(word32 ecx, word32 ebx, word32 ebp, word32 edi, selector es, selector ds, word128 xmm0, word32 dwArg04, word32 dwArg08, ptr32 & ebpOut, ptr32 & ediOut, ptr32 & xmm0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004014B0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] xmm0:[0..127]
// LiveOut: eax ebp edi xmm0
// Trashed: SCZDOP eax ebp ecx edi edx FPUF Top xmm0
// Preserved: ebx esi esp
fn0042F170_entry:
l0042F170:
	Mem17[ecx + 0x4E8<32>:word32] = dwArg08
	Mem22[0x00A53FF0<p32>:word32] = dwArg04
	Mem23[0x00A53FF4<p32>:word32] = dwArg08
	Mem24[0x00A115B4<p32>:byte] = 0<8>
	word32 ebp_30
	word32 ebx_31
	word32 edi_32
	word32 esi_34
	fn00623E00(ebx_31, ebp_30, esi_34, edi_32, es, ds, fn006233B0(ebx, ebp, ecx, edi, out ebx_31, out ebp_30, out esi_34, out edi_32), 0<32>, 0x8AB010<32>)
	word32 ebp_67
	word32 ebx_68
	word32 edi_69
	word32 esi_71
	fn00623E00(ebx_68, ebp_67, esi_71, edi_69, es, ds, fn006233B0(ebx_31, ebp_30, esi_34, edi_32, out ebx_68, out ebp_67, out esi_71, out edi_69), 0<32>, 0x8A8CC4<32>)
	word32 ebp_99
	word32 ebx_100
	word32 edi_101
	word32 esi_103
	fn00623E00(ebx_100, ebp_99, esi_103, edi_101, es, ds, fn006233B0(ebx_68, ebp_67, esi_71, edi_69, out ebx_100, out ebp_99, out esi_103, out edi_101), 0<32>, 0x8AAFF8<32>)
	word32 ebp_131
	word32 ebx_132
	word32 edi_133
	word32 esi_135
	fn00623E00(ebx_132, ebp_131, esi_135, edi_133, es, ds, fn006233B0(ebx_100, ebp_99, esi_103, edi_101, out ebx_132, out ebp_131, out esi_135, out edi_133), 0<32>, 0x8A85F0<32>)
	word32 ebp_163
	word32 ebx_164
	word32 edi_165
	word32 esi_167
	fn00623E00(ebx_164, ebp_163, esi_167, edi_165, es, ds, fn006233B0(ebx_132, ebp_131, esi_135, edi_133, out ebx_164, out ebp_163, out esi_167, out edi_165), 0<32>, 0x8A85E8<32>)
	word32 ebp_195
	word32 ebx_196
	word32 edi_197
	word32 esi_199
	fn00623E00(ebx_196, ebp_195, esi_199, edi_197, es, ds, fn006233B0(ebx_164, ebp_163, esi_167, edi_165, out ebx_196, out ebp_195, out esi_199, out edi_197), 0<32>, 0x8A85E0<32>)
	word32 ebp_227
	word32 ebx_228
	word32 edi_229
	word32 esi_231
	fn00623E00(ebx_228, ebp_227, esi_231, edi_229, es, ds, fn006233B0(ebx_196, ebp_195, esi_199, edi_197, out ebx_228, out ebp_227, out esi_231, out edi_229), 0<32>, 0x8A85D8<32>)
	word32 ebp_259
	word32 ebx_260
	word32 edi_261
	word32 esi_263
	fn00623E00(ebx_260, ebp_259, esi_263, edi_261, es, ds, fn006233B0(ebx_228, ebp_227, esi_231, edi_229, out ebx_260, out ebp_259, out esi_263, out edi_261), 0<32>, 0x8A85D0<32>)
	word32 ebp_291
	word32 ebx_292
	word32 edi_293
	word32 esi_295
	fn00623E00(ebx_292, ebp_291, esi_295, edi_293, es, ds, fn006233B0(ebx_260, ebp_259, esi_263, edi_261, out ebx_292, out ebp_291, out esi_295, out edi_293), 0<32>, 0x8A8AD8<32>)
	word32 ebp_323
	word32 ebx_324
	word32 edi_325
	word32 esi_327
	fn00623E00(ebx_324, ebp_323, esi_327, edi_325, es, ds, fn006233B0(ebx_292, ebp_291, esi_295, edi_293, out ebx_324, out ebp_323, out esi_327, out edi_325), 0<32>, 0x8AAFB8<32>)
	word32 ebp_355
	word32 ebx_356
	word32 edi_357
	word32 esi_359
	fn00623E00(ebx_356, ebp_355, esi_359, edi_357, es, ds, fn006233B0(ebx_324, ebp_323, esi_327, edi_325, out ebx_356, out ebp_355, out esi_359, out edi_357), 0<32>, 0x8AAFA8<32>)
	word32 ebp_379
	word32 edi_381
	word32 ebx_592
	word32 esi_383
	word32 eax_377 = fn006233B0(ebx_356, ebp_355, esi_359, edi_357, out ebx_592, out ebp_379, out esi_383, out edi_381)
	word32 edx_388 = Mem365[eax_377:word32]
	word32 esp_391
	word32 eax_392
	call Mem365[edx_388:word32] (retsize: 4;)
		uses: ecx:eax_377,edx:edx_388,Stack +0010:dwArg04,Stack +0014:dwArg08
		defs: eax:eax_392,esp:esp_391
	Mem398[esp_391 - 4<i32>:word32] = 0x8AAF84<32>
	Mem400[esp_391 - 8<i32>:word32] = 2<32>
	Mem403[esp_391 - 12<i32>:word32] = esi_383 + 0x528<32>
	Mem406[esp_391 - 16<i32>:word32] = 0x8AAF6C<32>
	Mem408[esp_391 - 20<i32>:word32] = esp_391 + 0x10<32>
	fn00422A90(Mem408[esp_391 - 20<i32>:word32])
	byte al_409 = SLICE(eax_392, byte, 0)
	word32 ecx_413 = Mem408[esp_391 + 0x10<32>:word32]
	branch ecx_413 == 0<32> l0042F308
l0042F2FA:
	word32 v14_418 = Mem408[ecx_413 + 4<32>:word32] + 0xFFFFFFFF<32>
	Mem419[ecx_413 + 4<32>:word32] = v14_418
	branch v14_418 != 0<32> l0042F308
l0042F300:
	word32 eax_422 = Mem419[ecx_413:word32]
	word32 edx_423 = Mem419[eax_422:word32]
	Mem425[esp_391 - 4<i32>:word32] = 1<32>
	call edx_423 (retsize: 4;)
		uses: eax:eax_422,ecx:ecx_413,Stack +0008:dwArg04,Stack +000C:dwArg08
l0042F308:
	branch Mem435[esi_383 + 0x52C<32>:word32] != 0<32> l0042F31E
l0042F311:
	esi_383 = fn00420470(esi_383)
l0042F31E:
	branch al_409 == 0<8> l0042F327
l0042F322:
	xmm0 = fn0042DE90(xmm0)
l0042F327:
	word32 eax_471 = timeGetTime()
	Mem474[esi_383 + 0x4F8<32>:word32] = eax_471
	Mem475[esi_383 + 0x4FC<32>:word32] = 0<32>
	ebpOut = ebp_379
	ediOut = edi_381
	xmm0Out = xmm0
	return al_409
fn0042F170_exit:


