word32 fn00651DD0(ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042DF20
// MayUse: 
// LiveOut: eax esi
// Trashed: SCZO eax ecx edx esi Top
// Preserved: esp
fn00651DD0_entry:
l00651DD0:
	word32 esi_24
	word32 edx_41
	word32 eax_23 = fn006EA200(out edx_41, out esi_24)
	esiOut = esi_24
	return eax_23
fn00651DD0_exit:


word32 fn00656460(word32 dwArg04, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn006F6BF0
//      fn006F7890
// MayUse:  Stack +0004:[0..31]
// LiveOut: eax ecx edx
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn00656460_entry:
l00656460:
	basic_string(fp - 0x1C<32>, dwArg04)
	word32 ecx_16 = Mem12[0x00A69A38<p32>:word32]
	word32 edx_18 = Mem12[Mem12[ecx_16:word32] + 4<32>:word32]
	word32 eax_25
	call edx_18 (retsize: 4;)
		uses: eax:fp - 0x1C<32>,ecx:ecx_16,edx:edx_18,Stack +0004:fp - 0x1C<32>,Stack +0008:0<32>,Stack +0030:dwArg04
		defs: eax:eax_25
	~basic_string(fp - 0x1C<32>)
	branch eax_25 == 1<32> l006564AD
l006564AD:
	ecxOut = <invalid>
	edxOut = <invalid>
	return 1<32>
l0065649B:
	branch eax_25 == 2<32> l006564A7
l006564A7:
	ecxOut = <invalid>
	edxOut = <invalid>
	return 0<32>
l006564A0:
	ecxOut = <invalid>
	edxOut = <invalid>
	return 0xFFFFFFFF<32>
fn00656460_exit:


word32 fn00656570(word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ecxOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042DF20
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax ecx edi
// Trashed: SCZDOP eax ecx edi edx Top
// Preserved: ebx esi esp
fn00656570_entry:
l00656570:
	word32 eax_7 = Mem0[0x00A14188<p32>:word32] ^ fp - 0x104<32>
	word32 eax_17 = Mem15[dwArg04 + 4<32>:word32]
	branch eax_17 == 0xA1E7E8<32> l0065668B
l006565A2:
	word32 ecx_381
	word32 edx_382
	branch fn006D5670(eax_17, 0xA1E7E8<32>, out ecx_381, out edx_382) != 0<32> l0065668B
l0065668B:
	word32 edx_43
	word32 edi_44
	word32 esi_380
	word32 ecx_379
	byte dl_54 = CONVERT(fn007051A0(edi, dwArg04, out ecx_379, out edx_43, out esi_380, out edi_44) != 0<32>, bool, int8)
	Mem58[dwArg08:byte] = dl_54
	word32 ecx_82
	word32 eax_81 = fn00694B8E(0<32>, eax_7 ^ fp - 0x104<32>, SEQ(SLICE(edx_43, word24, 8), dl_54), ebx, ebp, esi, edi_44, es, ds, ebx, out ecx_82)
	ecxOut = ecx_82
	ediOut = edi_44
	return eax_81
l006565B8:
	word32 eax_91 = Mem23[dwArg04 + 4<32>:word32]
	branch eax_91 == 0xA1B450<32> l006565D5
l006565C3:
	word32 edx_386
	word32 ecx_385
	branch fn006D5670(eax_91, 0xA1B450<32>, out ecx_385, out edx_386) == 0<32> l00656622
l006565D5:
	word32 edx_117
	word32 esi_384
	word32 ecx_383
	word32 eax_115 = fn006ECC50(dwArg04, out ecx_383, out edx_117, out esi_384)
	branch _stricmp(eax_115, 0x8A77E4<32>) != 0<32> l0065660F
l0065660F:
	word32 eax_138 = _stricmp(eax_115, 0x8A77DC<32>)
	byte al_232 = SLICE(eax_138, byte, 0)
	branch eax_138 != 0<32> l00656622
l00656622:
	word32 eax_145 = dwArg0C
	word32 edx_147 = fp - 0x104<32> - dwArg0C
l00656630:
	byte cl_151 = Mem150[eax_145:byte]
	Mem153[edx_147 + eax_145:byte] = cl_151
	eax_145 = eax_145 + 1<32>
	branch cl_151 != 0<8> l00656630
l0065663C:
	word32 edi_160 = fp - 0x105<32> + 1<32>
l00656643:
	edi_160 = edi_388 + 1<32>
	edi_388 = edi_160
	branch Mem153[edi_388 + 0<32>:byte] != 0<8> l00656643
l0065664D:
	word32 ecx_169 = 5<32>
	word32 esi_170 = 0x8CA588<32>
l00656657:
	branch ecx_169 == 0<32> l00656659
l00656659:
	word32 ecx_173 = Mem172[0x00A16B7C<p32>:word32]
	Mem177[edi_160:word16] = Mem172[esi_170:word16]
	Mem187[edi_160 + 2<i32>:byte] = Mem185[esi_170 + 2<i32>:byte]
	word32 ecx_387
	word32 edx_192
	fn006E0F80(ecx_173, fp - 0x104<32>, out ecx_387, out edx_192)
	word32 ecx_218
	word32 eax_217 = fn00694B8E(0xFFFFFFFF<32>, eax_7 ^ fp - 0x104<32>, edx_192, ebx, ebp, esi, edi, es, ds, ebx, out ecx_218)
	ecxOut = ecx_218
	ediOut = edi
	return eax_217
l00656657_1:
	Mem228[edi_160:word32] = Mem172[esi_170:word32]
	esi_170 = esi_170 + 4<i32>
	edi_160 = edi_160 + 4<i32>
	ecx_169 = ecx_169 - 1<32>
l0065661E:
	Mem234[dwArg08:byte] = al_232
l006565F2:
	Mem235[dwArg08:byte] = 1<8>
l006565F5:
	word32 ecx_265
	word32 eax_264 = fn00694B8E(0<32>, eax_7 ^ fp - 0x104<32>, edx_117, ebx, ebp, esi, edi, es, ds, ebx, out ecx_265)
	ecxOut = ecx_265
	ediOut = edi
	return eax_264
fn00656570_exit:


word32 fn00657140(word32 ebx, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, byte bArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041F300
//      fn0042DF20
// MayUse:  cs:[0..15] ds:[0..15] ebx:[8..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..7]
// LiveOut: eax
// Trashed: SCZDOP eax edx Top
// Preserved: ebp ebx ecx edi esi esp
fn00657140_entry:
	word24 ebx_24_8_47 = SLICE(ebx, word24, 8)
l00657140:
	word32 esi_23 = dwArg04
	word32 ebx_522 = SEQ(ebx_24_8_47, bArg10)
	branch fn006E0FC0() == 0<32> l00657168
l00657156:
	word32 ebx_48 = SEQ(ebx_24_8_47, bArg10)
	branch bArg10 == 0<8> l0065715E
l0065715A:
	ebx_522 = SEQ(ebx_24_8_47, bArg10) (alias)
	branch dwArg04 == 0<32> l00657168
l0065715E:
	word32 ebp_525
	word32 edi_526
	ebx_522 = fn006E8D90(ebx_48, dwArg04, edi, es, ds, out ebp_525, out esi_23, out edi_526)
l00657168:
	word32 ecx_110
	byte bl_78 = SLICE(ebx_522, byte, 0)
	word32 esp_171 = fp - 20<i32>
	word32 dwArg04_405 = 0<32>
	branch esi_23 == 0<32> l006571B3
l006571B3:
	branch dwArg08 == 0<32> l006571C2
l006571B7:
	branch bl_78 == 0<8> l006571C2
l006571BB:
	word32 edx_531
	word32 ecx_530
	fn006E1160(out ecx_530, out edx_531)
l0065717C:
	branch dwArg08 == 0<32> l006571C2
l006571C2:
	word32 edx_527
	fn006E15D0(Mem73[0x00A17E2C<p32>:word32], 0x8CA748<32>, out ecx_110, out edx_527)
l00657180:
	branch fn006DF870(esi_23) == 0<32> l0065719D
l0065719D:
	word32 edx_528
	fn006E15D0(Mem119[0x00A16B7C<p32>:word32], 0x8CA78C<32>, out ecx_110, out edx_528)
l0065718D:
	word32 edx_529
	dwArg04_405 = fn007036F0(out ecx_110, out edx_529)
l006571D9:
	esp_171 = fp - 0x14<32>
	branch esi_23 == 0<32> l006571EE
l006571DD:
	word32 v14_165 = Mem164[esi_23:word32] + 0xFFFFFFFF<32>
	Mem166[esi_23:word32] = v14_165
	branch v14_165 != 0<32> l006571EE
l006571E2:
	word32 edx_169 = Mem166[esi_23 + 4<32>:word32]
	word32 esp_206
	call Mem166[edx_169 + 0x18<32>:word32] (retsize: 4;)
		uses: ecx:ecx_174,edx:edx_169,Stack +0004:esi_66,Stack +0020:dwArg04_423,Stack +0024:dwArg08,Stack +0028:dwArg0C,Stack +002C:bArg10
		defs: esp:esp_206
	esp_171 = esp_206 + 4<32>
l006571EE:
	branch dwArg08 == 0<32> l00657203
l006571F2:
	word32 v16_219 = Mem218[dwArg08:word32] + 0xFFFFFFFF<32>
	Mem220[dwArg08:word32] = v16_219
	branch v16_219 != 0<32> l00657203
l006571F7:
	word32 ecx_223 = Mem220[dwArg08 + 4<32>:word32]
	word32 edx_224 = Mem220[ecx_223 + 0x18<32>:word32]
	Mem227[esp_171 - 4<i32>:word32] = dwArg08
	word32 esp_238
	call edx_224 (retsize: 4;)
		uses: ecx:ecx_223,Stack +0008:dwArg04_430,Stack +000C:dwArg08,Stack +0010:dwArg0C,Stack +0014:bArg10
		defs: esp:esp_238
	esp_171 = esp_238 + 4<32>
l00657203:
	branch Mem247[esp_171 + 0x28<32>:byte] == 0<8> l0065727A
l0065720A:
	word32 eax_250 = fn006E0FC0()
	branch eax_250 == 0<32> l00657275
l00657215:
	word32 esp_256 = esp_171 - 4<i32>
	Mem257[esp_256:word32] = esp_171 + 0x28<32>
	Mem260[esp_256 - 4<i32>:word32] = esp_256 + 0x20<32>
	Mem263[esp_256 - 8<i32>:word32] = esp_256 + 0x14<32>
	fn006E1130(Mem263[esp_256 - 8<i32>:word32], Mem263[esp_256 - 4<i32>:word32], Mem263[esp_256:word32])
	Mem272[esp_256 - 12<i32>:word32] = eax_250
	word32 edi_275
	word32 edx_534
	Mem284[esp_256 - 16<i32>:word32] = fn006DDF70(Mem272[esp_256 - 12<i32>:word32], out edx_534, out edi_275)
	word32 esi_288
	word32 ecx_535
	word32 edx_536
	Mem294[esp_256 - 20<i32>:word32] = fn006ECC50(Mem284[esp_256 - 16<i32>:word32], out ecx_535, out edx_536, out esi_288)
	Mem297[esp_256 - 24<i32>:word32] = dwArg0C
	Mem299[esp_256 - 28<i32>:word32] = 0x8CA71C<32>
	fn00520C80()
	word32 v17_301 = Mem299[esi_288:word32] + 0xFFFFFFFF<32>
	Mem302[esi_288:word32] = v17_301
	word32 esp_300 = esp_256 + 4<32>
	branch v17_301 != 0<32> l00657257
l0065724B:
	word32 eax_305 = Mem302[esi_288 + 4<32>:word32]
	word32 ecx_306 = Mem302[eax_305 + 0x18<32>:word32]
	Mem308[esp_256:word32] = esi_288
	word32 esp_317
	call ecx_306 (retsize: 4;)
		uses: eax:eax_305,ecx:ecx_306,Stack +0008:dwArg04_430,Stack +000C:dwArg08,Stack +0010:dwArg0C,Stack +0014:bArg10
		defs: esp:esp_317
	esp_300 = esp_317 + 4<32>
l00657257:
	word32 eax_328 = Mem326[esp_300 + 0x1C<32>:word32]
	word32 ecx_329 = Mem326[esp_300 + 0x10<32>:word32]
	word32 esp_330 = esp_300 - 4<i32>
	Mem331[esp_330:word32] = Mem326[esp_300 + 0x28<32>:word32]
	Mem333[esp_330 - 4<i32>:word32] = eax_328
	Mem335[esp_330 - 8<i32>:word32] = ecx_329
	word32 edx_538
	word32 ecx_537
	fn006E0E00(Mem335[esp_330:word32], out ecx_537, out edx_538)
	Mem344[esp_330 - 12<i32>:word32] = 0<32>
	word32 esi_540
	word32 edi_541
	word32 ebp_539
	fn006E8D90(ebx_522, esi_288, edi_275, es, ds, out ebp_539, out esi_540, out edi_541)
l00657275:
	word32 ecx_532
	word32 edx_533
	fn006E1160(out ecx_532, out edx_533)
l0065727A:
	return dwArg04_405
fn00657140_exit:


word32 fn00657290(word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & ebxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00723540
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax ebp ebx
// Trashed: SCZDOP eax ebp ebx ecx edx Top
// Preserved: edi esi esp
fn00657290_entry:
l00657290:
	word32 eax_7 = Mem0[0x00A14188<p32>:word32] ^ fp - 0x3C<32>
	basic_string(fp - 0x20<32>, dwArg04)
	word32 ebp_34
	word32 ebx_35
	word32 edx_192
	word32 edi_193
	word32 eax_42 = fn00401700(fn004048C0(ebx, ebp, dwArg04, edi, es, ds, out edx_192, out ebx_35, out ebp_34, out edi_193))
	word32 edx_44 = Mem19[Mem19[eax_42:word32] + 4<32>:word32]
	word32 eax_52
	word32 edx_54
	call edx_44 (retsize: 4;)
		uses: ecx:eax_42,edx:edx_44,Stack +0004:fp - 0x20<32>,Stack +0008:0<32>,Stack +0054:dwArg04
		defs: eax:eax_52,edx:edx_54
	~basic_string(fp - 0x20<32>)
	branch eax_52 != 2<32> l00657352
l00657352:
	word32 ecx_194
	word32 eax_70 = fn00694B8E(0<32>, eax_7 ^ fp - 60<i32>, edx_54, ebx_35, ebp_34, esi, edi, es, ds, esi, out ecx_194)
	ebxOut = ebx_35
	ebpOut = <invalid>
	return eax_70
l006572DC:
	basic_string(fp - 0x3C<32>, dwArg04)
	word32 ebx_92 = fn00405370(ebp_34, dwArg04, eax_52, es, ds, fp - 0x20<32>, fp - 0x3C<32>)
	~basic_string(fp - 0x3C<32>)
	c_str(fp - 0x20<32>)
	fn00520C80()
	word32 eax_119 = fn007234D0(dwArg08, ebx_92, ebp_34, dwArg04, eax_52, es, ds, c_str(fp - 0x20<32>))
	~basic_string(fp - 0x20<32>)
	word32 ecx_195
	word32 eax_139 = fn00694B8E(eax_119, eax_7 ^ fp - 60<i32>, dwArg08, ebx_92, ebp_34, esi, edi, es, ds, esi, out ecx_195)
	ebxOut = ebx_92
	ebpOut = <invalid>
	return eax_139
fn00657290_exit:


void fn00657370(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00420C00
// MayUse:  ecx:[0..31]
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00657370_entry:
l00657370:
	Mem5[ecx:word32] = 0x8CA578<32>
	return
fn00657370_exit:


word32 fn00659040(word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn006E1AB0
//      fn006F6630
//      fn006F6810
//      fn006F7890
//      fn0072F830
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax ebp ebx edx
// Trashed: SCZDOP eax ebp ebx ecx edx Top
// Preserved: edi esi esp
fn00659040_entry:
l00659040:
	word32 eax_7 = Mem0[0x00A14188<p32>:word32] ^ fp - 0x6C<32>
	basic_string(fp - 0x58<32>, dwArg04)
	word32 ecx_24 = Mem20[0x00A69A38<p32>:word32]
	word32 eax_26 = Mem20[Mem20[ecx_24:word32] + 0x24<32>:word32]
	word32 eax_33
	word32 edx_35
	call eax_26 (retsize: 4;)
		uses: eax:eax_26,ecx:ecx_24,edx:fp - 0x58<32>,Stack +0004:fp - 0x58<32>,Stack +0008:dwArg08,Stack +007C:eax_7,Stack +0084:dwArg04,Stack +0088:dwArg08
		defs: eax:eax_33,edx:edx_35
	~basic_string(fp - 0x58<32>)
	word32 esi_101 = dwArg04
	branch eax_33 != 0<32> l0065909D
l0065909D:
	word32 eax_52 = strrchr(dwArg04, 0x2F<32>)
	word32 edi_57 = eax_52
	word32 eax_58 = strrchr(dwArg04, 0x5C<32>)
	branch eax_58 == 0<32> l006590BD
l006590B7:
	branch eax_52 >=u eax_58 l006590BD
l006590BB:
	edi_57 = eax_58
l006590BD:
	word32 eax_70
	branch edi_57 == 0<32> l006590C7
l006590C7:
	eax_70 = 0<32>
l006590C1:
	eax_70 = edi_57 - dwArg04
l006590C9:
	basic_string(fp - 0x20<32>, dwArg04, eax_70)
	branch edi_57 == 0<32> l006590DC
l006590D9:
	esi_101 = edi_57 + 1<32>
l006590DC:
	basic_string(fp - 0x3C<32>, esi_101)
	word32 ecx_106 = Mem102[0x00A69A38<p32>:word32]
	word32 edx_108 = Mem102[Mem102[ecx_106:word32] + 0xC<32>:word32]
	call edx_108 (retsize: 4;)
		uses: eax:fp - 0x68<32>,ecx:ecx_106,edx:edx_108,Stack +0004:fp - 0x68<32>,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +008C:dwArg04,Stack +0090:dwArg08
	word32 edi_129 = 0<32>
	word32 ebx_130 = 0<32>
l00659110:
	branch dwLoc64 == 0<32> l00659183
l00659118:
	word32 ecx_141 = dwLoc60 - dwLoc64
	word32 edx_145 = SLICE(ecx_141 *s64 0x92492493<32>, word32, 32) + ecx_141
	branch edi_129 >=u ((edx_145 >> 4<32>) >>u 0x1F<32>) + (edx_145 >> 4<32>) l00659183
l00659183:
	fclose(eax_33)
	word32 esi_159 = dwLoc64
	branch dwLoc64 == 0<32> l006591BF
l0065919B:
	branch dwLoc64 == dwLoc60 l006591B6
l006591A3:
	~basic_string(esi_159)
	esi_159 = esi_159 + 0x1C<32>
	branch esi_159 != dwLoc60 l006591A3
l006591B2:
l006591B6:
	operator delete(dwLoc64)
l006591BF:
	~basic_string(fp - 0x3C<32>)
	~basic_string(fp - 0x20<32>)
	word32 ecx_478
	word32 eax_237 = fn00694B8E(0<32>, eax_7 ^ fp - 108<i32>, eax_33, ebx, ebp, esi, edi, es, ds, esi, out ecx_478)
	edxOut = eax_33
	ebxOut = <invalid>
	ebpOut = <invalid>
	return eax_237
l00659135:
	word32 eax_249 = ebx_130 + dwLoc64
	word32 eax_257
	word32 edx_259
	call MSVCP80.dll!??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z (retsize: 4;)
		uses: eax:eax_249,ecx:fp - 0x3C<32>,Stack +0004:eax_249,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +008C:dwArg04,Stack +0090:dwArg08
		defs: eax:eax_257,edx:edx_259
	branch SLICE(eax_257, byte, 0) != 0<8> l0065914F
l0065914F:
	fn00403900(fp - 0x68<32>)
	~basic_string(fp - 0x3C<32>)
	~basic_string(fp - 0x20<32>)
	word32 ecx_477
	word32 eax_289 = fn00694B8E(eax_33, eax_7 ^ fp - 0x6C<32>, edx_259, ebx, ebp, esi, edi, es, ds, esi, out ecx_477)
	edxOut = edx_259
	ebxOut = <invalid>
	ebpOut = <invalid>
	return eax_289
l00659147:
	edi_129 = edi_129 + 1<32>
	ebx_130 = ebx_130 + 0x1C<32>
l0065908A:
	word32 ecx_476
	word32 eax_317 = fn00694B8E(0<32>, eax_7 ^ fp - 108<i32>, edx_35, ebx, ebp, esi, edi, es, ds, esi, out ecx_476)
	edxOut = edx_35
	ebxOut = <invalid>
	ebpOut = <invalid>
	return eax_317
fn00659040_exit:


