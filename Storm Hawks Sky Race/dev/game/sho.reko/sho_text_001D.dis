word32 fn005D9410(word32 ebx, word32 esi, word32 edi, word32 dwArg04, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00622B40
// MayUse:  ebx:[0..31] edi:[0..31] esi:[0..31] Stack +0004:[0..31]
// LiveOut: eax edi esi esp
// Trashed: SCZO eax ebx ecx edi edx esi esp Top
// Preserved:
fn005D9410_entry:
l005D9410:
	word32 ecx_5 = dwArg04
	branch dwArg04 >u 0<32> l005D9431
l005D9431:
	branch CONVERT(0xFFFFFFFF<64> /u dwArg04, word32, uint32) >=u 8<32> l005D941D
l005D943D:
	word32 esp_33
	call CxxThrowException (retsize: 4;)
		uses: eax:exception(fp - 0xC<32>, fp + 4<32>),ecx:fp - 0xC<32>,Stack +0004:fp - 0xC<32>,Stack +0008:0x999D08<32>,Stack +000C:0x990018<32>,Stack +001C:0<32>
		defs: esp:esp_33
	int3()
	int3()
	int3()
	int3()
	int3()
	Mem41[esp_33 - 4<i32>:word32] = ebx
	word32 ebx_42 = Mem41[esp_33 + 4<32>:word32]
	Mem45[esp_33 - 8<i32>:word32] = esi
	word32 esi_46 = Mem45[esp_33 + 8<32>:word32]
	branch ebx_42 == esi_46 l005D94A2
l005D94A2:
	word32 eax_49 = Mem45[esp_33 + 0xC<32>:word32]
	esiOut = Mem45[esp_33 - 8<i32>:word32]
	ediOut = edi
	return eax_49
l005D947E:
	Mem56[esp_33 - 12<i32>:word32] = edi
	word32 edi_57 = Mem56[esp_33 + 0xC<32>:word32]
l005D9483:
	esi_46 = esi_46 - 0x20<32>
	Mem64[esp_33 - 16<i32>:word32] = esi_46
	edi_57 = edi_57 - 0x20<32>
	operator =(edi_57, Mem64[esp_33 - 16<i32>:(ptr32 basic_string)])
	Mem71[edi_57 + 0x1C<32>:byte] = Mem64[esi_46 + 0x1C<32>:byte]
	branch esi_46 != ebx_42 l005D9483
l005D949C:
	word32 edi_74 = Mem71[esp_33 - 0xC<32>:word32]
	esiOut = Mem71[esp_33 - 8<32>:word32]
	ediOut = edi_74
	return edi_57
l005D941B:
	ecx_5 = 0<32>
l005D941D:
	word32 eax_88 = operator new(ecx_5 * 8<32>)
	esiOut = esi
	ediOut = edi
	return eax_88
fn005D9410_exit:


word32 fn005DE860(word32 esi, word32 dwArg04, ptr32 & edxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0044D520
//      fn0044F1E0
//      fn005A5370
// MayUse:  esi:[0..31] Stack +0004:[0..31]
// LiveOut: eax edx esi esp
// Trashed: SCZO eax ecx edx esi esp Top
// Preserved:
fn005DE860_entry:
l005DE860:
	word32 ecx_5 = dwArg04
	branch dwArg04 >u 0<32> l005DE87D
l005DE87D:
	edx = CONVERT(0xFFFFFFFF<64> % dwArg04, word64, uint32)
	branch CONVERT(0xFFFFFFFF<64> /u dwArg04, word32, uint32) >=u 0x10<32> l005DE86D
l005DE889:
	word32 esp_33
	word32 ecx_34
	word32 edx_36
	call CxxThrowException (retsize: 4;)
		uses: eax:exception(fp - 0xC<32>, fp + 4<32>),ecx:fp - 0xC<32>,edx:edx_36,Stack +0004:fp - 0xC<32>,Stack +0008:0x999D08<32>,Stack +000C:0x990018<32>,Stack +001C:0<32>
		defs: ecx:ecx_34,edx:edx_36,esp:esp_33
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	Mem40[esp_33 - 4<i32>:word32] = ecx_34
	Mem43[esp_33 - 8<i32>:word32] = esi
	word32 esi_44 = Mem43[esp_33 + 4<32>:word32]
	Mem48[esp_33 - 12<i32>:word32] = ecx_34 + 0x1C<32>
	Mem50[esp_33 - 4<32>:word32] = 0<32>
	basic_string(esi_44, Mem50[esp_33 - 12<i32>:(ptr32 basic_string)])
	word32 esi_54 = Mem50[esp_33 - 8<32>:word32]
	edxOut = edx_36
	esiOut = esi_54
	return esi_44
l005DE86B:
	ecx_5 = 0<32>
l005DE86D:
	word32 eax_66 = operator new(ecx_5 << 4<32>)
	edxOut = edx
	esiOut = esi
	return eax_66
fn005DE860_exit:


